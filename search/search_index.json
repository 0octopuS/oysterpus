{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\/\\[\\]()\"`]+|\\.?(?!\\/\\d)|&[lg]t;|(?!\\/b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Home","text":""},{"location":"index.html#zhongxuan-xie","title":"Zhongxuan Xie","text":""},{"location":"index.html#introduction-of-this-website","title":"Introduction of this website","text":"<p>This is a personal notebook of my study. From this you can have a glimpse of what technology stack I acquired. I used to have a similar website but the content is in Chinese. Here is the table of content of current website :</p> <ul> <li>Supercomputing</li> <li>DevOps</li> <li>Network</li> <li>Tools</li> <li>Better than unknown</li> </ul>"},{"location":"index.html#personal-introduction","title":"Personal Introduction","text":"<p>I'm Zhongxuan Xie, a cybersecurity enthusiast with a strong educational background, specializing in Cloud and Network Infrastructure. Here's a glimpse of my academic journey and achievements:</p>"},{"location":"index.html#bachelors-degree","title":"\ud83c\udf93 Bachelor's Degree","text":"<ul> <li>\ud83d\udd18 Bachelor's Degree in Cybersecurity from Shandong University, where I graduated with honours (GPA: 89.57/100).</li> <li>\ud83d\udd18 Recipient of the prestigious Shandong Government Scholarship.</li> <li>\ud83d\udd18 Recognized as an Outstanding Graduate during my undergraduate years.</li> </ul>"},{"location":"index.html#masters-degree","title":"\ud83c\udf1f Master's Degree","text":"<p>I pursued a Master's degree in Cloud and Network Infrastructure as part of the EIT Digital Double Degree Program:</p> <ul> <li>\ud83d\udd18 Entry year at Aalto University. (GPA: 5/5)</li> <li>\ud83d\udd18 Exit year at  KTH Royal Institute of Technology.</li> <li>\ud83d\udd18 Recipient of a Full-funded Scholarship from EIT Digital, a testament to my dedication and academic excellence.</li> </ul> <p>My academic journey has equipped me with a solid foundation in cybersecurity, with a specific focus on Cloud and Network Infrastructure. I am passionate about securing digital ecosystems in this ever-evolving landscape.</p> <p>\ud83d\udd12 Cybersecurity Passion: My passion for cybersecurity extends beyond the classroom. I am dedicated to applying my expertise in Cloud and Network Infrastructure to enhance digital security, ensuring the robustness of today's interconnected world.</p>"},{"location":"Archive/index.html","title":"Archive","text":"<p>The archive folder stores mainly the note in Chinese.</p>"},{"location":"Archive/C%2B%2B/0.topic.html","title":"Topics to explore","text":""},{"location":"Archive/C%2B%2B/0.topic.html#topic-lists","title":"Topic Lists","text":"<ul> <li> <p> order of construction / destruction(C++98)</p> </li> <li> <p> struct(C++98)</p> </li> <li> class vs struct(C++98)</li> <li> static member functions(C++98)</li> <li> virtual member functions(C++98)</li> <li> non-<code>const</code> member functions(C++98)</li> <li> const member functions(C++11)</li> <li> <p> private vs public(C++98)</p> </li> <li> <p> templates(C++98)</p> </li> <li> variadic templates(C++11)</li> <li> template argument type deduction(C++98)</li> <li> alias template(C++11)</li> <li> template instantiations(C++98)</li> <li> template parameter pattern matching(C++98)</li> <li> explicit lambdas templates(C++17)</li> <li> class template argument deduction(C++17)</li> <li> <p> non-type template parameters(C++98)</p> </li> <li> <p> function parameters(C++98)</p> </li> <li> pass-by-value(C++98)</li> <li> pass-by-reference(C++98)</li> <li> pass-by-value vs pass-by-reference(C++98)</li> <li> <p> efficiency when chaining functions</p> </li> <li> <p> lambdas(C++11)</p> </li> <li> immediately invoked lambda(C++11)</li> <li> generalized lambda capture(C++14)</li> <li> variadic lambdas(C++14)</li> <li> <p> recursive lambdas(C++23)</p> </li> <li> <p> attributes on parameters(C++11)</p> </li> <li> constexpr(C++11)</li> <li> operator overloading(C++98)</li> <li> call operator(C++98)</li> <li> braced initialization(C++11)</li> <li> <code>auto</code> return type deduction(C++14)</li> <li> \"compiler magic\"</li> <li> pre-increment vs post-increment</li> <li> trailing return type</li> <li> implicit conversion(C++98)</li> <li> function pointers(C++98)</li> <li> <p> using aliases(C++11)</p> </li> <li> <p> <code>nonexcept</code> (C++11)</p> </li> <li> <code>nonexcept</code> in the type system(C++11)</li> <li> fold expressions(C++17)</li> <li> function attributes(C++17)</li> <li> <p> concepts(c++20)</p> </li> <li> <p> integer sequences(C++11)</p> </li> <li> <p> tuples(C++11)</p> </li> <li> unpacking of tuples(C++11)</li> <li> variadic <code>sizeof...()</code> operator(C++11)</li> <li> direct-initialization of members(C++11)</li> <li> <p> <code>mutable</code> keyword(C++98)</p> </li> <li> <p> reference members(C++98)</p> </li> <li> member copies(C++98)</li> <li> object layout(C++98)</li> <li> <p> member padding(C++98)</p> </li> <li> <p> return value optimization(C++98)</p> </li> <li> guaranteed return value optimization(C++17)</li> <li> initializer_list(C++11)</li> <li> deducing <code>this</code>(C++23)</li> <li> recursive function</li> <li> trivally copyable types(C++98)</li> <li> higher order functions</li> <li> dangling references</li> <li> undefined behavior</li> <li> inheritance(C++98)</li> <li> multiple inheritance(C++98)</li> <li> function hiding(C++98)</li> <li> varadic <code>using</code> declarations(C++17)</li> <li> <p> scoping / loopup rules(C++98)</p> </li> <li> <p> deduction guides(C++17)</p> </li> <li> algorithms(C++11)</li> <li> ranges(C++20)</li> <li> (C++11) <li> member function pointers(C++98)</li> <li> special member functions(C++98)</li> <li> member function call syntax(C++98)</li> <li> type erasure(C++98)</li> <li> <p> dynamic vs automatic storage(C++98)</p> </li> <li> <p> writng your own concepts?</p> </li> <li> type_traits?</li> <li> operator &lt;=&gt;</li> <li> protected</li> <li> virtual inheritance</li> <li> compilation model</li> <li> ODR violations</li> <li> preprocessor</li> <li> project structure and layout</li> <li> the breadth of the stl</li> <li> variable templates</li> <li> coroutines</li> <li> <p> modules</p> </li> <li> <p> exceptions, catch ellipse</p> </li> <li> structured binding</li> <li> forward declaration</li> <li> namespaces</li> <li> rule of 5, default and nontrivial/virtual destructors</li> <li> memory, pointers and smart pointers</li> <li> iterators and writing your own iterator</li> <li> multithreading</li> <li> numeric</li> <li> explicit/implicit conversions</li> <li> casting, slicing</li> <li> variant &amp; visitor</li> <li> abstract class (pure virtual), delete, final</li> <li> consteval</li> <li> packages &amp; libraries, cmake</li> <li> signed/unsigned arithmetic, bitwise operations, bitset</li>"},{"location":"Archive/C%2B%2B/0.topic.html#think-about","title":"Think about","text":""},{"location":"Archive/C%2B%2B/0.topic.html#stl-algorithms-intuition","title":"STL algorithms intuition","text":"<ol> <li>\u200b\u751f\u6210\u200b\u6570\u7ec4\u200b    \u200b\u8ba1\u7b97\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b max - min   https://godbolt.org/z/G9T4raqMv</li> <li>reduce everything</li> <li>accumlate / multiple</li> <li>min / max / average</li> <li>any / all / none</li> <li>count / find</li> <li>LCP 06. \u200b\u62ff\u200b\u786c\u5e01\u200b</li> <li>query operations\u200b\u5b9e\u8df5\u200b</li> <li>\u200b\u7528\u200b <code>equal / mismatch</code>\u200b\u9a8c\u8bc1\u200b\u56de\u6587\u200b\u4e32\u200b </li> </ol>"},{"location":"Archive/C%2B%2B/0.topic.html#_1","title":"\u57fa\u672c\u200b\u8bb0\u53f7","text":"<p>\ud83d\udd18 \u200b\u4ee3\u8868\u200b\u4e00\u4e2a\u200b\u8bed\u6cd5\u200b\u4e2d\u200b\u7684\u200b\u67d0\u4e2a\u200b\u5206\u652f\u200b \u270f\ufe0f \u200b\u4ee3\u8868\u200b\u4e0d\u60f3\u200b\u7528\u200b\u4e09\u7ea7\u200b\u6807\u9898\u200b\uff0c\u200b\u4f46\u662f\u200b\u786e\u5b9e\u200b\u662f\u200b\u67d0\u4e2a\u200b\u5185\u5bb9\u200b\u7684\u200b\u5b50\u96c6\u200b \ud83c\udf1f \u200b\u4eae\u70b9\u200b\uff0c\u200b\u5f88\u200b\u6709\u7528\u200b \u2757 \u200b\u6613\u9519\u200b\u70b9\u200b\uff0c\u200b\u5927\u200b\u9707\u60ca\u200b \ud83d\udcd6 \u200b\u53c2\u8003\u8d44\u6599\u200b</p>"},{"location":"Archive/C%2B%2B/10%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B%E5%90%8E%E7%BD%AE.html","title":"\u51fd\u6570\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u540e\u7f6e","text":""},{"location":"Archive/C%2B%2B/10%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B%E5%90%8E%E7%BD%AE.html#_2","title":"\u51fd\u6570\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u540e\u7f6e\u200b\u4f7f\u7528\u200b\u65b9\u6cd5","text":"<p>\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b<code>auto</code>\u200b\u8fdb\u884c\u200b\u5360\u4f4d\u200b\uff0c\u200b\u800c\u200b\u5c06\u200b\u7c7b\u578b\u200b\u8fdb\u884c\u200b\u540e\u7f6e\u200b\u3002</p> <pre><code>auto foo() -&gt; int\n{\n    return 42;\n}\n</code></pre> <p>!!![note]     \u200b\u4e00\u822c\u200b\u5728\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u8f83\u4e3a\u200b\u590d\u6742\u200b\u7684\u200b\u65f6\u5019\u200b\u4f7f\u7528\u200b\uff0c\u200b\u4f8b\u5982\u200b\u9700\u8981\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u6307\u9488\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002     <pre><code>int add(int);\nauto foo() -&gt; int(*)(int){\n    return add;\n}\n</code></pre></p>"},{"location":"Archive/C%2B%2B/10%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B%E5%90%8E%E7%BD%AE.html#_3","title":"\u63a8\u5bfc\u200b\u51fd\u6570\u200b\u6a21\u677f\u200b\u8fd4\u56de\u200b\u7c7b\u578b","text":"<p>\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u540e\u7f6e\u200b\u7684\u200b\u4e00\u4e2a\u200b\u529f\u80fd\u200b\u662f\u200b\u63a8\u5bfc\u200b\u51fd\u6570\u200b\u6a21\u677f\u200b\u7684\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u3002 \u200b\u4e3a\u4e86\u200b\u8ba9\u200b\u4ee5\u4e0b\u200bsum\u200b\u51fd\u6570\u200b\u81ea\u5df1\u200b\u63a8\u5bfc\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\uff0c\u200b\u9700\u8981\u200b\u7528\u200b<code>decltype</code>\u200b\u8bf4\u660e\u7b26\u200b\uff0c\u200b\u7136\u800c\u200b\u5b83\u200b\u4e0d\u80fd\u200b\u76f4\u63a5\u200b\u5199\u200b\u5728\u200b\u51fd\u6570\u200b\u58f0\u660e\u200b\u524d\u200b\u3002\u200b\u901a\u8fc7\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u540e\u7f6e\u200b\u80fd\u591f\u200b\u5b9e\u73b0\u200b\u8be5\u200b\u529f\u80fd\u200b\u3002</p> <pre><code>template&lt;calss T1,class T2&gt;\nauto sum(T1 t1, T2 t2) -&gt; decltype(t1 + t2)\n{\n    return t1 + t2;\n}\nint main(){\n    auto x1 = sum1(4,2);\n}\n</code></pre>"},{"location":"Archive/C%2B%2B/auto%E5%8D%A0%E4%BD%8D%E7%AC%A6.html","title":"<code>auto</code>\u200b\u5360\u4f4d\u200b\u7b26\u200b(C++11~C++17)","text":""},{"location":"Archive/C%2B%2B/auto%E5%8D%A0%E4%BD%8D%E7%AC%A6.html#1","title":"1. \u200b\u5b9a\u4e49\u200b\u53ca\u200b\u4f7f\u7528","text":"<p><code>auto</code>\u200b\u5360\u4f4d\u200b\u7b26\u200b\u7528\u4e8e\u200b\u5728\u200b\u58f0\u660e\u200b\u53d8\u91cf\u200b\u65f6\u200b\u6839\u636e\u200b\u521d\u59cb\u5316\u200b\u8868\u8fbe\u5f0f\u200b\u81ea\u52a8\u200b\u63a8\u65ad\u200b\u8be5\u200b\u53d8\u91cf\u200b\u7684\u200b\u7c7b\u578b\u200b\u3001\u200b\u58f0\u660e\u200b\u51fd\u6570\u200b\u65f6\u200b\u51fd\u6570\u200b\u8fd4\u56de\u503c\u200b\u7684\u200b\u5360\u4f4d\u200b\u7b26\u200b\u3002</p> <pre><code>auto i = 5;               // i\u200b\u88ab\u200b\u63a8\u65ad\u200b\u4e3a\u200bint\nauto str = \"Hello World\"; // str\u200b\u88ab\u200b\u63a8\u65ad\u200b\u4e3a\u200bconst char*\nauto sum(int a1, int a2) -&gt; int{   // \u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u540e\u7f6e\u200b\uff0cauto\u200b\u4e3a\u200b\u8fd4\u56de\u503c\u200b\u5360\u4f4d\u200b\u7b26\u200b\n    return a1 + a2; \n}\n</code></pre> <p>\u200b\u5728\u200b\u5bf9\u200b\u53d8\u91cf\u200b\u8fdb\u884c\u200b\u521d\u59cb\u5316\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c<code>auto</code>\u200b\u5173\u952e\u5b57\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u7ed9\u5b9a\u200b\u7684\u200b\u8d4b\u503c\u200b\u6765\u200b\u63a8\u65ad\u200b\u53d8\u91cf\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002 \u200b\u800c\u200b<code>auto</code>\u200b\u4f5c\u4e3a\u200b\u51fd\u6570\u200b\u8fd4\u56de\u503c\u200b\u5360\u4f4d\u200b\u7b26\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u8be5\u200b\u65b9\u6cd5\u200b\u4e3b\u8981\u200b\u7528\u4e8e\u200b\u51fd\u6570\u200b\u6a21\u677f\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u63a8\u5bfc\u200b\u3002</p> <p>!!![note]     \u200b\u4e0d\u8981\u200b\u6ee5\u7528\u200b<code>auto</code>\uff0c\u200b\u6700\u597d\u200b\u662f\u200b\u5728\u200b\u4ee5\u4e0b\u200b\u4e24\u79cd\u200b\u60c5\u51b5\u200b\u4f7f\u7528\u200b     - \u200b\u4e00\u773c\u200b\u5c31\u200b\u80fd\u200b\u770b\u51fa\u200b\u521d\u59cb\u5316\u200b\u7c7b\u578b\u200b\u7684\u200b\u65f6\u5019\u200b(\u200b\u4f8b\u5982\u200b\u5bb9\u5668\u200b\u7684\u200b<code>iterator</code>: <code>auto it = map.begin()</code>)\u3002     - \u200b\u5bf9\u4e8e\u200b\u590d\u6742\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4f8b\u5982\u200b<code>lambda</code>\u200b\u8868\u8fbe\u5f0f\u200b\u3001<code>bind</code>\u200b\u7b49\u200b(\u200b\u4f8b\u5982\u200b<code>auto l = [](int a1,int a2){ return a1+a2;}</code>)\u3002</p> <p>\u200b\u4f7f\u7528\u200b<code>auto</code>\u200b\u5173\u952e\u5b57\u200b\u58f0\u660e\u200b\u53d8\u91cf\u200b\u65f6\u65f6\u200b\uff0c\u200b\u4e00\u5b9a\u200b\u8981\u200b\u8fdb\u884c\u200b\u521d\u59cb\u5316\u200b\uff0c\u200b\u5426\u5219\u200b\u7f16\u8bd1\u5668\u200b\u65e0\u6cd5\u200b\u63a8\u65ad\u200b\u7c7b\u578b\u200b\u5219\u200b\u4f1a\u200b\u51fa\u9519\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>auto i; // \u200b\u7f16\u8bd1\u5668\u200b\ni = 5\uff1b\n</code></pre> <p>\u200b\u4f7f\u7528\u200b<code>auto</code>\u200b\u58f0\u660e\u200b\u53d8\u91cf\u200b\u65f6\u6709\u200b\u4ee5\u4e0b\u200b4\u200b\u4e2a\u200b\u6ce8\u610f\u200b\u70b9\u200b\uff1a</p> <ul> <li> <p>\u200b\u5f53\u200b\u7528\u200b\u4e00\u4e2a\u200b<code>auto</code>\u200b\u5173\u952e\u5b57\u200b\u58f0\u660e\u200b\u591a\u4e2a\u200b\u53d8\u91cf\u200b\uff0c\u200b\u7f16\u8bd1\u5668\u200b\u4ece\u5de6\u5230\u53f3\u200b\u63a8\u5bfc\u200b\uff0c\u200b\u4ee5\u200b\u6700\u200b\u5de6\u200b\u8868\u8fbe\u5f0f\u200b\u5224\u65ad\u200b<code>auto</code>\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>int n = 5;\nauto *pn = &amp;n, m = 10; // *pn\u200b\u88ab\u200b\u63a8\u5bfc\u200b\u4e3a\u200bint*\uff0cauto\u200b\u63a8\u5bfc\u200b\u4e3a\u200bint\nauto *pn = &amp;n, m = 10.1; // \u200b\u7f16\u8bd1\u200b\u5931\u8d25\u200b\uff0c\u200b\u58f0\u660e\u200b\u7c7b\u578b\u200b\u4e0d\u200b\u7edf\u4e00\u200b\n</code></pre> </li> <li> <p>\u200b\u5f53\u200b\u7528\u200b\u6761\u4ef6\u200b\u8868\u8fbe\u5f0f\u200b\u521d\u59cb\u5316\u200b<code>auto</code>\u200b\u58f0\u660e\u200b\u7684\u200b\u53d8\u91cf\u200b\u65f6\u200b\uff0c\u200b\u7f16\u8bd1\u5668\u200b\u603b\u662f\u200b\u9009\u62e9\u200b\u7528\u200b\u8868\u8fbe\u80fd\u529b\u200b\u66f4\u5f3a\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>auto i = true ? 5 : 8.0; // i \u200b\u88ab\u200b\u63a8\u5bfc\u200b\u4e3a\u200bdouble\u200b\u7c7b\u578b\u200b \n</code></pre> </li> <li> <p>C++11\u200b\u4e2d\u200b\uff0c<code>auto</code>\u200b\u65e0\u6cd5\u200b\u5bf9\u200b\u6210\u5458\u200b\u53d8\u91cf\u200b\u521d\u59cb\u5316\u200b\u8fdb\u884c\u200b\u7c7b\u578b\u200b\u63a8\u65ad\u200b\uff0c\u200b\u9664\u975e\u200b\u4f7f\u7528\u200b<code>const</code>\u200b\u9650\u5b9a\u7b26\u200b\u3002\u200b\u800c\u200bC++17\u200b\u4e2d\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u9759\u6001\u200b\u6210\u5458\u200b\u53d8\u91cf\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6ca1\u6709\u200bconst\u3002</p> <pre><code>struct sometype {\n    auto i = 5; // C++11\u200b\u9519\u8bef\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u7f16\u8bd1\u200b\u901a\u8fc7\u200b\n}\n\nstruct sometype {\n    static const auto i = 5; // C++11\u200b\u7f16\u8bd1\u200b\u6210\u529f\u200b\uff0ci\u200b\u5e38\u200b\u91cf\u5316\u200b\n}\n\nstruct sometype {\n    static inline auto i = 5; // C++17\u200b\u7f16\u8bd1\u200b\u6210\u529f\u200b\n}\n</code></pre> </li> <li> <p>C++20\u200b\u524d\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u5728\u200b\u51fd\u6570\u200b\u5f62\u53c2\u200b\u5217\u8868\u200b\u4e2d\u200b\u4f7f\u7528\u200b<code>auto</code>\u200b\u58f0\u660e\u200b\u5f62\u53c2\u200b\u3002</p> <pre><code>void echo(auto str){...} // C++20\u200b\u524d\u200b\u7f16\u8bd1\u200b\u5931\u8d25\u200b\uff0c C++20\u200b\u6210\u529f\u200b\n</code></pre> </li> </ul>"},{"location":"Archive/C%2B%2B/auto%E5%8D%A0%E4%BD%8D%E7%AC%A6.html#2","title":"2. \u200b\u7c7b\u578b\u200b\u63a8\u5bfc\u200b\u89c4\u5219","text":"<p><code>auto</code>\u200b\u7c7b\u578b\u200b\u63a8\u5bfc\u200b\u9075\u5faa\u200b\u4ee5\u4e0b\u200b\u89c4\u5219\u200b\uff1a</p> <ul> <li> <p>\u200b\u5982\u679c\u200b<code>auto</code>\u200b\u58f0\u660e\u200b\u53d8\u91cf\u200b\u65f6\u200b\u6309\u503c\u200b\u521d\u59cb\u5316\u200b\uff0c\u200b\u5219\u200b\u63a8\u5bfc\u200b\u51fa\u200b\u7684\u200b\u7c7b\u578b\u200b\u4f1a\u200b\u5ffd\u7565\u200b<code>cv</code>\u200b\u9650\u5b9a\u7b26\u200b\u3002</p> <pre><code>const int i = 5; \nauto j = i;  // auto\u200b\u63a8\u5bfc\u200b\u4e3a\u200bint\uff0c\u200b\u4e0d\u662f\u200bconst int(\u200b\u6309\u503c\u200b\u521d\u59cb\u5316\u200b)\nauto &amp;m = i; // auto\u200b\u63a8\u5bfc\u200b\u4e3a\u200bconst int, m\u200b\u63a8\u5bfc\u200b\u4e3a\u200bconst int&amp;(\u200b\u6309\u200b\u5f15\u7528\u200b\u521d\u59cb\u5316\u200b)\nauto *k = il // auto\u200b\u63a8\u5bfc\u200b\u4e3a\u200bconst int, k\u200b\u63a8\u5bfc\u200b\u4e3a\u200bconst int*(\u200b\u6309\u200b\u6307\u9488\u200b\u521d\u59cb\u5316\u200b)\nconst auto n = j; // auto\u200b\u63a8\u5bfc\u200b\u4e3a\u200bint, n\u200b\u7684\u200b\u7c7b\u578b\u200b\u4e3a\u200bconst int(\u200b\u7528\u200bconst\u200b\u7ed3\u5408\u200bauto)\n</code></pre> </li> <li> <p>\u200b\u5982\u679c\u200b\u76ee\u6807\u200b\u5bf9\u8c61\u200b\u662f\u200b\u5f15\u7528\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5f15\u7528\u200b\u5c5e\u6027\u200b\u5c06\u4f1a\u200b\u88ab\u200b\u5ffd\u7565\u200b\u3002</p> <pre><code>int i = 5;\nint &amp;j = i;\nauto m = j; /// auto\u200b\u63a8\u5bfc\u200b\u4e3a\u200bint\uff0c\u200b\u4e0d\u662f\u200bint&amp;\n</code></pre> </li> <li> <p>\u200b\u4f7f\u7528\u200b<code>auto</code>\u200b\u548c\u200b\u4e07\u80fd\u200b\u5f15\u7528\u200b\u58f0\u660e\u200b\u53d8\u91cf\u200b\u65f6\u200b\uff08mark:\u200b\u53f3\u503c\u200b\u5f15\u7528\u200b\uff09\uff0c\u200b\u5bf9\u4e8e\u200b\u5de6\u503c\u200b\u4f1a\u200b\u5c06\u200bauto\u200b\u63a8\u5bfc\u200b\u4e3a\u200b\u5f15\u7528\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>int i = 5;    // \nauto&amp;&amp; m = i; // auto\u200b\u63a8\u5bfc\u200b\u4e3a\u200bint&amp;(i\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5de6\u503c\u200b)\nauto&amp;&amp; j = 5; // auto\u200b\u63a8\u5bfc\u200b\u4e3a\u200bint(5\u200b\u662f\u200b\u4e00\u4e2a\u200b\u53f3\u503c\u200b)\n</code></pre> </li> <li> <p>\u200b\u5982\u679c\u200b\u76ee\u6807\u200b\u5bf9\u8c61\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b/\u200b\u51fd\u6570\u200b\uff0c\u200b\u5219\u200b<code>auto</code>\u200b\u4f1a\u200b\u88ab\u200b\u63a8\u5bfc\u200b\u4e3a\u200b\u5bf9\u5e94\u200b\u7684\u200b\u6307\u9488\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>int i[5];\nauto m = i; // auto\u200b\u63a8\u5bfc\u200b\u4e3a\u200bint*\nint sum(int a1, int a2){\n    return a1 + a2;\n}\nauto j = sum; // auto\u200b\u63a8\u5bfc\u200b\u4e3a\u200bint(_cdecl *)(int,int)\n</code></pre> </li> <li> <p>\u200b\u5f53\u200b<code>auto</code>\u200b\u4e0e\u200b\u5217\u8868\u200b\u521d\u59cb\u5316\u200b\u7ec4\u5408\u200b\u65f6\u200b\uff1a</p> </li> <li>\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u5217\u8868\u200b\u521d\u59cb\u5316\u200b\uff0c\u200b\u5217\u8868\u200b\u4e2d\u200b\u5fc5\u987b\u200b\u4e3a\u5355\u200b\u5143\u7d20\u200b\uff0c\u200b\u5426\u5219\u200b\u65e0\u6cd5\u200b\u7f16\u8bd1\u200b\u3002</li> <li> <p>\u200b\u7528\u200b\u7b49\u200b\u53f7\u200b\u52a0\u200b\u5217\u8868\u200b\u521d\u59cb\u5316\u200b\uff0c\u200b\u5217\u8868\u200b\u4e2d\u200b\u53ef\u200b\u5305\u542b\u200b\u5355\u4e2a\u200b\u3001\u200b\u591a\u4e2a\u200b\u5143\u7d20\u200b\uff08\u200b\u7c7b\u578b\u200b\u5fc5\u987b\u200b\u76f8\u540c\u200b\uff09\uff0cauto\u200b\u88ab\u200b\u63a8\u65ad\u200b\u4e3a\u200b<code>std::initializer_list&lt;T&gt;</code>\u3002</p> <pre><code>auto x1 = {1,2};   // x1\u200b\u63a8\u5bfc\u200b\u4e3a\u200bstd::initializer_list&lt;T&gt;\nauto x2 = {1,2.0}; // \u200b\u7b49\u200b\u53f7\u200b+\u200b\u591a\u200b\u5143\u7d20\u200b\uff0c\u200b\u7c7b\u578b\u200b\u4e0d\u540c\u200b\uff0c\u200b\u7f16\u8bd1\u200b\u5931\u8d25\u200b\nauto x3{1,2};      // \u200b\u76f4\u63a5\u200b+\u200b\u591a\u200b\u5143\u7d20\u200b\uff0c\u200b\u7f16\u8bd1\u200b\u5931\u8d25\u200b\nauto x4{3};        // \u200b\u76f4\u63a5\u200b+\u200b\u5355\u200b\u5143\u7d20\u200b\uff0cx4\u200b\u63a8\u5bfc\u200b\u4e3a\u200bint\n</code></pre> </li> </ul>"},{"location":"Archive/C%2B%2B/auto%E5%8D%A0%E4%BD%8D%E7%AC%A6.html#3","title":"3. \u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u63a8\u5bfc","text":"<p>\u200b\u5bf9\u200b\u51fd\u6570\u200b\u7c7b\u578b\u200b\u8fd4\u56de\u200b\u53ef\u4ee5\u200b\u58f0\u660e\u200b\u4e3a\u200b<code>auto</code>\uff0c\u200b\u5982\u679c\u200b\u6709\u200b\u591a\u5904\u200b\u8fd4\u56de\u200b\uff0c\u200b\u90a3\u4e48\u200b\u7c7b\u578b\u200b\u503c\u200b\u9700\u8981\u200b\u76f8\u540c\u200b\u3002</p> <pre><code>auto large(int a, int b){\n    if (a &gt;= b){\n        return a;\n    }\n    else{\n        return b;\n    }\n</code></pre>"},{"location":"Archive/C%2B%2B/auto%E5%8D%A0%E4%BD%8D%E7%AC%A6.html#4-lambdaauto","title":"4. <code>lambda</code>\u200b\u8868\u8fbe\u5f0f\u200b\u4e2d\u200b\u4f7f\u7528\u200b<code>auto</code>","text":"<p>C++14\u200b\u53ef\u4ee5\u200b\u5c06\u200b<code>auto</code>\u200b\u5199\u200b\u5230\u200b<code>lambda</code>\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u5f62\u200b\u53c2\u4e2d\u200b\uff0c\u200b\u8fd9\u6837\u200b\u5c31\u200b\u5f97\u5230\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u6cdb\u578b\u200b\u8868\u8fbe\u5f0f\u200b\u3002</p> <pre><code>auto l = [](auto a1, auto a2){ return a1 + a2; }\nauto retval = l(5,5.0); //\u200b\u63a8\u5bfc\u200b\u4e3a\u200bdouble\u200b\u7c7b\u578b\u200b\n</code></pre>"},{"location":"Archive/C%2B%2B/auto%E5%8D%A0%E4%BD%8D%E7%AC%A6.html#5","title":"5. \u200b\u975e\u200b\u7c7b\u578b\u200b\u6a21\u677f\u200b\u5f62\u53c2\u200b\u5360\u4f4d\u200b\u7b26","text":"<p>C++17\u200b\u540e\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b\u975e\u200b\u7c7b\u578b\u200b\u6a21\u677f\u200b\u5f62\u53c2\u200b\u7684\u200b\u5360\u4f4d\u200b\u7b26\u200b\uff0c\u200b\u4f8b\u5982\u200b</p> <pre><code>template &lt;auto N&gt;\nvoid f(){std:: cout &lt;&lt; N; }\n\nint main(){\n    f&lt;5&gt;();   // N\u200b\u4e3a\u200bint\u200b\u7c7b\u578b\u200b\n    f&lt;'c'&gt;(); // N\u200b\u4e3a\u200bChar\u200b\u7c7b\u578b\u200b\n    f&lt;5.0&gt;(); // \u200b\u7f16\u8bd1\u200b\u5931\u8d25\u200b\uff0c\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u4e0d\u80fd\u200b\u4e3a\u200bdouble\n}\n</code></pre>"},{"location":"Archive/C%2B%2B/%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8.html","title":"\u53f3\u503c\u200b\u5f15\u7528","text":""},{"location":"Archive/C%2B%2B/%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8.html#_2","title":"\u5de6\u503c\u200b\u548c\u200b\u53f3\u503c","text":"<ul> <li>\u200b\u5de6\u503c\u200b\uff1a\u200b\u4e00\u4e2a\u200b\u6307\u5411\u200b\u7279\u5b9a\u200b\u5185\u5b58\u200b\u7684\u200b\u5177\u6709\u200b\u540d\u79f0\u200b\u7684\u200b\u503c\u200b(\u200b\u5177\u540d\u200b\u5bf9\u8c61\u200b)\uff0c\u200b\u6709\u7740\u200b\u76f8\u5bf9\u200b\u7a33\u5b9a\u200b\u7684\u200b\u5185\u5b58\u5730\u5740\u200b\u548c\u200b\u8f83\u200b\u957f\u200b\u7684\u200b\u65f6\u95f4\u200b\u5468\u671f\u200b\u3002</li> <li>\u200b\u53f3\u503c\u200b\uff1a\u200b\u4e0d\u200b\u6307\u5411\u200b\u7a33\u5b9a\u200b\u5185\u5b58\u5730\u5740\u200b\u7684\u200b\u533f\u540d\u200b\u503c\u200b(\u200b\u4e0d\u200b\u5177\u540d\u200b\u5bf9\u8c61\u200b)\u3002</li> </ul> <p>\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>&amp;</code>\u200b\u8fd0\u7b97\u7b26\u200b\u662f\u5426\u200b\u80fd\u200b\u53d6\u200b\u5730\u5740\u200b\u6765\u200b\u5224\u65ad\u200b\u662f\u5426\u662f\u200b\u5de6\u503c\u200b\uff0c\u200b\u4f8b\u5982\u200b<code>x++</code>\u200b\u4e3a\u200b\u53f3\u503c\u200b\uff0c<code>++x</code>\u200b\u4e3a\u200b\u5de6\u503c\u200b\uff08\u200b\u53ef\u4ee5\u200b\u8bd5\u8bd5\u200b\u5206\u522b\u200b\u5bf9\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u8868\u8fbe\u5f0f\u200b\u53d6\u200b\u5730\u5740\u200b\uff09\u3002</p>"},{"location":"Archive/C%2B%2B/%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8.html#_3","title":"\u5de6\u503c\u200b\u5f15\u7528","text":"<p>\u200b\u5de6\u503c\u200b\u5f15\u7528\u200b\u662f\u200b\u5e38\u89c1\u200b\u64cd\u4f5c\u200b\u4e86\u200b\uff0c\u200b\u5f53\u200b\u9700\u8981\u200b\u5c06\u200b\u4e00\u4e2a\u200b\u5bf9\u8c61\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u4f20\u9012\u200b\u7ed9\u200b\u5b50\u51fd\u6570\u200b\u7684\u200b\u65f6\u5019\u200b\u7ecf\u5e38\u200b\u4f7f\u7528\u200b\uff0c\u200b\u8fd9\u6837\u200b\u53ef\u4ee5\u200b\u907f\u514d\u200b\u521b\u5efa\u200b\u4e34\u65f6\u200b\u5bf9\u8c61\u200b\u7684\u200b\u64cd\u4f5c\u200b\u3002</p>"},{"location":"Archive/C%2B%2B/algorithm/heap.html","title":"Heap operations","text":"<pre><code>#include &lt;algorithm&gt;\n#include &lt;functional&gt;\n#include &lt;iostream&gt;\n#include &lt;string_view&gt;\n#include &lt;vector&gt;\n\nvoid print(std::string_view text, std::vector&lt;int&gt; const&amp; v = {}) {\n    std::cout &lt;&lt; text &lt;&lt; \": \";\n    for (const auto&amp; e : v) std::cout &lt;&lt; e &lt;&lt; ' ';\n    std::cout &lt;&lt; '\\n';\n}\n\nint main()\n{\n    print(\"Max heap\");\n\n    std::vector&lt;int&gt; v { 3, 2, 4, 1, 5, 9 };\n    print(\"initially, v\", v);\n\n    std::make_heap(v.begin(), v.end());\n    print(\"after make_heap, v\", v);\n\n    std::pop_heap(v.begin(), v.end());\n    print(\"after pop_heap, v\", v);\n\n    auto top = v.back();\n    v.pop_back();\n    print(\"former top element\", {top});\n    print(\"after removing the former top element, v\", v);\n\n    print(\"\\nMin heap\");\n\n    std::vector&lt;int&gt; v1 { 3, 2, 4, 1, 5, 9 };\n    print(\"initially, v1\", v1);\n\n    std::make_heap(v1.begin(), v1.end(), std::greater&lt;&gt;{});\n    print(\"after make_heap, v1\", v1);\n\n    std::pop_heap(v1.begin(), v1.end(), std::greater&lt;&gt;{});\n    print(\"after pop_heap, v1\", v1);\n\n    auto top1 = v1.back();\n    v1.pop_back();\n    print(\"former top element\", {top1});\n    print(\"after removing the former top element, v1\", v1);\n}\n\nMax heap:\ninitially, v: 3 2 4 1 5 9 \nafter make_heap, v: 9 5 4 1 2 3 \nafter pop_heap, v: 5 3 4 1 2 9 \nformer top element: 9\nafter removing the former top element, v: 5 3 4 1 2 \n\nMin heap:\ninitially, v1: 3 2 4 1 5 9 \nafter make_heap, v1: 1 2 4 3 5 9 \nafter pop_heap, v1: 2 3 4 9 5 1 \nformer top element: 1\nafter removing the former top element, v1: 2 3 4 9 5\n</code></pre>"},{"location":"Archive/C%2B%2B/algorithm/heap.html#is_heap","title":"is_heap","text":"<p>\u200b\u63a5\u6536\u200b\u4e24\u4e2a\u200b\u8fed\u4ee3\u200b\u5668\u200b\u548c\u200b\uff08\u200b\u4e00\u4e2a\u4e8c\u5143\u200b\u64cd\u4f5c\u200b\u6bd4\u8f83\u200b\uff09\u3002\u200b\u68c0\u67e5\u200b\u8303\u56f4\u200b\u5185\u200b\u662f\u5426\u662f\u200b\u5806\u200b\u3002 \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1a\\(O(N)\\)\u200b\u6b21\u200b\u6bd4\u8f83\u200b\uff0c\u200b\u5176\u4e2d\u200b <code>N=std::distance(first, last)</code>\u3002</p>"},{"location":"Archive/C%2B%2B/algorithm/heap.html#is_heap_until","title":"is_heap_until","text":"<p>\u200b\u63a5\u6536\u200b\u4e24\u4e2a\u200b\u8fed\u4ee3\u200b\u5668\u200b\u548c\u200b\uff08\u200b\u4e00\u4e2a\u4e8c\u5143\u200b\u64cd\u4f5c\u200b\u6bd4\u8f83\u200b\uff09\u3002\u200b\u68c0\u67e5\u200b\u8303\u56f4\u200b\u5185\u200b\u6700\u5927\u200b\u5230\u200b\u54ea\u91cc\u200b\u662f\u200b\u5806\u200b\uff0c\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u6307\u5411\u200b\u8fd9\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u8fed\u4ee3\u200b\u5668\u200b\u3002 \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1a\\(O(N)\\)\u200b\u6b21\u200b\u6bd4\u8f83\u200b\uff0c\u200b\u5176\u4e2d\u200b <code>N=std::distance(first, last)</code>\u3002</p> <pre><code> std::make_heap(v.begin(), v.end());\n v.push_back(2);\n v.push_back(6);\n auto heap_end = std::is_heap_until(v.begin(), v.end());\n\n// all of v:  9 5 4 1 1 3 2 6 \n// only heap: 9 5 4 1 1 3 2\n</code></pre>"},{"location":"Archive/C%2B%2B/algorithm/heap.html#make_heap","title":"make_heap","text":"<p>\u200b\u63a5\u6536\u200b\u4e24\u4e2a\u200b\u8fed\u4ee3\u200b\u5668\u200b\u548c\u200b\uff08\u200b\u4e00\u4e2a\u4e8c\u5143\u200b\u64cd\u4f5c\u200b\u6bd4\u8f83\u200b\uff09\u3002\u200b\u9ed8\u8ba4\u200b\u4f7f\u7528\u200b <code>(&lt;)</code>\uff0c\u200b\u6784\u9020\u200b\u6700\u5927\u200b\u5806\u200b\u3002 \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1a \u200b\u6700\u200b\u591a\u200b <code>3*std::distance(first, last)</code> \u200b\u6b21\u200b\u6bd4\u8f83\u200b\u3002</p> <pre><code>std::make_heap(v.begin(), v.end()); // \u200b\u6700\u5927\u200b\u5806\u200b\nstd::make_heap(v1.begin(), v1.end(), std::greater&lt;&gt;{}); // \u200b\u6700\u5c0f\u200b\u5806\u200b\n</code></pre>"},{"location":"Archive/C%2B%2B/algorithm/heap.html#push_heap","title":"push_heap","text":"<p>\u200b\u5728\u200b\u5bb9\u5668\u200b\u672b\u5c3e\u200b\u63d2\u5165\u200b1\u200b\u4e2a\u200b\u65b0\u5143\u7d20\u200b\u540e\u200b\uff0c\u200b\u8c03\u7528\u200b <code>push_heap</code> \u200b\u6765\u200b\u63d2\u5165\u200b\u5806\u200b\u3002 \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1a\u200b\u6700\u200b\u591a\u200b \\(log(N)\\) \u200b\u6b21\u200b\u6bd4\u8f83\u200b\uff0c\u200b\u5176\u4e2d\u200b <code>N=std::distance(first, last)</code>\u3002</p> <pre><code> std::make_heap(v.begin(), v.end());\n v.push_back(6);\n std::push_heap(v.begin(), v.end());\n</code></pre>"},{"location":"Archive/C%2B%2B/algorithm/heap.html#pop_heap","title":"pop_heap","text":"<p>\u200b\u5c06\u200b\u5806\u200b\u4e2d\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b <code>swap</code> \u200b\u5230\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\uff0c\u200b\u524d\u200b \\(n-1\\) \u200b\u4e2a\u200b\u91cd\u65b0\u200b\u5efa\u5806\u200b\u3002\uff08\u200b\u9700\u8981\u200b\u663e\u5f0f\u200b\u79fb\u6389\u200b\u90a3\u4e2a\u200b\u5143\u7d20\u200b\uff09 \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1a\u200b\u6700\u200b\u591a\u200b \\(2\u00d7log(N)\\) \u200b\u6b21\u200b\u6bd4\u8f83\u200b\uff0c\u200b\u5176\u4e2d\u200b <code>N=std::distance(first, last)</code>\u3002</p> <pre><code>std::make_heap(v.begin(), v.end());\nstd::pop_heap(v.begin(), v.end());\n\nint largest = v.back(); // remove\nv.pop_back();\n</code></pre>"},{"location":"Archive/C%2B%2B/algorithm/heap.html#sort_heap","title":"sort_heap","text":"<p>\u200b\u5982\u679c\u200b <code>pop_heap</code> \u200b\u4e2d\u200b\u4e0d\u200b\u8fdb\u884c\u200b\u79fb\u9664\u200b\uff0c\u200b\u90a3\u200bn\u200b\u6b21\u540e\u200b\u5176\u5b9e\u200b\u5c31\u200b\u5f97\u5230\u200b\u6709\u5e8f\u200b\uff08\u200b\u5806\u6392\u5e8f\u200b\uff09\u3002</p> <pre><code>while (first != last)\n        std::pop_heap(first, last--, comp);\n</code></pre> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1a\u200b\u6700\u200b\u591a\u200b \\(2\u00d7N\u00d7log(N)\\) \u200b\u6b21\u200b\u6bd4\u8f83\u200b\uff0c\u200b\u5176\u4e2d\u200b <code>N=std::distance(first, last)</code>\u3002</p> <pre><code>std::make_heap(v.begin(), v.end());\nstd::sort_heap(v.begin(), v.end());\n</code></pre>"},{"location":"Archive/C%2B%2B/algorithm/modify.html","title":"Modify operations","text":""},{"location":"Archive/C%2B%2B/algorithm/modify.html#reverse","title":"reverse","text":"<p>\u200b\u63a5\u6536\u200b\u4e24\u4e2a\u200b\u8fed\u4ee3\u200b\u5668\u200b\uff0c\u200b\u5c06\u200b\u5143\u7d20\u200b\u9006\u5e8f\u200b\u3002 \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1a\u200b\u51c6\u786e\u200b\u7684\u200b \\(N/2\\) \u200b\u6b21\u200b\u4ea4\u6362\u200b\u3002</p> <pre><code>std::vector&lt;int&gt; v{1, 2, 3};\nstd::reverse(v.begin(), v.end()); // 3 2 1\n</code></pre>"},{"location":"Archive/C%2B%2B/algorithm/modify.html#rotate","title":"rotate","text":"<p>\u200b\u63a5\u6536\u200b\u4e09\u4e2a\u200b\u8fed\u4ee3\u200b\u5668\u200b <code>(first, middle, last)</code>\uff0c\u200b\u5176\u4e2d\u200b <code>middle</code> \u200b\u4ee3\u8868\u200b\u5c06\u4f1a\u200b\u51fa\u73b0\u200b\u5728\u200b\u5bb9\u5668\u200b\u5934\u200b\u7684\u200b\u5143\u7d20\u200b\u3002 \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1a\\(O(N)\\)</p> <pre><code>std::rotate(v.begin(), v.begin() + 1, v.end()); // \u200b\u5de6\u79fb\u200b1\nstd::rotate(v.rbegin(), v.rbegin() + 1, v.rend()); // \u200b\u53f3\u79fb\u200b1\n</code></pre>"},{"location":"Archive/C%2B%2B/algorithm/modify.html#shuffle","title":"shuffle","text":"<p>\u200b\u63a5\u6536\u200b\u4e24\u4e2a\u200b\u8fed\u4ee3\u200b\u5668\u200b\u548c\u200b\u4e00\u4e2a\u200b\u968f\u673a\u200b\u79cd\u5b50\u200b\uff0c\u200b\u7ecf\u5e38\u200b\u4f7f\u7528\u200b <code>std::rand</code>\u3002\u200b\u5bf9\u200b\u5bb9\u5668\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u8fdb\u884c\u200b\u968f\u673a\u200b\u6392\u5217\u200b\u3002 \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1a\\(O(N)\\)</p> <pre><code>std::vector&lt;int&gt; v = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\nstd::random_device rd;\nstd::mt19937 g(rd());\nstd::shuffle(v.begin(), v.end(), g);\n</code></pre>"},{"location":"Archive/C%2B%2B/algorithm/modify.html#next_permutation-prev_permutation","title":"next_permutation / prev_permutation","text":"<p>\u200b\u5c06\u200b\u4e00\u4e2a\u200brange\u200b\u6309\u7167\u200b\u5b57\u5178\u200b\u5e8f\u200b\u9010\u4e2a\u200b\u8f93\u51fa\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u8c03\u7528\u200b\u751f\u6210\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u3002\u200b\u5982\u679c\u200b\u5b58\u5728\u200b\u8fd9\u6837\u200b\u7684\u200b \"\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u6392\u5217\u7ec4\u5408\u200b\"\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200btrue\uff1b\u200b\u5426\u5219\u200b\uff0c\u200b\u5c06\u200b\u8be5\u200b\u8303\u56f4\u200b\u8f6c\u5316\u200b\u4e3a\u200blexicographically\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u6392\u5217\u7ec4\u5408\u200b\uff08\u200b\u5c31\u200b\u50cf\u200b\u901a\u8fc7\u200b<code>std::sort(first, last, comp)</code>\uff09\u200b\u5e76\u200b\u8fd4\u56de\u200bfalse\u3002</p> <pre><code>std::string s = \"aba\";\nstd::sort(s.begin(), s.end());\ndo {\n    std::cout &lt;&lt; s &lt;&lt; '\\n';\n} while(std::next_permutation(s.begin(), s.end()));\n\n// aab\n// aba\n// baa\n</code></pre>"},{"location":"Archive/C%2B%2B/algorithm/partition.html","title":"Partition operations","text":""},{"location":"Archive/C%2B%2B/algorithm/partition.html#is__partitiond","title":"is__partitiond","text":""},{"location":"Archive/C%2B%2B/algorithm/partition.html#partition","title":"partition","text":"<p>\u200b\u63a5\u6536\u200b\u4e24\u4e2a\u200b\u8fed\u4ee3\u200b\u5668\u200b\u548c\u200b\u4e00\u4e2a\u200b\u4e00\u5143\u200b\u65ad\u8a00\u200b\uff0c\u200b\u6ee1\u8db3\u200b\u65ad\u8a00\u200b\u7684\u200b\u6392\u200b\u5728\u200b\u524d\u9762\u200b\uff0c\u200b\u4e0d\u200b\u6ee1\u8db3\u200b\u6392\u200b\u5728\u200b\u540e\u9762\u200b\u3002\u200b\u8fd4\u56de\u200b\u6307\u5411\u200b\u7b2c\u4e00\u4e2a\u200b\u4e0d\u200b\u6ee1\u8db3\u200b\u65ad\u8a00\u200b\u7684\u200b\u5143\u7d20\u200b\u7684\u200b\u8fed\u4ee3\u200b\u5668\u200b\u3002 \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1a\\(N\\) \u200b\u6b21\u200b\u65ad\u8a00\u200b\u5224\u65ad\u200b\uff0c\u200b\u6ee1\u8db3\u200bLegacyBidirectionalIterator\u200b\u5219\u200b\u6700\u200b\u591a\u200b \\(N/2\\)\u200b\u4ea4\u6362\u200b\uff0c\u200b\u5426\u5219\u200b \\(N\\)\u200b\u6b21\u200b\u3002</p> <pre><code>std::vector&lt;int&gt; v = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};\nauto it = std::partition(v.begin(), v.end(), [](int i){return i % 2 == 0;});\n// Partitioned vector: 0 8 2 6 4 * 5 3 7 1 9 \n</code></pre>"},{"location":"Archive/C%2B%2B/algorithm/partition.html#partition_copy","title":"partition_copy","text":""},{"location":"Archive/C%2B%2B/algorithm/partition.html#stable_partition","title":"stable_partition","text":""},{"location":"Archive/C%2B%2B/algorithm/partition.html#partition_point","title":"partition_point","text":"<p>\u200b\u5b9a\u4f4d\u200b\u4e00\u4e2a\u200b\u88ab\u200b <code>partition</code> \u200b\u64cd\u4f5c\u200b\u8fc7\u200b\u7684\u200b\u5bb9\u5668\u200b\u4e2d\u200b\uff0c\u200b\u7b2c\u4e8c\u4e2a\u200b\u5206\u533a\u200b\u7684\u200b\u5934\u200b\u3002\u200b\u5982\u679c\u200b\u90fd\u200b\u6ee1\u8db3\u200b\u5219\u200b\u8fd4\u56de\u200bend\u200b\u8fed\u4ee3\u200b\u5668\u200b\u3002 \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1a\\(O(\\log N)\\)\u3002</p> <pre><code>std::array v = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };\nauto is_even = [](int i){ return i % 2 == 0; };\nstd::partition(v.begin(), v.end(), is_even);\n//After partitioning, v: 8 2 6 4 5 3 7 1 9\nconst auto pp = std::partition_point(v.cbegin(), v.cend(), is_even);\n// Partition point is at 4; v[4] = 5\nconst auto i = std::distance(v.cbegin(), pp);\n// First partition (all even elements): 8 2 6 4\n// Second partition (all odd elements): 5 3 7 1 9\n</code></pre>"},{"location":"Archive/C%2B%2B/algorithm/query.html","title":"Query operations","text":""},{"location":"Archive/C%2B%2B/algorithm/query.html#all_of-any_of-none_of","title":"all_of / any_of / none_of","text":""},{"location":"Archive/C%2B%2B/algorithm/query.html#mismatch","title":"mismatch","text":"<p>\u200b\u63a5\u6536\u200b <code>first1, last1, first2, (last2), (BinaryPredicate p)</code> \u200b\u8fd4\u56de\u200b\u4e24\u4e2a\u200brange\u200b\u4e4b\u95f4\u200b\u7b2c\u4e00\u4e2a\u200b\u4e0d\u200b\u5339\u914d\u200b\u7684\u200b\u5bf9\u200b\uff08\u200b\u4e00\u4e2a\u200b <code>pair</code>\uff09\u3002\u200b\u53ef\u4ee5\u200b\u81ea\u5b9a\u4e49\u200b <code>(==)</code> \u200b\u65ad\u8a00\u200b\u3002</p> <p>Tip</p> <p>\u200b\u5982\u679c\u200b\u7ed9\u200b\u4e00\u4e2a\u200b\u5e8f\u5217\u200b\u7684\u200b\u5de6\u53f3\u4e24\u7aef\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u505a\u200b <code>mismatch</code> \u200b\u56de\u6587\u200b\u5224\u65ad\u200b\u3002</p> <pre><code>std::string mirror_ends(const std::string&amp; in)\n{\n    return std::string(in.begin(),\n                       std::mismatch(in.begin(), in.end(), in.rbegin()).first);\n}\n\nint main()\n{\n    std::cout &lt;&lt; mirror_ends(\"abXYZba\") &lt;&lt; '\\n'\n              &lt;&lt; mirror_ends(\"abca\") &lt;&lt; '\\n'\n              &lt;&lt; mirror_ends(\"aba\") &lt;&lt; '\\n';\n}\n</code></pre> <p>mismatch\u200b\u7684\u200b\u56de\u6587\u200b\u7528\u6cd5\u200b</p>"},{"location":"Archive/C%2B%2B/algorithm/query.html#equal","title":"equal","text":"<p>\u200b\u63a5\u6536\u200b <code>first1, last1, first2, (last2), (BinaryPredicate p)</code> \u200b\u8fd4\u56de\u200b\u662f\u5426\u200b\u5168\u7b49\u200b\u7684\u200b <code>Bool</code> \u200b\u503c\u200b\u3002</p> <pre><code>constexpr bool is_palindrome(const std::string_view&amp; s){\n    return std::equal(s.begin(), s.begin() + s.size() / 2, s.rbegin());}\n</code></pre>"},{"location":"Archive/C%2B%2B/algorithm/search.html","title":"Binary search operations","text":""},{"location":"Archive/C%2B%2B/algorithm/search.html#lower_bound","title":"lower_bound","text":""},{"location":"Archive/C%2B%2B/algorithm/search.html#upper_bound","title":"upper_bound","text":""},{"location":"Archive/C%2B%2B/algorithm/search.html#binary_search","title":"binary_search","text":""},{"location":"Archive/C%2B%2B/algorithm/search.html#equal_range","title":"equal_range","text":""},{"location":"Archive/C%2B%2B/algorithm/sorting.html","title":"Sorting operations","text":""},{"location":"Archive/C%2B%2B/algorithm/sorting.html#is_sorted","title":"is_sorted","text":""},{"location":"Archive/C%2B%2B/algorithm/sorting.html#is_sorted_until","title":"is_sorted_until","text":""},{"location":"Archive/C%2B%2B/algorithm/sorting.html#sort","title":"sort","text":"<p>\u200b\u53ef\u4ee5\u200b\u4f20\u542b\u200b \\(operator()\\) \u200b\u7684\u200bstruct\u200b\u6216\u8005\u200blambda\u200b\u6bd4\u8f83\u200b\u3002 \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1a\\(N(\\log N)\\)\u3002</p>"},{"location":"Archive/C%2B%2B/algorithm/sorting.html#partial_sort","title":"partial_sort","text":"<p>\u200b\u8fdb\u884c\u200b\u90e8\u5206\u200b\u6392\u5217\u200b\uff0c\u200b\u63a5\u6536\u200b\u4e09\u4e2a\u200b\u8fed\u4ee3\u200b\u5668\u200b <code>first, middle, last</code>\uff0c \u200b\u5728\u200b <code>[first, middle)</code> \u200b\u7684\u200b\u8303\u56f4\u200b\u95f4\u200b\u5c06\u200b\u6709\u5e8f\u200b\u3002 \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1a<code>(last-first)log(middle-first)</code> \u200b\u6bd4\u8f83\u200b\u3002</p> <pre><code>std::array&lt;int, 10&gt; s{5, 7, 4, 2, 8, 6, 1, 9, 0, 3};\n    std::partial_sort(s.begin(), s.begin() + 3, s.end());\n    std::partial_sort(s.rbegin(), s.rbegin() + 4, s.rend());\n    std::partial_sort(s.rbegin(), s.rbegin() + 5, s.rend(), std::greater{});\n5 7 4 2 8 6 1 9 0 3\n\n0 1 2 7 8 6 5 9 4 3\n\u2500\u2500\u2500\u2500\u2500\u2500^\n4 5 6 7 8 9 3 2 1 0\n          ^\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n4 3 2 1 0 5 6 7 8 9\n        ^\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</code></pre>"},{"location":"Archive/C%2B%2B/algorithm/sorting.html#partial_sort_copy","title":"partial_sort_copy","text":""},{"location":"Archive/C%2B%2B/algorithm/sorting.html#stable_sort","title":"stable_sort","text":""},{"location":"Archive/C%2B%2B/algorithm/sorting.html#nth_element","title":"nth_element","text":"<p><code>nth_element</code> \u200b\u5c06\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u7b2c\u200b \\(n\\) \u200b\u5927\u200b\u7684\u200b\u5143\u7d20\u200b\u653e\u5728\u200b\u7b2c\u200b \\(n\\) \u200b\u4e2a\u200b\u4f4d\u7f6e\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u65b0\u200b\u7684\u200b\u7b2c\u200bn\u200b\u4e2a\u200b\u5143\u7d20\u200b\u4e4b\u524d\u200b\u7684\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u90fd\u200b \\(\\le\\) \u200b\u65b0\u200b\u7684\u200b\u7b2c\u200bn\u200b\u4e2a\u200b\u5143\u7d20\u200b\u4e4b\u540e\u200b\u7684\u200b\u5143\u7d20\u200b\u3002 \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1a\u200b\u5e73\u5747\u200b \\(O(N)\\)</p> <pre><code> std::vector&lt;int&gt; v{5, 10, 6, 4, 3, 2, 6, 7, 9, 3};\n\n auto m = v.begin() + v.size()/2;\n std::nth_element(v.begin(), m, v.end());\n // The median is 6\n // v= {3, 2, 3, 4, 5, 6, 10, 7, 9, 6, }\n\n std::nth_element(v.begin(), v.begin()+1, v.end(), std::greater{});\n // The second largest element is 9\n // The largest element is 10\n // v= {10, 9, 6, 7, 6, 3, 5, 4, 3, 2, }\n</code></pre>"},{"location":"Archive/C%2B%2B/language/1.basic_concepts.html","title":"1. Value categories","text":"<p>\u200b\u6bcf\u4e2a\u200bC++\u200b\u8868\u8fbe\u5f0f\u200b\uff08\u200b\u4e00\u4e2a\u200b\u64cd\u4f5c\u7b26\u200b\u53ca\u5176\u200b\u64cd\u4f5c\u6570\u200b\u3001\u200b\u4e00\u4e2a\u200b\u5b57\u9762\u200b\u610f\u4e49\u200b\u3001\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u540d\u200b\u7b49\u200b\uff09\u200b\u90fd\u200b\u6709\u200b\u4e24\u4e2a\u200b\u72ec\u7acb\u200b\u7684\u200b\u5c5e\u6027\u200b\uff1a\u200b\u4e00\u4e2a\u200b type \u200b\u548c\u200b\u4e00\u4e2a\u200b value category \u3002\u200b\u6bcf\u4e2a\u200b\u8868\u8fbe\u5f0f\u200b\u90fd\u200b\u6709\u200b\u4e00\u4e9b\u200b\u975e\u200b\u5f15\u7528\u200b\u7c7b\u578b\u200b\uff0c\u200b\u800c\u4e14\u200b\u6bcf\u4e2a\u200b\u8868\u8fbe\u5f0f\u200b\u90fd\u200b\u6b63\u597d\u200b\u5c5e\u4e8e\u200b\u4e09\u4e2a\u200b\u4e3b\u8981\u200b\u7684\u200b\u503c\u200b\u7c7b\u522b\u200b\u4e4b\u4e00\u200b\uff1aprvalue\u3001xvalue\u200b\u548c\u200blvalue\u3002</p> <p>value category \u200b\u5b9a\u4e49\u200b 1. \u200b\u5b83\u200b\u7684\u200bLifetime 2. \u200b\u5b83\u200b\u7684\u200bidentity(\u200b\u4e5f\u200b\u5c31\u662f\u200b\u5730\u5740\u200b\u662f\u5426\u200b\u53ef\u7528\u200b)\u3002</p>"},{"location":"Archive/C%2B%2B/language/1.basic_concepts.html#object","title":"Object","text":"<p>object\u200b\u7684\u200b\u5b9a\u4e49\u200b\u5982\u4e0b\u200b</p> <p>Quote</p> <p>\u200b\u4e00\u4e2a\u200bobject\u200b\u7c7b\u578b\u200b\u662f\u4e0d\u662f\u200b\u4e00\u4e2a\u200b\u503c\u200b\u3001\u200b\u5f15\u7528\u200b\u3001\u200b\u51fd\u6570\u200b\u3001\u200b\u679a\u4e3e\u200b\u3001\u200b\u7c7b\u578b\u200b\u3001non-static class \u200b\u6210\u5458\u200b\u3001\u200b\u6a21\u677f\u200b\u3001class\u3001\u200b\u51fd\u6570\u200b\u6a21\u677f\u200b\u7279\u5316\u200b\u3001\u200b\u540d\u79f0\u200b\u7a7a\u95f4\u200b\u3001\u200b\u53c2\u6570\u200bpack\u200b\u548c\u200bthis\u3002</p> <p>An object type is a (possibly-cv-qulified) type that is not a value, reference, function, enumerator, type, non-static class member, template, class or function template specialization, namespace, parameter pack, and this. \u200b\u4e00\u4e2a\u200b object \u200b\u6709\u200b size(<code>sizeof</code>), alignment requirement(<code>alignof</code>), storage duration(<code>automatic</code>, <code>static</code>, <code>dynamic</code>, <code>thread-local</code>), lifetime, type, value, (name)\u3002</p>"},{"location":"Archive/C%2B%2B/language/1.basic_concepts.html#object-lifetime","title":"Object lifetime","text":"<p>\u200b\u6807\u51c6\u200b\u4e2d\u200b\u5bf9\u4e8e\u200b\u67d0\u4e2a\u200bobject\u200b\u7684\u200blifetime\u200b\u5f00\u59cb\u200b\u7684\u200b\u89c4\u5219\u200b\u662f\u200b\uff1a</p> <ol> <li>\u200b\u5bf9\u4e8e\u200b\u7c7b\u578b\u200bT\uff0c\u200b\u5f53\u200b\u6709\u7740\u200b\u6b63\u786e\u200b\u7684\u200b\u5bf9\u9f50\u200b\u548c\u200b\u5927\u5c0f\u200b\u7684\u200b\u5b58\u50a8\u7a7a\u95f4\u200b\u88ab\u200b\u83b7\u5f97\u200b\u7684\u200b\u65f6\u5019\u200b\u3002</li> <li>\u200b\u5982\u679c\u200bobject\u200b\u6709\u7740\u200b\u975e\u7a7a\u200b\u7684\u200b\u521d\u59cb\u5316\u200b\uff0c\u200b\u5f53\u200b\u521d\u59cb\u5316\u200b\u5b8c\u6210\u200b\u65f6\u5219\u200b\u751f\u547d\u5468\u671f\u200b\u5f00\u59cb\u200b\u3002\uff08\u200b\u5982\u679c\u200b\u8be5\u200bobject\u200b\u662f\u200b\u4e00\u4e2a\u200bunion\u200b\u6210\u5458\u200b\u6216\u200b\u5176\u4e2d\u200b\u7684\u200b\u5b50\u200bobject\u200b\u5219\u200b\u4f8b\u5916\u200b\uff09\u3002</li> </ol> <p>\u200b\u6807\u51c6\u200b\u4e2d\u200b\u5bf9\u4e8e\u200b\u67d0\u4e2a\u200bobject\u200b\u7684\u200blifetime\u200b\u7ed3\u675f\u200b\u7684\u200b\u89c4\u5219\u200b\u662f\u200b\uff1a 3. \u200b\u5982\u679c\u200bT\u200b\u662f\u200b\u4e00\u4e2a\u200bclass\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5e76\u4e14\u200b\u6709\u200b\u4e00\u4e2a\u200b\u975e\u200b\u5e73\u51e1\u200b\u7684\u200bdeconstructor\uff0c\u200b\u5f53\u200bdeconstructor\u200b\u88ab\u200b\u8c03\u7528\u200b\u5f00\u59cb\u200b\u65f6\u200b\u3002 4. \u200b\u5f53\u200bobject\u200b\u6240\u200b\u5360\u6709\u200b\u7684\u200b\u5b58\u50a8\u200b\u88ab\u200b\u91ca\u653e\u200b\uff0c\u200b\u6216\u8005\u200b\u5176\u200b\u5b58\u50a8\u200b\u88ab\u200b\u5176\u4ed6\u200b\u4e0d\u200b\u5d4c\u5957\u200b\u5728\u200bo\u200b\u4e2d\u200b\u7684\u200bobject\u200b\u91cd\u7528\u200b\u65f6\u200b\u3002</p>"},{"location":"Archive/C%2B%2B/language/1.basic_concepts.html#scope","title":"Scope","text":"<p>\u200b\u5728\u200bC++\u200b\u7a0b\u5e8f\u200b\u4e2d\u200b\u51fa\u73b0\u200b\u7684\u200b\u6bcf\u4e2a\u200b name \u200b\u90fd\u200b\u53ea\u200b\u5728\u200b\u6e90\u4ee3\u7801\u200b\u7684\u200b\u67d0\u4e2a\u200b\u53ef\u80fd\u200b\u4e0d\u76f8\u5e72\u200b\u7684\u200b\u90e8\u5206\u200b\u53ef\u89c1\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u90e8\u5206\u200b\u88ab\u200b\u79f0\u4e3a\u200b\u5b83\u200b\u7684\u200b scope \u3002 \u200b\u5728\u200b\u4e00\u4e2a\u200b scope \u200b\u4e2d\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b unqualified name lookup \u200b\u6765\u200b\u5c06\u200b name \u200b\u4e0e\u200b\u5b83\u200b\u7684\u200b\u58f0\u660e\u200b\u8054\u7cfb\u200b\u8d77\u6765\u200b\u3002</p> <p>\ud83d\udd18Block scope \ud83d\udd18Function parameter scope \ud83d\udd18Namespace scope \ud83d\udd18Class scope \ud83d\udd18Enumeration scope \ud83d\udd18Template parameter scope \ud83d\udd18Point of declaration</p>"},{"location":"Archive/C%2B%2B/language/1.basic_concepts.html#raii","title":"RAII","text":"<p>Summary</p> <p>\u200b\u8d44\u6e90\u200b\u5728\u200b\u67d0\u4e2a\u200b\u201cRAII class\u201d\u200b\u7684\u200bconstructor\u200b\u4e2d\u200b\u88ab\u200b\u83b7\u5f97\u200b\uff0c\u200b\u5728\u200bdestructor\u200b\u4e2d\u200b\u88ab\u200b\u5904\u7406\u200b\u3002</p> <p>\u200b\u8d44\u6e90\u200b\u83b7\u53d6\u200b\u5373\u200b\u521d\u59cb\u5316\u200b\u6216\u200bRAII\uff0c\u200b\u662f\u200b\u4e00\u79cd\u200bC++\u200b\u7f16\u7a0b\u6280\u672f\u200b\uff0c\u200b\u5b83\u200b\u5c06\u200b\u4f7f\u7528\u200b\u524d\u200b\u5fc5\u987b\u200b\u83b7\u53d6\u200b\u7684\u200b\u8d44\u6e90\u200b\uff08\u200b\u5206\u914d\u200b\u7684\u200b\u5806\u200b\u5185\u5b58\u200b\u3001\u200b\u6267\u884c\u200b\u7ebf\u7a0b\u200b\u3001\u200b\u5f00\u653e\u200b\u7684\u200b\u5957\u200b\u63a5\u5b57\u200b\u3001\u200b\u5f00\u653e\u200b\u7684\u200b\u6587\u4ef6\u200b\u3001\u200b\u9501\u5b9a\u200b\u7684\u200b\u7a81\u53d8\u4f53\u200b\u3001\u200b\u78c1\u76d8\u7a7a\u95f4\u200b\u3001\u200b\u6570\u636e\u5e93\u200b\u8fde\u63a5\u200b\u2014\u2014\u2014\u2014\u200b\u4efb\u4f55\u200b\u5b58\u5728\u200b\u6709\u9650\u200b\u4f9b\u5e94\u200b\u7684\u200b\u4e1c\u897f\u200b\uff09\u200b\u7684\u200b\u751f\u547d\u5468\u671f\u200b\u4e0e\u200b\u5bf9\u8c61\u200b\u7684\u200b\u751f\u547d\u5468\u671f\u200b\u7ed3\u5408\u200b\u8d77\u6765\u200b\u3002</p> <p>RAII\u200b\u4fdd\u8bc1\u200b\u8d44\u6e90\u200b\u5bf9\u200b\u4efb\u4f55\u200b\u53ef\u80fd\u200b\u8bbf\u95ee\u200b\u8be5\u200b\u5bf9\u8c61\u200b\u7684\u200b\u51fd\u6570\u200b\u90fd\u200b\u662f\u200b\u53ef\u7528\u200b\u7684\u200b\uff08\u200b\u8d44\u6e90\u200b\u53ef\u7528\u6027\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7c7b\u200b\u7684\u200b\u4e0d\u200b\u53d8\u91cf\u200b\uff0c\u200b\u6d88\u9664\u200b\u4e86\u200b\u591a\u4f59\u200b\u7684\u200b\u8fd0\u884c\u200b\u65f6\u200b\u6d4b\u8bd5\u200b\uff09\u3002\u200b\u5b83\u200b\u8fd8\u200b\u4fdd\u8bc1\u200b\u6240\u6709\u200b\u7684\u200b\u8d44\u6e90\u200b\u5728\u200b\u5176\u200b\u63a7\u5236\u200b\u5bf9\u8c61\u200b\u7684\u200b\u751f\u547d\u5468\u671f\u200b\u7ed3\u675f\u200b\u65f6\u200b\uff0c\u200b\u6309\u7167\u200b\u83b7\u53d6\u200b\u7684\u200b\u76f8\u53cd\u200b\u987a\u5e8f\u200b\u88ab\u200b\u91ca\u653e\u200b\u3002\u200b\u540c\u6837\u200b\u5730\u200b\uff0c\u200b\u5982\u679c\u200b\u8d44\u6e90\u200b\u83b7\u53d6\u200b\u5931\u8d25\u200b\uff08\u200b\u6784\u9020\u51fd\u6570\u200b\u4ee5\u200b\u5f02\u5e38\u200b\u9000\u51fa\u200b\uff09\uff0c\u200b\u6bcf\u4e2a\u200b\u5b8c\u5168\u200b\u6784\u9020\u200b\u7684\u200b\u6210\u5458\u200b\u548c\u200b\u57fa\u5b50\u200b\u5bf9\u8c61\u200b\u6240\u200b\u83b7\u53d6\u200b\u7684\u200b\u6240\u6709\u200b\u8d44\u6e90\u200b\u90fd\u200b\u4ee5\u200b\u521d\u59cb\u5316\u200b\u7684\u200b\u53cd\u5411\u200b\u987a\u5e8f\u200b\u91ca\u653e\u200b\u3002\u200b\u8fd9\u200b\u5c31\u200b\u5229\u7528\u200b\u4e86\u200b\u8bed\u8a00\u200b\u7684\u200b\u6838\u5fc3\u200b\u7279\u6027\u200b\uff08\u200b\u5bf9\u8c61\u200b\u5bff\u547d\u200b\u3001\u200b\u8303\u56f4\u200b\u9000\u51fa\u200b\u3001\u200b\u521d\u59cb\u5316\u200b\u987a\u5e8f\u200b\u548c\u200b\u5806\u6808\u200b\u5c55\u5f00\u200b\uff09\u200b\u6765\u200b\u6d88\u9664\u200b\u8d44\u6e90\u200b\u6cc4\u6f0f\u200b\uff0c\u200b\u4fdd\u8bc1\u200b\u5f02\u5e38\u200b\u5b89\u5168\u200b\u3002</p> <p>\ud83d\udd18RAII\u200b\u53ef\u4ee5\u200b\u6982\u62ec\u200b\u4e3a\u200b\u4ee5\u4e0b\u5185\u5bb9\u200b\u3002</p> <ol> <li>\u200b\u5c06\u200b\u6bcf\u4e2a\u200b\u8d44\u6e90\u200b\u5c01\u88c5\u200b\u6210\u200b\u4e00\u4e2a\u200b\u7c7b\u200b\uff0c\u200b\u5176\u4e2d\u200b<ul> <li>\u200b\u6784\u9020\u51fd\u6570\u200b\u83b7\u53d6\u200b\u8d44\u6e90\u200b\u5e76\u200b\u5efa\u7acb\u200b\u6240\u6709\u200b\u7c7b\u200b\u7684\u200b\u4e0d\u53d8\u6027\u200b\uff0c\u200b\u5982\u679c\u200b\u4e0d\u80fd\u200b\u505a\u5230\u200b\uff0c\u200b\u5219\u200b\u629b\u51fa\u200b\u4e00\u4e2a\u200b\u5f02\u5e38\u200b\u3002</li> <li>\u200b\u89e3\u6784\u200b\u51fd\u6570\u200b\u91ca\u653e\u200b\u8d44\u6e90\u200b\uff0c\u200b\u5e76\u4e14\u200b\u4e0d\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200b\u3002</li> </ul> </li> <li>\u200b\u59cb\u7ec8\u200b\u901a\u8fc7\u200bRAII\u200b\u7c7b\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5b9e\u4f8b\u200b\u6765\u200b\u4f7f\u7528\u200b\u8d44\u6e90\u200b\uff0c\u200b\u8be5\u7c7b\u200b\u8981\u4e48\u200b\u662f\u200b<ul> <li>\u200b\u81ea\u5df1\u200b\u6709\u200b\u81ea\u52a8\u200b\u5b58\u50a8\u200b\u65f6\u95f4\u200b\u6216\u200b\u4e34\u65f6\u200b\u5bff\u547d\u200b\uff0c\u200b\u6216\u200b</li> <li>\u200b\u5bff\u547d\u200b\u53d7\u200b\u81ea\u52a8\u200b\u6216\u200b\u4e34\u65f6\u200b\u5bf9\u8c61\u200b\u7684\u200b\u5bff\u547d\u200b\u9650\u5236\u200b</li> </ul> </li> <li>Move \u200b\u8bed\u4e49\u200b\u4f7f\u5f97\u200b\u5728\u200b\u5bf9\u8c61\u200b\u4e4b\u95f4\u200b\u3001\u200b\u8de8\u200b\u4f5c\u7528\u57df\u200b\u3001\u200b\u7ebf\u7a0b\u200b\u5185\u5916\u200b\u5b89\u5168\u200b\u8f6c\u79fb\u200b\u8d44\u6e90\u200b\u6240\u6709\u6743\u200b\u6210\u4e3a\u200b\u53ef\u80fd\u200b\uff0c\u200b\u540c\u65f6\u200b\u4fdd\u6301\u200b\u8d44\u6e90\u200b\u5b89\u5168\u200b\u3002</li> </ol> <p>\ud83d\udd18\u200b\u975e\u200bRAII \u200b\u5177\u6709\u200bopen()/close()\u3001lock()/unlock()\u200b\u6216\u200binit()/copyFrom()/destroy()\u200b\u6210\u5458\u200b\u51fd\u6570\u200b\u7684\u200b\u7c7b\u200b\u662f\u975e\u200bRAII\u200b\u7c7b\u200b\u7684\u200b\u5178\u578b\u200b\u4f8b\u5b50\u200b\u3002</p> <pre><code>std::mutex m;\n\nvoid bad() \n{\n    m.lock();                    // acquire the mutex\n    f();                         // \u200b\u5982\u679c\u200b f()\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200b, mutex\u200b\u6c38\u4e0d\u200b\u91ca\u653e\u200b\n    if(!everything_ok()) return; // early return, mutex\u200b\u6c38\u4e0d\u200b\u91ca\u653e\u200b\n    m.unlock();                  // \u200b\u5982\u679c\u200b bad() \u200b\u8d70\u5230\u200b\u8fd9\u200b\u4e00\u53e5\u200b, mutex\u200b\u91ca\u653e\u200b\n}\n\nvoid good()\n{\n    std::lock_guard&lt;std::mutex&gt; lk(m); // RAII class: mutex acquisition is initialization\n    f();                               // \u200b\u5982\u679c\u200b f()\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200b, mutex\u200b\u91ca\u653e\u200b\n    if(!everything_ok()) return;       // early return, mutex\u200b\u91ca\u653e\u200b\n}                                      // \u200b\u5982\u679c\u200b good() \u200b\u6b63\u5e38\u200b\u8fd4\u56de\u200b, mutex\u200b\u91ca\u653e\u200b\n</code></pre> <p>\ud83d\udd18\u200b\u7528\u6237\u200b\u81ea\u884c\u200b\u7ba1\u7406\u200b\u7684\u200bstl RAII wrapper \u200b\u4f7f\u7528\u200b<code>std::unique_ptr</code> \u200b\u548c\u200b <code>std::shared_ptr</code> \u200b\u6765\u200b\u7ba1\u7406\u200b\u52a8\u6001\u5206\u914d\u200b\u7684\u200b\u5185\u5b58\u200b\uff0c\u200b\u6216\u8005\u200b\u7528\u6237\u200b\u63d0\u4f9b\u200b\u7684\u200bdeleter\uff0c\u200b\u4efb\u4f55\u200b\u4f7f\u7528\u200b plain pinter \u200b\u5448\u73b0\u200b\u7684\u200b\u8d44\u6e90\u200b\u3002 <code>std::lock_guard, std::unique_lock, std:: shared_lock</code> \u200b\u6765\u200b\u7ba1\u7406\u200b mutexes\u3002</p>"},{"location":"Archive/C%2B%2B/language/1.basic_concepts.html#definitions-and-odr-one-definition-rule","title":"Definitions and ODR (One Definition Rule)","text":"<pre><code>template&lt;typename T&gt; // template declares, but doesn't define T\ntypedef S S2; // typedef declares, but doesn't define S2 (S may be incomplete)\nusing S2 = S; // alias declares, but doesn't define S2 (S may be incomplete)\nusing N::d; // using declares, but doesn't define d\n\nextern template\nf&lt;int, char&gt;; //  explicit instantiation declaration (an \"extern template\"), but doesn't define f&lt;int, char&gt;\n\ntemplate&lt;&gt;\nstruct A&lt;int&gt;; // explicit specialization, but doesn't define A&lt;int&gt;\n</code></pre> <p>\ud83d\udd18 ODR \u200b\u89c4\u5219\u200b</p> <p>Summary</p> <ol> <li>\u200b\u5bf9\u4e8e\u200b\u4e00\u4e2a\u200b\u5728\u200b\u67d0\u4e2a\u200b\u7ffb\u8bd1\u200b\u5355\u5143\u200b\u4e2d\u200b\u4f7f\u7528\u200b <code>inline</code> \u200b\u7684\u200b\u4e1c\u897f\u200b\uff08\u200b\u53d8\u91cf\u200b\u6216\u200b\u51fd\u6570\u200b\uff09\uff0c\u200b\u5b83\u200b\u5728\u200b\u8be5\u200b\u7ffb\u8bd1\u200b\u5355\u5143\u200b\u4e2d\u200b\u81f3\u5c11\u200b\u5b9a\u4e49\u200b\u4e00\u6b21\u200b\u3002</li> <li>\u200b\u5bf9\u4e8e\u200b\u4e00\u4e2a\u200b\u5728\u200b\u67d0\u4e2a\u200b\u7ffb\u8bd1\u200b\u5355\u5143\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u7684\u200b\u975e\u200b <code>inline</code>\u3001\u200b\u975e\u200b <code>template</code> \u200b\u7684\u200b\u4e1c\u897f\u200b\uff0c\u200b\u5b83\u200b\u5728\u200b\u8be5\u200b\u7ffb\u8bd1\u200b\u5355\u5143\u200b\u4e2d\u4ec5\u200b\u5b9a\u4e49\u200b\u4e00\u6b21\u200b\u3002</li> <li>\u200b\u5bf9\u4e8e\u200b\u4e00\u4e2a\u200b <code>template</code> \uff0c\u200b\u5728\u200b\u5934\u6587\u4ef6\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u5b83\u200b\uff0c\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u7684\u200b\u65f6\u5019\u200b\u5305\u62ec\u200b\u8fd9\u4e2a\u200b\u5934\u200b\u5514\u200b\u89c1\u200b\uff0c\u200b\u5e76\u200b\u8ba9\u200b\u5de5\u5177\u200b\u94fe\u200b\u51b3\u5b9a\u200b\u5b83\u200b\u5728\u200b\u54ea\u91cc\u200b\u88ab\u200b\u5b9a\u4e49\u200b\u3002 </li> </ol>"},{"location":"Archive/C%2B%2B/language/10.exceptions.html","title":"1. Exception general","text":""},{"location":"Archive/C%2B%2B/language/10.exceptions.html#2-noexcept","title":"2. noexcept","text":"<p><code>noexcept</code> \u200b\u6307\u660e\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u662f\u5426\u200b\u53ef\u4ee5\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200b\u3002</p> <pre><code>noexcept //(1) == noexcept(true)\nnoexcept(expression) //(2)  \u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u8868\u8fbe\u5f0f\u200b\u8bc4\u4f30\u200b\u4e3a\u200b true \u200b\u5219\u200b\u4e0d\u4f1a\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200b\n</code></pre> <p>\u200b\u4ece\u200bC++17\u200b\u5f00\u59cb\u200b\uff0cnoexcept-specification \u200b\u662f\u200b\u51fd\u6570\u200b\u7c7b\u578b\u200b\u7684\u200b\u4e00\u90e8\u5206\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b\u4efb\u4f55\u200b\u51fd\u6570\u200b declarator \u200b\u7684\u200b\u4e00\u90e8\u5206\u200b\u51fa\u73b0\u200b\u3002</p> <p>\ud83d\udd18 \u200b\u4e0d\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200b / \u200b\u53ef\u80fd\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200b\u7684\u200b\u51fd\u6570\u200b</p> <p>\ud83d\udd18 move constructor \u200b\u548c\u200b noexcept \u200b\u5982\u679c\u200bmove constructor\u200b\u58f0\u660e\u200b\u4e86\u200b <code>noexcept</code> , \u200b\u90a3\u4e48\u200b\u5728\u200b\u5bb9\u5668\u200b reallocate \u200b\u7684\u200b\u65f6\u5019\u200b\u5c06\u4f1a\u200b\u4f7f\u7528\u200bmove\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b copy\u3002see move_if_noexcept</p>"},{"location":"Archive/C%2B%2B/language/2.basic_blocks.html","title":"Basic Blocks of C++","text":""},{"location":"Archive/C%2B%2B/language/2.basic_blocks.html#type","title":"type","text":""},{"location":"Archive/C%2B%2B/language/2.basic_blocks.html#type-castconversion","title":"type cast/conversion","text":""},{"location":"Archive/C%2B%2B/language/2.basic_blocks.html#member-functions","title":"member functions","text":""},{"location":"Archive/C%2B%2B/language/2.basic_blocks.html#const-member-functions","title":"const member functions","text":""},{"location":"Archive/C%2B%2B/language/2.basic_blocks.html#non-const-member-functions","title":"non-const member functions","text":""},{"location":"Archive/C%2B%2B/language/2.basic_blocks.html#static-member-functions","title":"static member functions","text":""},{"location":"Archive/C%2B%2B/language/2.basic_blocks.html#virtual-member-functions","title":"virtual member functions","text":""},{"location":"Archive/C%2B%2B/language/2.basic_blocks.html#struct","title":"struct","text":""},{"location":"Archive/C%2B%2B/language/2.basic_blocks.html#class","title":"class","text":""},{"location":"Archive/C%2B%2B/language/2.basic_blocks.html#private-vs-public","title":"private vs public","text":""},{"location":"Archive/C%2B%2B/language/2.basic_blocks.html#class-vs-struct","title":"class vs struct","text":"<p>\u200b\u53c2\u8003\u200b\uff1afluentcpp</p> <p>\u200b\u53ef\u80fd\u200b\u6bd4\u8f83\u200b\u8fdd\u53cd\u200b\u4e4b\u524d\u200b\u7684\u200b\u76f4\u89c9\u200b\u7684\u200b\u662f\u200b\uff0c<code>struct</code> \u200b\u5176\u5b9e\u200b\u548c\u200b <code>class</code> \u200b\u6ca1\u4ec0\u4e48\u200b\u4e0d\u540c\u200b\u3002 \u200b\u56e0\u4e3a\u200b\u603b\u8bf4\u200b c with class\uff0c\u200b\u6240\u4ee5\u200b\u53ef\u80fd\u200b\u4e0b\u610f\u8bc6\u200b\u5730\u200b\u89c9\u5f97\u200b <code>class</code> \u200b\u6bd4\u200b <code>struct</code> \u200b\u9ad8\u7ea7\u200b\uff0c\u200b\u6709\u200b constructor\u3001<code>private/public/protect</code>\u3001<code>virtual</code> \u200b\u51fd\u6570\u200b\u3001\u200b\u80fd\u591f\u200b\u7ee7\u627f\u200b\u8fd9\u4e9b\u200b\u7279\u6027\u200b\uff0c\u200b\u4f46\u200b\u5176\u5b9e\u200b <code>struct</code>\u200b\u6709\u200b\u8fd9\u4e9b\u200b\u5168\u90e8\u200b\u4e1c\u897f\u200b\u3002</p> <p>\u200b\u552f\u4e00\u200b\u7684\u200b\u533a\u522b\u200b\u662f\u200b\uff1a\u200b\u5982\u679c\u200b\u4e0d\u200b\u6307\u660e\u200b<code>private/public/protect</code></p> <ul> <li><code>class</code> \u200b\u9ed8\u8ba4\u200b <code>private</code>\uff0c\u200b\u7ee7\u627f\u200b\u7684\u200b\u65f6\u5019\u200b\u4e5f\u200b\u9ed8\u8ba4\u200b\u7ee7\u627f\u200b <code>private Base</code>\u3002</li> <li><code>struct</code> \u200b\u9ed8\u8ba4\u200b <code>public</code>\uff0c\u200b\u7ee7\u627f\u200b\u7684\u200b\u65f6\u5019\u200b\u4e5f\u200b\u9ed8\u8ba4\u200b\u7ee7\u627f\u200b <code>public Base</code>\u3002</li> </ul> <p>\u200b\u6240\u4ee5\u200b\u5176\u5b9e\u200b\u5b83\u200b\u4fe9\u200b\u6ca1\u6709\u200b\u5f88\u5927\u200b\u7684\u200b\u533a\u522b\u200b\uff0c\u200b\u4f46\u662f\u200b\u4ece\u200b\u4f7f\u7528\u200b\u60ef\u4f8b\u200b\u4e0a\u200b\uff0c\u200b\u5e94\u8be5\u200b\u628a\u200b\u4ed6\u4eec\u200b\u7684\u200b\u4f7f\u7528\u200b\u573a\u666f\u200b\u505a\u200b\u4e00\u4e2a\u200b\u533a\u5206\u200b\u3002</p> <p>\u270f\ufe0f <code>struct</code> =&gt; \u200b\u6570\u636e\u200bbundle</p> <p><code>struct</code> \u200b\u901a\u5e38\u200b\u7528\u6765\u200b\u8868\u793a\u200b\u4e00\u4e9b\u200b\u9700\u8981\u200b\u88ab\u200b\u7ed1\u5b9a\u200b\u5728\u200b\u4e00\u8d77\u200b\u7684\u200b\u6570\u636e\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>struct Point{\n    double x;\n    double y;\n};\n</code></pre> <p>\u200b\u50cf\u200b\u8fd9\u6837\u200b\u7684\u200b\u6570\u636e\u200bbundle\u200b\u80fd\u591f\u200b\u63d0\u5347\u200b\u4ee3\u7801\u200b\u7684\u200b\u62bd\u8c61\u200b\u7a0b\u5ea6\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b\u4f7f\u7528\u200b <code>Point</code> \u200b\u4ee3\u66ff\u200b\u4e86\u200b\u7eaf\u7cb9\u200b\u7684\u200b <code>double</code>\u3002 \u200b\u8fd9\u200b\u80fd\u591f\u200b\u4f7f\u5f97\u200b\u76f8\u5173\u200b\u7684\u200b\u63a5\u53e3\u200b\u66f4\u52a0\u200b\u6e05\u6670\u200b\u3002</p> <p>\u270f\ufe0f <code>class</code> =&gt; \u200b\u5904\u7406\u200b\u65b9\u6cd5\u200b\u5e76\u200b\u5bf9\u200b\u5185\u90e8\u200b\u6570\u636e\u200b\u8d1f\u8d23\u200b</p> <p><code>class</code>\u200b\u7684\u200b\u76ee\u7684\u200b\u5c31\u662f\u200b\u4e3a\u4e86\u200b\u63d0\u4f9b\u200b\u81ea\u5e26\u200b\u65b9\u6cd5\u200b\u7684\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u63d0\u4f9b\u200b\u63a5\u53e3\u200b\u3001\u200b\u6570\u636e\u5904\u7406\u200b\u5206\u79bb\u200b\uff0c\u200b\u800c\u200b\u4e0d\u4ec5\u4ec5\u200b\u662f\u200b\u5b58\u50a8\u200b\u6570\u636e\u200b\u3002</p> <p>\u200b\u901a\u5e38\u200b\u4e00\u4e2a\u200b <code>class</code> \u200b\u4e2d\u200b\u7684\u200b\u6570\u636e\u200b\u6210\u5458\u200b\u90fd\u200b\u6709\u200b\u4e00\u4e9b\u200b\u4e0d\u53d8\u200b\u5173\u7cfb\u200b\uff0c\u200b\u4e3a\u4e86\u200b\u4f7f\u200b\u65b9\u6cd5\u200b\u6b63\u5e38\u200b\u5de5\u4f5c\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u5173\u7cfb\u200b\u5fc5\u987b\u200b\u6210\u7acb\u200b\u3002 \u200b\u4f8b\u5982\u200b\uff0c<code>std::string</code> \u200b\u5728\u200b\u5176\u200b\u5b9e\u73b0\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u6301\u6709\u200b\u4e00\u4e2a\u200b <code>char*</code> \u200b\u548c\u200b\u4e00\u4e2a\u200b <code>size</code>\uff08\u200b\u81f3\u5c11\u200b\u5728\u200b\u6982\u5ff5\u200b\u4e0a\u200b\u662f\u200b\u8fd9\u6837\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u73b0\u4ee3\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5b9e\u73b0\u200b\u7531\u4e8e\u200b\u4f18\u5316\u200b\u800c\u200b\u6bd4\u200b\u8fd9\u200b\u66f4\u200b\u590d\u6742\u200b\uff09\u3002\u200b\u90a3\u4e48\u200b\u4e00\u4e2a\u200b\u4e0d\u53d8\u200b\u7684\u200b\u56e0\u7d20\u200b\u662f\u200b\uff0c\u200b\u5206\u914d\u200b\u7684\u200b <code>char</code> \u200b\u7f13\u51b2\u533a\u200b\u4e2d\u200b\u7684\u200b\u5b57\u7b26\u200b\u6570\u200b\u5fc5\u987b\u200b\u4e0e\u200b <code>size</code> \u200b\u6210\u5458\u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\u76f8\u5339\u914d\u200b\u3002\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u4e0d\u53d8\u200b\u56e0\u7d20\u200b\u662f\u200b\uff0c<code>char*</code> \u200b\u88ab\u200b\u521d\u59cb\u5316\u200b\u5e76\u200b\u6307\u5411\u200b\u6709\u6548\u200b\u7684\u200b\u5185\u5b58\u200b\u3002</p> <p>\u200b\u4e0d\u200b\u53d8\u91cf\u200b\u662f\u200b\u7531\u7c7b\u200b\u7684\u200b\u6784\u9020\u51fd\u6570\u200b\u8bbe\u7f6e\u200b\u7684\u200b\uff0c\u200b\u6210\u5458\u200b\u65b9\u6cd5\u200b\u5047\u8bbe\u200b\u6240\u6709\u200b\u7684\u200b\u4e0d\u200b\u53d8\u91cf\u200b\u5728\u200b\u5b83\u4eec\u200b\u88ab\u200b\u8c03\u7528\u200b\u65f6\u200b\u90fd\u200b\u662f\u200b\u771f\u7684\u200b\uff0c\u200b\u5e76\u200b\u786e\u4fdd\u200b\u5b83\u4eec\u200b\u5728\u200b\u7ed3\u675f\u200b\u65f6\u200b\u4ecd\u7136\u200b\u662f\u200b\u771f\u7684\u200b\u3002</p> <p>\u270f\ufe0f \u200b\u9009\u62e9\u200b <code>class</code> \u200b\u8fd8\u662f\u200b <code>struct</code></p> <p>\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u7ecf\u9a8c\u200b\u6cd5\u5219\u200b\u662f\u200b\uff0c\u200b\u53ea\u8981\u200b\u7ed3\u6784\u200b\u4e2d\u200b\u81f3\u5c11\u200b\u6709\u200b\u4e00\u4e2a\u200b\u79c1\u6709\u200b\u6210\u5458\u200b\uff0c\u200b\u5c31\u200b\u5e94\u8be5\u200b\u9009\u62e9\u200b <code>class</code> \u3002 \u200b\u4e8b\u5b9e\u4e0a\u200b\uff0c\u200b\u8fd9\u200b\u8868\u660e\u200b\u6709\u200b\u4e00\u4e9b\u200b\u5b9e\u73b0\u200b\u7ec6\u8282\u200b\u9700\u8981\u200b\u901a\u8fc7\u200b\u63a5\u53e3\u200b\u6765\u200b\u9690\u85cf\u200b\uff0c\u200b\u8fd9\u200b\u5c31\u662f\u200b <code>class</code> \u200b\u7684\u200b\u76ee\u7684\u200b\u3002</p> <p>Quote</p> <p>C.1: \u200b\u5c06\u200b\u76f8\u5173\u200b\u6570\u636e\u7ec4\u7ec7\u200b\u5728\u200b\u67d0\u4e2a\u200b\u7ed3\u6784\u200b\u4e2d\u200b (structs or classes) C.2: \u200b\u5982\u679c\u200b\u6709\u200b\u4e0d\u200b\u53d8\u91cf\u200b\uff0c\u200b\u7528\u200b <code>class</code>\uff1b\u200b\u5982\u679c\u200b\u6570\u636e\u200b\u6210\u5458\u200b\u53ef\u4ee5\u200b\u72ec\u7acb\u200b\u53d8\u5316\u200b\uff0c\u200b\u7528\u200b <code>struct</code> C.3: \u200b\u9700\u8981\u200b\u8868\u793a\u200b\u63a5\u53e3\u200b\u548c\u200b\u5b9e\u73b0\u200b\u4e4b\u95f4\u200b\u7684\u200b\u533a\u522b\u200b\uff0c\u200b\u7528\u200b <code>class</code> C.8: \u200b\u5982\u679c\u200b\u6709\u200b\u6210\u5458\u200b\u662f\u200b\u4e0d\u200b\u516c\u5f00\u200b\u7684\u200b\uff0c\u200b\u7528\u200b <code>class</code></p>"},{"location":"Archive/C%2B%2B/language/2.basic_blocks.html#keyword","title":"keyword","text":""},{"location":"Archive/C%2B%2B/language/3.module.html","title":"modules","text":""},{"location":"Archive/C%2B%2B/language/3.module.html#standard-c-named-modules","title":"Standard C++ Named modules","text":"<p>\u200b\u4e00\u4e2a\u200b Named modules \u200b\u662f\u200b\u5177\u6709\u200b\u76f8\u540c\u200b\u6a21\u5757\u200b\u540d\u79f0\u200b\u7684\u200b\u6a21\u5757\u200b\u5355\u5143\u200b\u7684\u200b\u96c6\u5408\u200b\u3002</p>"},{"location":"Archive/C%2B%2B/language/3.module.html#module-and-module-unit","title":"Module and module unit","text":"<p>\u200b\u4e00\u4e2a\u200b modules \u200b\u7531\u200b\u4e00\u4e2a\u200b\u6216\u200b\u591a\u4e2a\u200b modules units \u200b\u7ec4\u6210\u200b\u3002\u200b\u4e00\u4e2a\u200b module unit \u200b\u662f\u200b\u4e00\u4e2a\u200b\u7279\u6b8a\u200b\u7684\u200b\u7ffb\u8bd1\u200b\u5355\u5143\u200b\u3002\u200b\u6bcf\u4e2a\u200b module unit \u200b\u90fd\u200b\u5fc5\u987b\u200b\u6709\u200b\u4e00\u4e2a\u200b <code>module</code> \u200b\u58f0\u660e\u200b\u3002 modules \u200b\u58f0\u660e\u200b\u7684\u200b\u8bed\u6cd5\u200b\u662f\u200b\uff1a</p> <pre><code>[export] module module_name[:partition_name];\n</code></pre> <p>module units\u200b\u5206\u4e3a\u200b\u4ee5\u4e0b\u200b\u56db\u79cd\u200b\u7c7b\u578b\u200b\uff1a</p> <ul> <li>\u200b\u4e3b\u200b\u6a21\u5757\u63a5\u53e3\u200b\u5355\u5143\u200b\uff0cPrimary module interface unit     \u200b\u58f0\u660e\u200b\uff1a <code>export module module_name;</code>\uff0c\u200b\u4e00\u4e2a\u200b\u6a21\u5757\u200b\u6709\u4e14\u200b\u4ec5\u200b\u6709\u200b\u4e00\u4e2a\u200b\u4e3b\u200b\u6a21\u5757\u63a5\u53e3\u200b\u5355\u5143\u200b\u3002</li> <li>\u200b\u6a21\u5757\u200b\u5b9e\u73b0\u200b\u5355\u5143\u200b\uff0cModule implementation unit     \u200b\u58f0\u660e\u200b\uff1a <code>module_name;</code>\uff0c\u200b\u4e00\u4e2a\u200b\u6a21\u5757\u200b\u53ef\u4ee5\u200b\u6709\u200b\u591a\u4e2a\u200b\u5177\u6709\u200b\u76f8\u540c\u200b\u58f0\u660e\u200b\u7684\u200b\u6a21\u5757\u200b\u5b9e\u73b0\u200b\u5355\u5143\u200b\u3002</li> <li>\u200b\u6a21\u5757\u63a5\u53e3\u200b\u5206\u533a\u200b\u5355\u5143\u200b\uff0cModule interface partition unit     \u200b\u58f0\u660e\u200b\uff1a <code>export module module_name:partition_name;</code>\uff0c<code>partition_name</code> \u200b\u5bf9\u200b\u4efb\u4f55\u200b\u7ed9\u5b9a\u200b\u7684\u200b\u6a21\u5757\u200b\u90fd\u200b\u9700\u8981\u200b\u662f\u200b\u72ec\u7279\u200b\u7684\u200b\u3002</li> <li>\u200b\u5185\u90e8\u200b\u6a21\u5757\u200b\u5206\u533a\u200b\u5355\u5143\u200b\uff0cInternal module partition unit     \u200b\u58f0\u660e\u200b\uff1a<code>module module_name:partition_name;</code>\uff0c<code>partition_name</code> \u200b\u5bf9\u200b\u4efb\u4f55\u200b\u7ed9\u5b9a\u200b\u7684\u200b\u6a21\u5757\u200b\u90fd\u200b\u9700\u8981\u200b\u662f\u200b\u72ec\u7279\u200b\u7684\u200b\u3002</li> </ul> <p>Note</p> <p>\u200b\u4f7f\u7528\u200b <code>export</code> \u200b\u7684\u200b\u662f\u200b\u5411\u200b\u5916\u200b\u5bfc\u51fa\u200b\u7684\u200b\u63a5\u53e3\u200b(interface)\u3002 \u200b\u5176\u4f59\u200b\u90fd\u200b\u90fd\u200b\u662f\u200b\u6a21\u5757\u200b\u5b9e\u73b0\u200b\u5355\u5143\u200b\u3002</p> <p>\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5177\u4f53\u200b\u58f0\u660e\u200b\u7684\u200b\u4f8b\u5b50\u200b\uff1a</p> <pre><code>// \u200b\u6bcf\u200b\u4e00\u884c\u200b\u4ee3\u8868\u200b\u4e00\u4e2a\u200b\u5355\u72ec\u200b\u7684\u200b\u7ffb\u8bd1\u200b\u5355\u5143\u200b\n\nexport module A;   // declares the primary module interface unit for named module 'A'\nmodule A;          // declares a module implementation unit for named module 'A'\nmodule A;          // declares another module implementation unit for named module 'A'\nexport module A.B; // declares the primary module interface unit for named module 'A.B'\nmodule A.B;        // declares a module implementation unit for named module 'A.B'\n</code></pre>"},{"location":"Archive/C%2B%2B/language/3.module.html#global-module-fragment","title":"Global module fragment","text":"<p>\u200b\u6a21\u5757\u200b\u5355\u5143\u200b\u53ef\u4ee5\u200b\u4ee5\u200b\u5168\u5c40\u200b\u6a21\u5757\u200b\u7247\u6bb5\u200b\u4e3a\u200b\u524d\u7f00\u200b\uff0c\u200b\u5f53\u200b\u65e0\u6cd5\u200b <code>import</code> \u200b\u5934\u6587\u4ef6\u200b\u65f6\u200b\uff08\u200b\u7279\u522b\u200b\u662f\u200b\u5f53\u5934\u200b\u6587\u4ef6\u200b\u4f7f\u7528\u200b\u9884\u5904\u7406\u200b\u5b8f\u200b\u4f5c\u4e3a\u200b\u914d\u7f6e\u200b\u65f6\u200b\uff09\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u200b\u5b83\u200b\u6765\u200b\u5305\u542b\u200b\u5934\u6587\u4ef6\u200b\u3002\u200b\u53ea\u6709\u200b\u9884\u5904\u7406\u200b\u6307\u4ee4\u200b(<code>#</code>)\u200b\u5728\u200b\u8fd9\u91cc\u200b\u51fa\u73b0\u200b\uff01</p> <p>\u200b\u4ece\u200b\u5355\u6761\u200b\u8bed\u53e5\u200b <code>module;</code> \u200b\u5230\u200b\u7b2c\u4e00\u6761\u200b\u6a21\u5757\u200b\u58f0\u660e\u200b\u7684\u200b\u533a\u57df\u200b\u79f0\u4e3a\u200bGlobal module fragment\u3002</p> <pre><code>module;\n//Global module fragment\n#define _POSIX_C_SOURCE 200809L\n#include &lt;stdlib.h&gt;\n//Global module fragment \nexport module name;\nimport &lt;ctime&gt;; // \u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200bimport\u200b\u6a21\u5757\u200b\u7684\u200b\u5c31\u200b\u4f7f\u7528\u200b\n</code></pre>"},{"location":"Archive/C%2B%2B/language/3.module.html#module-partitions","title":"Module partitions","text":"<p>\u200b\u6a21\u5757\u200b\u5206\u533a\u200b\u4e5f\u200b\u5c31\u662f\u200b\u5728\u200b\u6a21\u5757\u200b\u5185\u90e8\u200b\u8fdb\u884c\u200b\u662f\u5426\u200b\u5bfc\u51fa\u200b\u7684\u200b\u533a\u5206\u200b\uff0c\u200b\u53ea\u200b\u5728\u200b\u5185\u90e8\u200b\u53ef\u89c1\u200b\uff0c\u200b\u5bf9\u5916\u90e8\u200b\u5bfc\u5165\u200b\u6a21\u5757\u200b\u6ca1\u6709\u200b\u610f\u4e49\u200b\u3002\u200b\u4f8b\u5982\u200b\u4e00\u4e2a\u200b\u6a21\u5757\u200b <code>A</code>\uff0c\u200b\u53ef\u4ee5\u200b\u5206\u4e3a\u200b\u60f3\u8981\u200b\u5bfc\u51fa\u200b\u7684\u200b <code>A:interface</code> \u200b\u548c\u200b\u4e0d\u60f3\u200b\u5bfc\u51fa\u200b\u7684\u200b <code>A:impl</code>\u3002\u200b\u5bf9\u4e8e\u200b\u6a21\u5757\u200b\u672c\u8eab\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u5206\u533a\u200b\u53ef\u4ee5\u200b\u7528\u200b <code>import :partition_name</code> \u200b\u6765\u200b\u5bfc\u5165\u200b\uff0c</p> <p>\u200b\u6a21\u5757\u200b\u5206\u533a\u200b\u4f7f\u7528\u200b <code>:</code> \u200b\u58f0\u660e\u200b\uff1a</p> <pre><code>export module A:B;\n</code></pre> <p>\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5177\u4f53\u200b\u4f7f\u7528\u200b\u5206\u533a\u200b\u7684\u200b\u4f8b\u5b50\u200b</p> <p>\u200b\u5728\u200b\u6a21\u5757\u200bA\u200b\u4e2d\u6709\u200bB\u200b\u548c\u200bC\u200b\u4e24\u4e2a\u200b\u5206\u533a\u200b\uff0c\u200b\u5206\u533a\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b <code>import</code>\uff0c\u200b\u4f7f\u5f97\u200b\u5728\u200bA\u200b\u5185\u90e8\u200b\u53ef\u89c1\u200b\u3002</p> <pre><code>///////  A.cpp   \nexport module A;     // primary module interface unit\nexport import :B;    // Hello() is visible when importing 'A'.\nimport :C;           // WorldImpl() is now visible only for 'A.cpp'.\n// export import :C; // ERROR: Cannot export a module implementation unit.\n\n// World() is visible by any translation unit importing 'A'.\nexport char const* World(){return WorldImpl();}\n</code></pre> <p>A:B\u200b\u5206\u533a\u200b\u4e2d\u200b\u58f0\u660e\u200b\u4e86\u200b <code>export module</code>\uff0c\u200b\u5982\u679c\u200b\u5728\u200bA\u200b\u4e2d\u200b<code>import</code>\uff0c\u200b\u90a3\u4e48\u200b\u5176\u4e2d\u200b\u7684\u200b\u5185\u5bb9\u200b\u4f1a\u200b\u5728\u200b\u5916\u90e8\u200b\u53ef\u89c1\u200b\u3002</p> <pre><code>/////// A-B.cpp \u200b\u5206\u533a\u200b\u6a21\u5757\u63a5\u53e3\u200b\u5355\u5143\u200b\nexport module A:B; // partition module interface unit\n// Hello() is visible by any translation unit importing 'A'.\nexport char const* Hello() { return \"Hello\"; }\n</code></pre> <p>A:B\u200b\u5206\u533a\u200b\u4e2d\u200b\u58f0\u660e\u200b <code>module</code>\uff0c\u200b\u5bf9\u5916\u90e8\u200b\u4e0d\u200b\u5bfc\u51fa\u200b\u3002\u200b\u5728\u200bA\u200b\u4e2d\u200b\u65e0\u6cd5\u200b<code>export import</code>\uff0c\u200b\u4f46\u662f\u200b\u5bf9\u200b\u5185\u90e8\u200b\u53ef\u89c1\u200b\u3002</p> <pre><code>/////// A-C.cpp \nmodule A:C; // partition module implementation unit\n// WorldImpl() is visible by any module unit of 'A' importing ':C'.\nchar const* WorldImpl() { return \"World\"; }\n</code></pre> <p>main\u200b\u5bfc\u5165\u200bA\u200b\u540e\u200b\uff0c\u200b\u53ef\u89c1\u200bA:B\u200b\u548c\u200bA\u200b\u7684\u200b\u5bfc\u51fa\u200b\u58f0\u660e\u200b\u3001\u200b\u5b9a\u4e49\u200b\u3002</p> <pre><code>/////// main.cpp \nimport A;\nimport &lt;iostream&gt;;\nint main()\n{\n    std::cout &lt;&lt; Hello() &lt;&lt; ' ' &lt;&lt; World() &lt;&lt; '\\n';\n    // WorldImpl(); // ERROR: WorldImpl() is not visible.\n}\n</code></pre>"},{"location":"Archive/C%2B%2B/language/3.module.html#private-module-fragment","title":"?Private module fragment","text":"<pre><code>export module foo;\nexport int f();\nmodule : private; // ends the portion of the module interface unit that\n                  // can affect the behavior of other translation units\n                  // starts a private module fragment\n\nint f()           // definition not reachable from importers of foo\n{\n    return 42;\n}\n</code></pre>"},{"location":"Archive/C%2B%2B/language/3.module.html#header-unit","title":"Header Unit","text":"<p>Header Unit\u200b\u5c31\u662f\u200b\u5bfc\u5165\u200b\u4e00\u4e9b\u200b\u539f\u6765\u200b\u662f\u200b\u5934\u6587\u4ef6\u200b\u7684\u200b\u6a21\u5757\u200b\u3002</p> <pre><code>import &lt;iostream&gt;;\nint main() {\n  std::cout &lt;&lt; \"Hello World.\\n\";\n}\n</code></pre> <p>\u200b\u7f16\u8bd1\u200b\u6307\u4ee4\u200b</p> <pre><code>$ clang++ -std=c++20 -xc++-system-header --precompile iostream -o iostream.pcm\n$ clang++ -std=c++20 -fmodule-file=iostream.pcm main.cpp\n</code></pre>"},{"location":"Archive/C%2B%2B/language/3.module.html#_1","title":"\u4f7f\u7528\u200b\u4f8b\u5b50","text":""},{"location":"Archive/C%2B%2B/language/3.module.html#1","title":"1. \u200b\u5bfc\u51fa\u200b\u58f0\u660e\u200b\u548c\u200b\u5b9a\u4e49","text":"<p>\u200b\u4f7f\u7528\u200b <code>export</code> \u200b\u5173\u952e\u5b57\u200b\u58f0\u660e\u200b\uff0c\u200b\u6216\u8005\u200b\u653e\u5728\u200b <code>export</code> \u200b\u5757\u200b\u4e2d\u200b\uff0c\u200b\u5c31\u200b\u80fd\u591f\u200b\u5bfc\u51fa\u200b\u5b9a\u4e49\u200b\u548c\u200b\u58f0\u660e\u200b\uff08\u200b\u5305\u62ec\u200b <code>namespace</code> \uff09\u3002</p> <pre><code>export module A; // declares the primary module interface unit for named module 'A'\n// hello() will be visible by translations units importing 'A'\nexport char const* hello() { return \"hello\"; } \n// world() will NOT be visible.\nchar const* world() { return \"world\"; }\n// Both one() and zero() will be visible.\nexport{\n    int one()  { return 1; }\n    int zero() { return 0; }\n}\n// Exporting namespaces also works: hi::english() and hi::french() will be visible.\nexport namespace hi{\n    char const* english() { return \"Hi!\"; }\n    char const* french()  { return \"Salut!\"; }\n}\n</code></pre>"},{"location":"Archive/C%2B%2B/language/3.module.html#2","title":"2.  \u200b\u5bfc\u5165\u200b\u6a21\u5757\u200b\u548c\u200b\u5934\u6587\u4ef6","text":"<p><code>import</code> \u200b\u4e00\u4e2a\u200b\u6a21\u5757\u200b\u540e\u200b\uff0c\u200b\u5176\u4e2d\u200b\u6240\u6709\u200b\u5bfc\u51fa\u200b\u7684\u200b\u5b9a\u4e49\u200b\u548c\u200b\u58f0\u660e\u200b\u90fd\u200b\u53ef\u89c1\u200b\u3002 \u200b\u5982\u679c\u200b\u5728\u200bB\u200b\u4e2d\u200b\u4f7f\u7528\u200b <code>export</code> \u200b\u5173\u952e\u5b57\u200b\u58f0\u660e\u200b\u67d0\u4e2a\u200b\u88ab\u200b <code>import</code> \u200b\u7684\u200b\u6a21\u5757\u200bA\uff0c\u200b\u90a3\u4e48\u200b\u5728\u200b\u5176\u4ed6\u200b\u6587\u4ef6\u200b <code>import</code> B\u200b\u65f6\u200b\uff0c\u200b\u80fd\u200b\u89c1\u5230\u200bA\u200b\u7684\u200b\u6240\u6709\u200b\u5bfc\u51fa\u200b\u3002</p> <p>\u200b\u5728\u200b\u6a21\u5757\u200b\u5355\u5143\u200b\u4e2d\u200b\uff0c\u200b\u6240\u6709\u200b\u7684\u200b <code>import</code> \u200b\u58f0\u660e\u200b\uff08\u200b\u5305\u62ec\u200b <code>export-imports</code> \uff09\u200b\u5fc5\u987b\u200b\u88ab\u200b\u5206\u7ec4\u200b\u5728\u200b\u6a21\u5757\u200b\u58f0\u660e\u200b\u4e4b\u540e\u200b\u548c\u200b\u6240\u6709\u200b\u5176\u4ed6\u200b\u58f0\u660e\u200b\u4e4b\u524d\u200b\u3002</p> <pre><code>/////// A.cpp (primary module interface unit of 'A')\nexport module A;\nexport char const* hello() { return \"hello\"; }\n\n/////// B.cpp (primary module interface unit of 'B')\nexport module B;\nexport import A;\nexport char const* world() { return \"world\"; }\n\n/////// main.cpp (not a module unit)\n#include &lt;iostream&gt;\nimport B;\n\nint main()\n{\n    std::cout &lt;&lt; hello() &lt;&lt; ' ' &lt;&lt; world() &lt;&lt; '\\n';\n}\n</code></pre> <p><code>#include</code> \u200b\u4e0d\u200b\u5e94\u8be5\u200b\u5728\u200b\u6a21\u5757\u200b\u5355\u5143\u200b\u4e2d\u200b\u4f7f\u7528\u200b\uff08\u200b\u5728\u200b\u5168\u5c40\u200b\u6a21\u5757\u200b\u7247\u6bb5\u200b\u4e4b\u5916\u200b\uff09\uff0c\u200b\u56e0\u4e3a\u200b\u6240\u6709\u200b\u5305\u542b\u200b\u7684\u200b\u58f0\u660e\u200b\u548c\u200b\u5b9a\u4e49\u200b\u90fd\u200b\u4f1a\u200b\u88ab\u200b\u89c6\u4e3a\u200b\u6a21\u5757\u200b\u7684\u200b\u4e00\u90e8\u5206\u200b\u3002 \u200b\u76f8\u53cd\u200b\uff0c\u200b\u5934\u6587\u4ef6\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7528\u200b\u5bfc\u5165\u200b\u58f0\u660e\u200b\u6765\u200b\u5bfc\u5165\u200b\u3002</p> <pre><code>/////// A.cpp (primary module interface unit of 'A')\nexport module A;\nimport &lt;iostream&gt;; // \u200b\u5bfc\u5165\u200biostream\u200b\u6a21\u5757\u200b\nexport import &lt;string_view&gt;; //\u200b\u5bfc\u51fa\u200b-\u200b\u5bfc\u5165\u200bstring_view\u200b\u6a21\u5757\u200b\nexport void print(std::string_view message){\n    std::cout &lt;&lt; message &lt;&lt; std::endl;\n}\n\n/////// main.cpp (not a module unit)\nimport A;\nint main()\n{\n    std::string_view message = \"Hello, world!\";\n    print(message);\n}\n</code></pre>"},{"location":"Archive/C%2B%2B/language/3.module.html#3","title":"3.\u200b\u7efc\u5408\u200b\u4f8b\u5b50","text":"<pre><code>// M.cppm\nexport module M; // \u200b\u4e3b\u200b\u6a21\u5757\u63a5\u53e3\u200b\nexport import :interface_part; // \nimport :impl_part; // \u200b\u5bfc\u5165\u200b\u5176\u4ed6\u200b\u5355\u5143\u200b\nexport void Hello(); // \u200b\u6a21\u5757\u200bM\u200b\u7684\u200b\u5bfc\u51fa\u200b\u90e8\u5206\u200b\n\n// interface_part.cppm\nexport module M:interface_part; // \u200b\u6a21\u5757\u63a5\u53e3\u200b\u5206\u533a\u200b\u5355\u5143\u200b\nexport void World();\n\n// impl_part.cppm\nmodule;             // \u200b\u6a21\u5757\u200b\u5168\u5c40\u200b\n#include &lt;iostream&gt;\n#include &lt;string&gt;\nmodule M:impl_part;  // \u200b\u5185\u90e8\u200b\u6a21\u5757\u200b\u5206\u533a\u200b\u5355\u5143\u200b\nimport :interface_part;\n\nstd::string W = \"World.\";\nvoid World() {\n  std::cout &lt;&lt; W &lt;&lt; std::endl;\n}\n\n// Impl.cpp\nmodule;\n#include &lt;iostream&gt;\nmodule M;\nvoid Hello() {\n  std::cout &lt;&lt; \"Hello \";\n}\n\n// User.cpp\nimport M;\nint main() {\n  Hello();\n  World();\n  return 0;\n}\n</code></pre> <p>\u200b\u7f16\u8bd1\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b</p> <pre><code># Precompiling the module\n$ clang++ -std=c++20 interface_part.cppm --precompile -o M-interface_part.pcm\n$ clang++ -std=c++20 impl_part.cppm --precompile -fprebuilt-module-path=. -o M-impl_part.pcm\n$ clang++ -std=c++20 M.cppm --precompile -fprebuilt-module-path=. -o M.pcm\n$ clang++ -std=c++20 Impl.cpp -fmodule-file=M=M.pcm -c -o Impl.o\n\n# Compiling the user\n$ clang++ -std=c++20 User.cpp -fprebuilt-module-path=. -c -o User.o\n\n# Compiling the module and linking it together\n$ clang++ -std=c++20 M-interface_part.pcm -c -o M-interface_part.o\n$ clang++ -std=c++20 M-impl_part.pcm -c -o M-impl_part.o\n$ clang++ -std=c++20 M.pcm -c -o M.o\n$ clang++ User.o M-interface_part.o  M-impl_part.o M.o Impl.o -o a.out\n</code></pre>"},{"location":"Archive/C%2B%2B/language/4.function.html","title":"Function","text":""},{"location":"Archive/C%2B%2B/language/4.function.html#parameters","title":"parameters","text":""},{"location":"Archive/C%2B%2B/language/4.function.html#pass-by-value","title":"pass-by-value","text":""},{"location":"Archive/C%2B%2B/language/4.function.html#pass-by-reference","title":"pass-by-reference","text":""},{"location":"Archive/C%2B%2B/language/4.function.html#pass-by-value-vs-pass-by-reference","title":"pass-by-value vs pass-by-reference","text":""},{"location":"Archive/C%2B%2B/language/4.function.html#chaining-functions","title":"chaining functions","text":""},{"location":"Archive/C%2B%2B/language/5.lambda.html","title":"Lambda","text":""},{"location":"Archive/C%2B%2B/language/5.lambda.html#inherit-from-lambdas","title":"inherit from lambdas","text":""},{"location":"Archive/C%2B%2B/language/5.lambda.html#higher-order-function","title":"higher order function","text":""},{"location":"Archive/C%2B%2B/language/5.lambda.html#variadic-lambdas","title":"variadic lambdas","text":""},{"location":"Archive/C%2B%2B/language/5.lambda.html#recursive-lambdas","title":"recursive lambdas","text":""},{"location":"Archive/C%2B%2B/language/5.lambda.html#lambdas","title":"lambdas \u200b\u7684\u200b\u7c7b\u578b\u200b\u63a8\u65ad","text":"<p>\u200b\u5728\u200bC++20\u200b\u4ee5\u540e\u200b\u800c\u8a00\u200b\u5bf9\u200blambda\u200b\u8fdb\u884c\u200b<code>decltype</code>\u200b\u7c7b\u578b\u200b\u63a8\u65ad\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u6765\u200b\u7ba1\u7406\u6587\u4ef6\u200b\u8d44\u6e90\u200b\u3002</p> <pre><code>   using cfile = std::unique_ptr&lt;FILE, \n                    decltype([](FILE *f) { fclose(f); })&gt;;\n    auto make_cfile(char const * filename, char const * mode){\n        File * stream {fopen(filename,mode)};\n        if (not stream){\n            throw std::runtime_exception{ \"Failed to open file \"};\n        }\n        return cfile{stream};\n    }\n</code></pre>"},{"location":"Archive/C%2B%2B/language/5.lambda.html#question","title":"Question","text":"<p>\u200b\u7ed9\u51fa\u200b\u4e00\u4e9b\u200b\u5e0c\u671b\u200b<code>lambda</code>\u200b\u5230\u200b\u51fd\u6570\u6307\u9488\u200b\u8f6c\u6362\u200b\u7684\u200b\u7406\u7531\u200b</p> <p>\u200b\u67d0\u4e9b\u200b\u573a\u666f\u200b\u4e0b\u200b\u9700\u8981\u200b\u548c\u200bC API\u200b\u4e92\u52a8\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u9700\u8981\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u6307\u9488\u200b\uff08\u200b\u4f8b\u5982\u200b\u4e00\u4e2a\u200b\u56de\u8c03\u200b\uff09\u3002</p> <pre><code>```C++\nextern \"C\"{\n    void use_callback(int (*)(int));\n}\nvoid func(){\n    use_callback([](int i){return i*2;});\n}\n```\n</code></pre> <p>\u200b\u601d\u8003\u200b<code>lambda</code>\u200b\u7ee7\u627f\u200b\u7684\u200b\u771f\u5b9e\u200b\u4f5c\u7528\u200b\u573a\u666f\u200b</p> <p>\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b<code>operator()()</code>\u3002</p> <p>\u200b\u5728\u200bC++98\u200b\u4e0b\u200b\u5b9e\u73b0\u200b</p> <pre><code>```C++\n[n0=0,n1=1] mutable {\n    n0 = std::exchange(n1,n0+n1); \n    return n0;\n    }\n```\n</code></pre>"},{"location":"Archive/C%2B%2B/language/6.declarations.html","title":"1. Declarations Overview","text":"<p>Declarations\u200b\u662f\u200b\u5728\u200bC++\u200b\u7a0b\u5e8f\u200b\u4e2d\u200b\u5f15\u5165\u200b\uff08\u200b\u6216\u200b\u91cd\u65b0\u200b\u5f15\u5165\u200b\uff09\u200b\u540d\u79f0\u200b\u7684\u200b\u65b9\u5f0f\u200b\u3002\u200b\u5e76\u975e\u200b\u6240\u6709\u200b\u7684\u200bdeclarations\u200b\u90fd\u200b\u80fd\u200b\u5b9e\u9645\u200b\u58f0\u660e\u200b\u4efb\u4f55\u200b\u4e1c\u897f\u200b\uff0c\u200b\u6bcf\u79cd\u200b\u5b9e\u4f53\u200b\u7684\u200b\u58f0\u660e\u200b\u65b9\u5f0f\u200b\u90fd\u200b\u4e0d\u540c\u200b\u3002Definitions\u200b\u662f\u200b\u4e00\u79cd\u200b\u8db3\u4ee5\u200b\u4f7f\u7528\u200b\u540d\u79f0\u200b\u6240\u200b\u6807\u8bc6\u200b\u7684\u200b\u5b9e\u4f53\u200b\u7684\u200bDeclarations\u3002Definition\u200b\u90fd\u200b\u662f\u200bDeclarations\uff0c\u200b\u53cd\u8fc7\u6765\u200b\u5219\u200b\u4e0d\u662f\u200b\u3002</p> <pre><code>int foo(int n); // declarations\nint foo(int n) {return n + 5} // definition\n\nint i; // definition, allocates storage\nextern int j; // non-defining declaration(\"exists, but not here\")\nextern int k =42; // definition\n</code></pre> <p>\u200b\u4e0d\u540c\u200b\u7684\u200b\u540d\u5b57\u200b\u548c\u200b\u4ed6\u4eec\u200b\u7684\u200b\u6027\u8d28\u200b</p> object function label scope yes yes yes type yes yes no storage duration yes no no linkage yes yes no <p>Declarations\u200b\u7684\u200b\u7ed3\u6784\u200b\u662f\u200b <code>[declaration specifiers] [declarator]</code></p> <ul> <li>[declaration specifiers]</li> <li>type specifier\uff1a\u200b\u57fa\u672c\u200b\u7c7b\u578b\u200b\u3001class\u3001template\u200b\u7279\u5316\u200b\u3002type specifier\u200b\u4fee\u9970\u200b\u5176\u4ed6\u200btype specifier \uff0c\u200b\u4ed6\u4eec\u200b\u5168\u90fd\u200b\u88ab\u200b\u94fe\u63a5\u200b\u5728\u200b\u4e00\u8d77\u200b\uff0c\u200b\u987a\u5e8f\u200b\u5e76\u200b\u4e0d\u200b\u91cd\u8981\u200b\uff08<code>unsigned long</code> = <code>long unsigned</code>\uff09\u3002</li> <li>non-type specifier: storage class(<code>extern, static, thread_local</code>)\uff0cfunction(<code>inline, virtual</code>)\uff0cother(<code>friend, typedef</code>)\u3002\u200b\u4ed6\u4eec\u200b\u76f4\u63a5\u200b\u5e94\u7528\u200b\u5728\u200bdeclarator-id\u200b\u4e0a\u200b\u3002</li> </ul> <ul> <li>[declarator]</li> <li> <p>= declarator-id + (operators<code>*, &amp;, &amp;&amp;, [], ()</code>)</p> \u200b\u4f18\u5148\u7ea7\u200b operator \u200b\u542b\u4e49\u200b Highest <code>()</code> grouping <code>[]</code> <code>()</code> \"array\"  \"function\" Lowest <code>*</code> <code>&amp;</code> <code>&amp;&amp;</code> \"pointer\"  \"reference\"  \"rvalue reference\" </li> </ul> <p>\u200b\u4e00\u4e2a\u200bDeclarations\u200b\u662f\u200b\u4ee5\u4e0b\u200b\u4e00\u79cd\u200b</p> <ul> <li>\u200b\u51fd\u6570\u200bdefinition</li> <li>\u200b\u6a21\u677f\u200bdeclaration(\u200b\u5305\u62ec\u200b\u90e8\u5206\u200b\u6a21\u677f\u200b\u7279\u5316\u200bPartial template specialization)</li> <li>\u200b\u663e\u5f0f\u200b\u6a21\u677f\u200b\u5b9e\u4f8b\u200b\u5316\u200b</li> <li>\u200b\u663e\u5f0f\u200b\u6a21\u677f\u200b\u5177\u4f53\u5316\u200b</li> <li>\u200b\u547d\u540d\u200b\u7a7a\u95f4\u200bdefinition</li> <li>\u200b\u94fe\u63a5\u200b\u89c4\u8303\u200b</li> <li>\u200b\u5c5e\u6027\u200bdeclaration(attr) [C++11]</li> <li>\u200b\u7a7a\u200bdeclaration\uff1b</li> <li>\u200b\u4e00\u4e2a\u200b\u6ca1\u6709\u200bdecl-specifier-seq\u200b\u7684\u200b\u51fd\u6570\u200bdeclaration</li> </ul>"},{"location":"Archive/C%2B%2B/language/6.declarations.html#2-specifiers","title":"2. Specifiers","text":""},{"location":"Archive/C%2B%2B/language/6.declarations.html#constvolatilecv-type-qualifiers-mutable","title":"const/volatile(cv type qualifiers) + mutable","text":""},{"location":"Archive/C%2B%2B/language/6.declarations.html#1-cv-type-qualifiers","title":"1. cv type qualifiers \u200b\u57fa\u672c\u200b\u542b\u4e49","text":"<ul> <li>const \u200b\u5bf9\u8c61\u200b\uff1a\u200b\u4e0d\u80fd\u200b\u88ab\u200b\u4fee\u6539\u200b\uff1a\u200b\u8bd5\u56fe\u200b\u76f4\u63a5\u200b\u8fd9\u6837\u200b\u505a\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u9519\u8bef\u200b\uff0c\u200b\u8bd5\u56fe\u200b\u95f4\u63a5\u200b\u8fd9\u6837\u200b\u505a\u200b\uff08\u200b\u4f8b\u5982\u200b\uff0c\u200b\u901a\u8fc7\u200b\u5bf9\u200b\u975e\u5e38\u200b\u91cf\u200b\u7c7b\u578b\u200b\u7684\u200b\u5f15\u7528\u200b\u6216\u200b\u6307\u9488\u200b\u6765\u200b\u4fee\u6539\u200b\u5e38\u91cf\u200b\u5bf9\u8c61\u200b\uff09\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u672a\u5b9a\u4e49\u200b\u884c\u4e3a\u200b\u3002</li> <li>volatile \u200b\u5bf9\u8c61\u200b\uff1avolatile\u200b\u63d0\u9192\u200b\u7f16\u8bd1\u5668\u200b\u5b83\u200b\u540e\u9762\u200b\u6240\u200b\u5b9a\u4e49\u200b\u7684\u200b\u53d8\u91cf\u200b\u968f\u65f6\u200b\u90fd\u200b\u6709\u200b\u53ef\u80fd\u200b\u6539\u53d8\u200b\uff0c\u200b\u56e0\u6b64\u200b\u7f16\u8bd1\u200b\u540e\u200b\u7684\u200b\u7a0b\u5e8f\u200b\u6bcf\u6b21\u200b\u9700\u8981\u200b\u5b58\u50a8\u200b\u6216\u200b\u8bfb\u53d6\u200b\u8fd9\u4e2a\u200b\u53d8\u91cf\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u544a\u8bc9\u200b\u7f16\u8bd1\u5668\u200b\u5bf9\u200b\u8be5\u200b\u53d8\u91cf\u200b\u4e0d\u200b\u505a\u200b\u4f18\u5316\u200b\uff0c\u200b\u90fd\u200b\u4f1a\u200b\u76f4\u63a5\u200b\u4ece\u200b\u53d8\u91cf\u200b\u5185\u5b58\u5730\u5740\u200b\u4e2d\u200b\u8bfb\u53d6\u6570\u636e\u200b\uff0c\u200b\u4ece\u800c\u200b\u53ef\u4ee5\u200b\u63d0\u4f9b\u200b\u5bf9\u200b\u7279\u6b8a\u200b\u5730\u5740\u200b\u7684\u200b\u7a33\u5b9a\u200b\u8bbf\u95ee\u200b\u3002\u200b\u4efb\u4f55\u200b\u8bd5\u56fe\u200b\u901a\u8fc7\u200bnon-volatile\u200b\u7c7b\u578b\u200b\u7684\u200bglvalue\uff08\u200b\u4f8b\u5982\u200b\u901a\u8fc7\u200b\u5bf9\u200bnon-volatile\u200b\u7c7b\u578b\u200b\u7684\u200b\u5f15\u7528\u200b\u6216\u200b\u6307\u9488\u200b\uff09\u200b\u6765\u200b\u8bbf\u95ee\u200bvolatile\u200b\u5bf9\u8c61\u200b\u7684\u200b\u884c\u4e3a\u200b\u90fd\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u672a\u5b9a\u4e49\u200b\u884c\u4e3a\u200b\u3002\uff08\u200b\u5d4c\u5165\u5f0f\u200b\u7f16\u7a0b\u200b\u7528\u200b\u7684\u200b\uff09</li> <li>const-volatile \u200b\u5bf9\u8c61\u200b\uff1a\u200b\u65e2\u200b\u662f\u200bconst \u200b\u5bf9\u8c61\u200b\uff0c\u200b\u53c8\u200b\u662f\u200bvolatile \u200b\u5bf9\u8c61\u200b\u3002</li> </ul>"},{"location":"Archive/C%2B%2B/language/6.declarations.html#2-declarator-cv-type-qualifiers","title":"2. \u200b\u5728\u200bdeclarator\u200b\u4e2d\u200b\u7684\u200b cv type qualifiers","text":"<p><code>const, volatile</code> \u200b\u662f\u200b\u552f\u200b\u4e8c\u4e2a\u200b\u65e2\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200bdeclaration specifiers\uff0c\u200b\u53c8\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200bdeclarator\u200b\u7684\u200b\u7b26\u53f7\u200b\u3002\u200b\u4f8b\u5982\u200b<code>const int *v[N]</code> \u200b\u6216\u200b <code>int const *v[N]</code> \u200b\u4e2d\u200b\uff0c<code>const</code> \u200b\u90fd\u200b\u4f5c\u4e3a\u200btype specifier\u200b\u4fee\u9970\u200b <code>int</code>\uff0c\u200b\u5176\u200b\u7ed3\u679c\u200b\u662f\u200b\u201c<code>v</code> \u200b\u662f\u200b\u6709\u7740\u200bN\u200b\u4e2a\u200b\u6307\u9488\u200b\u7684\u200b\u6570\u7ec4\u200b\uff0c\u200b\u6307\u5411\u200b\u5bf9\u8c61\u200b\u4e3a\u200b<code>const int</code>\u201d\uff1b\u200b\u800c\u200b <code>int * const v[N]</code> \u200b\u4e2d\u200b<code>const</code> \u200b\u5728\u200bdeclarator\u200b\u4e2d\u200b\u51fa\u73b0\u200b\uff0c\u200b\u4fee\u9970\u200b <code>*</code>\uff0c\u200b\u5176\u200b\u7ed3\u679c\u200b\u662f\u200b\u201c<code>v</code> \u200b\u662f\u200b\u6709\u7740\u200bN\u200b\u4e2a\u200b\u6307\u9488\u200b\u7684\u200b<code>const</code>\u200b\u6570\u7ec4\u200b\uff0c\u200b\u6307\u5411\u200b\u5bf9\u8c61\u200b\u4e3a\u200b<code>int</code>\u201d\u3002</p> <pre><code>widget * const cpw; // const pointer to ...\nwidget * const *pcpw; // pointer to const pointer to ...\nwidget ** const cpw; //const pointer to (non-const) pointer to ...\n</code></pre> <p>!!! note <code>const, volatile</code> \u200b\u653e\u5728\u200b\u54ea\u513f\u200b\uff1f     \u200b\u5148\u5199\u200b\u5176\u4ed6\u200bdeclaration\u200b\u7684\u200b\u90e8\u5206\u200b\uff0c\u200b\u7136\u540e\u200b\u5c06\u200b <code>const, volatile</code> \u200b\u653e\u5728\u200b\u5e0c\u671b\u200b\u88ab\u200b\u4fee\u9970\u200b\u7684\u200btype specifier\u200b\u7684\u200b immediate right\u3002</p>"},{"location":"Archive/C%2B%2B/language/6.declarations.html#3-mutable","title":"3. mutable","text":"<p><code>mutable</code> \u200b\u5141\u8bb8\u200b\u7c7b\u4e2d\u200b\u7684\u200b\u6210\u5458\u200b\u53ef\u53d8\u200b\uff0c\u200b\u5373\u4f7f\u200b\u8be5\u200bobject\u200b\u88ab\u200b\u58f0\u660e\u200b\u4e3a\u200b<code>const</code>\u3002</p> <pre><code>    const struct\n    {\n        int n1;\n        mutable int n2;\n    } x = {0, 0};        // const object with mutable member\n\n//  x.n1 = 4; // error: member of a const object is const\n    x.n2 = 4; // ok, mutable member of a const object isn't const\n</code></pre>"},{"location":"Archive/C%2B%2B/language/6.declarations.html#constexpr","title":"constexpr","text":""},{"location":"Archive/C%2B%2B/language/6.declarations.html#1-constexpr","title":"1. constexpr \u200b\u57fa\u672c\u200b\u542b\u4e49","text":"<p><code>constexpr</code>\u200b\u5b9e\u9645\u4e0a\u200b\u5c31\u662f\u200b\u5c06\u200b\u8fd0\u884c\u200b\u65f6\u200b\u8ba1\u7b97\u200b\u8f6c\u79fb\u200b\u5230\u200b\u7f16\u8bd1\u200b\u671f\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002</p>"},{"location":"Archive/C%2B%2B/language/6.declarations.html#2-declarator-constexpr","title":"2. \u200b\u5728\u200b declarator \u200b\u4e2d\u200b\u7684\u200b constexpr","text":"<p><code>constexpr</code>\u200b\u7684\u200b\u987a\u5e8f\u200b\u6bd4\u8f83\u200b\u5947\u602a\u200b\uff0c\u200b\u5b83\u200b\u4e0d\u662f\u200b\u4e00\u4e2a\u200btype specifier\uff0c\u200b\u884c\u4e3a\u200b\u66f4\u200b\u50cf\u200bnon-type specifier\uff08\u200b\u76f4\u63a5\u200b\u4fee\u9970\u200bdeclarator-id\uff09</p> <pre><code>//non-equivalent \nchar constexpr *p;\nchar const *p;\n\n//equivalent \nchar constexpr *p; // constexpr pointer to char \nchar *const p;    // const pointer to char \n</code></pre>"},{"location":"Archive/C%2B%2B/language/6.declarations.html#_1","title":"\u4e0d\u540c\u200b\u7248\u672c","text":"<p>C++11\u200b\u4e0b\u200b\uff0c<code>constexpr</code></p> <ul> <li>\u200b\u53ea\u80fd\u200b\u6709\u200b\u5355\u6761\u200b\u8bed\u53e5\u200b</li> <li><code>constexpr</code>\u200b\u6210\u5458\u200b\u5b9e\u73b0\u200b\u662f\u200b<code>const</code>\u200b\u7684\u200b</li> <li>\u200b\u4e0d\u662f\u200b<code>non-virtual</code>\u200b\u7684\u200b\u6210\u5458\u200b</li> <li>\u200b\u6ca1\u6709\u200b\u5206\u652f\u200b\u3001switch\u200b\u7b49\u200b\u8fd4\u56de\u200b</li> </ul> <p>C++14\u200b\u4e0b\u200b\uff0c<code>constexpr</code></p> <ul> <li>\u200b\u53ef\u4ee5\u200b\u6709\u200b\u591a\u6761\u200b\u8bed\u53e5\u200b</li> <li><code>constexpr</code>\u200b\u6210\u5458\u200b\u53ef\u4ee5\u200b\u4e0d\u662f\u200b<code>const</code>\u200b\u7684\u200b</li> <li>\u200b\u4e0d\u200b\u652f\u6301\u200b<code>lambda</code></li> <li>\u200b\u56fe\u7075\u200b\u5b8c\u5907\u200b</li> </ul> <p>C++17\u200b\u4e0b\u200b\uff0c<code>constexpr</code></p> <ul> <li>\u200b\u591a\u4e2a\u200bstdlib\u200b\u652f\u6301\u200b</li> <li><code>lambda</code>\u200b\u81ea\u52a8\u200b\u5f00\u542f\u200b<code>constexpr</code></li> </ul> <p>C++20\u200b\u4e0b\u200b\uff0c<code>constexpr</code></p> <ul> <li><code>constexpr</code> \u200b\u52a8\u6001\u5206\u914d\u200b</li> <li><code>constexpr</code> destructor/vector/string/algorithms</li> </ul>"},{"location":"Archive/C%2B%2B/language/6.declarations.html#constinit","title":"constinit","text":""},{"location":"Archive/C%2B%2B/language/6.declarations.html#consteval","title":"consteval","text":""},{"location":"Archive/C%2B%2B/language/6.declarations.html#type-alias-alias-template","title":"Type alias, alias template","text":"<p>Type alias \u200b\u662f\u200b\u6307\u200b\u4e00\u4e2a\u200b\u5148\u524d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u7c7b\u578b\u200b\u7684\u200b\u540d\u79f0\u200b\uff08\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b <code>typedef</code> \uff09\u3002 Alias template \u200b\u662f\u200b\u6307\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\u5bb6\u65cf\u200b\u7684\u200b\u540d\u79f0\u200b\u3002</p> <p>\u200b\u8bed\u6cd5\u200b\u5982\u4e0b\u200b</p> <pre><code>//type alias\nusing vec = std::vector;\nusing func = void (*)(int,int); //  = typedef void(*func)(int,int)\n\n// alias template\ntemplate&lt;class T&gt;\nusing ptr = T*;\n\ntemplate&lt;class CharT&gt;\nusing mystring = std::basic_string&lt;CharT, std::char_traits&lt;CharT&gt;&gt;; // hide a template parameter\n\ntemplate&lt;typename T&gt;\nstruct Container { using value_type = T; };//introduce a member typedef name\n\ntemplate&lt;typename ContainerT&gt;\nvoid info(const ContainerT&amp; c)\n{\n    typename ContainerT::value_type T;\n    std::cout &lt;&lt; \"ContainerT is `\" &lt;&lt; typeid(decltype(c)).name() &lt;&lt; \"`\\n\"\n                 \"value_type is `\" &lt;&lt; typeid(T).name() &lt;&lt; \"`\\n\";\n}// generic programming\n</code></pre> <p>\u200b\u5728\u200b\u9047\u5230\u200btemplate\u200b\u5b9a\u4e49\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u7f16\u8bd1\u5668\u200b\u505a\u200b\u4e24\u6bb5\u200b\u5904\u7406\u200b     1. \u200b\u89e3\u6790\u200b template declaration\uff0c\u200b\u5bf9\u200b\u6bcf\u4e2a\u200btemplate \u200b\u53ea\u200b\u53d1\u751f\u200b\u4e00\u6b21\u200b\u3002     2. \u200b\u5f53\u200b\u5bf9\u4e8e\u200b\u67d0\u4e2a\u200b\u53c2\u6570\u200b\u7ec4\u5408\u200b\u8fdb\u884c\u200b\u5b9e\u4f8b\u200b\u5316\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u518d\u200b\u7279\u5316\u200b\u4e00\u4e2a\u200b\u7248\u672c\u200b\u3002</p>"},{"location":"Archive/C%2B%2B/language/6.declarations.html#3-specifiers","title":"3. Specifiers","text":""},{"location":"Archive/C%2B%2B/language/6.declarations.html#4-declarator","title":"4. Declarator","text":""},{"location":"Archive/C%2B%2B/language/6.declarations.html#41-reference-declaration","title":"4.1 Reference declaration","text":"<p>\u200b\u5c06\u200b\u4e00\u4e2a\u200b\u547d\u540d\u200b\u7684\u200b\u53d8\u91cf\u200b\u58f0\u660e\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u5f15\u7528\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b\u4e00\u4e2a\u200b\u5df2\u7ecf\u200b\u5b58\u5728\u200b\u7684\u200b\u5bf9\u8c61\u200b\u6216\u200b\u51fd\u6570\u200b\u7684\u200b\u522b\u540d\u200b\u3002\u200b\u6709\u200b\u51e0\u4e2a\u200b\u8981\u6c42\u200b     - \u200b\u9700\u8981\u200b\u88ab\u200b\u521d\u59cb\u5316\u200b\u4e3a\u200b\u53ea\u200b\u60f3\u200b\u4e00\u4e2a\u200b\u5408\u6cd5\u200b\u7684\u200b\u5bf9\u8c61\u200b\u6216\u200b\u51fd\u6570\u200b     - \u200b\u4e0d\u200b\u6307\u5411\u200b <code>void</code> \u200b\u548c\u200b\u5176\u4ed6\u200breferences     - \u200b\u6ca1\u6709\u200b\u9876\u5c42\u200b\u7684\u200b cv-qualifiers\uff0c\u200b\u5e76\u4e14\u200b\u5982\u679c\u200bqualifications\u200b\u88ab\u200b\u52a0\u5230\u200btypedef-name / decltype specifier / type template parameter\u200b\u4e0a\u200b\uff0c\u200b\u4f1a\u200b\u88ab\u200b\u5ffd\u7565\u200b\u3002</p> <pre><code>&amp; attr(optional) declarator(1)  //\u200b\u5de6\u503c\u200b\u5f15\u7528\u200b\n&amp;&amp; attr(optional) declarator(2) //\u200b\u53f3\u503c\u200b\u5f15\u7528\u200b\n</code></pre> <p>\ud83d\udd18 \u200b\u5f15\u7528\u200b\u6298\u53e0\u200b \u200b\u53f3\u503c\u200b\u5f15\u7528\u200b\u6307\u5411\u200b\u53f3\u503c\u200b\u5f15\u7528\u200b -&gt; \u200b\u6298\u53e0\u4e3a\u200b\u53f3\u503c\u200b\u5f15\u7528\u200b\u3002\u200b\u5176\u4ed6\u200b\u6240\u6709\u200b\u7ec4\u5408\u200b\u90fd\u200b\u6298\u53e0\u4e3a\u200b\u5de6\u503c\u200b\u5f15\u7528\u200b\u3002</p> <pre><code>typedef int&amp;  lref;\ntypedef int&amp;&amp; rref;\nint n;\n\nlref&amp;  r1 = n; // type of r1 is int&amp;\nlref&amp;&amp; r2 = n; // type of r2 is int&amp;\nrref&amp;  r3 = n; // type of r3 is int&amp;\nrref&amp;&amp; r4 = 1; // type of r4 is int&amp;&amp;\n</code></pre> <p>\ud83d\udd18 \u200b\u5de6\u503c\u200b\u5f15\u7528\u200b \ud83d\udd18 \u200b\u53f3\u503c\u200b\u5f15\u7528\u200b \ud83d\udd18 Forward\u200b\u5f15\u7528\u200b \u200b\u8f6c\u53d1\u200b\u5f15\u7528\u200b\u548c\u200b\u53f3\u503c\u200b\u5f15\u7528\u200b\u4e0d\u540c\u200b\u7684\u200b\u5730\u65b9\u200b\u5728\u4e8e\u200b\uff1a\u200b\u5b83\u200b\u4fdd\u7559\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u53c2\u6570\u200b\u7684\u200b\u503c\u200b\u7c7b\u522b\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u901a\u8fc7\u200b<code>std::forward</code>\u200b\u8f6c\u53d1\u200b\u5b83\u200b\u6210\u4e3a\u200b\u53ef\u80fd\u200b\u3002\u200b\u8f6c\u53d1\u200b\u5f15\u7528\u200b\u662f\u200b\u4ee5\u4e0b\u200b\u4e24\u79cd\u200b\u60c5\u51b5\u200b\u4e4b\u4e00\u200b\u3002</p> <ol> <li> <p>\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u6a21\u677f\u200b\u7684\u200b\u51fd\u6570\u53c2\u6570\u200b\u88ab\u200b\u58f0\u660e\u200b\u4e3a\u200b\u5bf9\u200b\u540c\u4e00\u200b\u51fd\u6570\u200b\u6a21\u677f\u200b\u7684\u200bcv-unqualified\u200b\u7c7b\u578b\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u7684\u200b\u53f3\u503c\u200b\u5f15\u7528\u200b</p> <pre><code>template&lt;class T&gt;\nint f(T&amp;&amp; x)                      // x is a forwarding reference\n{\n    return g(std::forward&lt;T&gt;(x)); // and so can be forwarded\n}\n\nint main()\n{\n    int i;\n    f(i); // argument is lvalue, calls f&lt;int&amp;&gt;(int&amp;), std::forward&lt;int&amp;&gt;(x) is lvalue\n    f(0); // argument is rvalue, calls f&lt;int&gt;(int&amp;&amp;), std::forward&lt;int&gt;(x) is rvalue\n}\n\ntemplate&lt;class T&gt;\nint g(const T&amp;&amp; x); // x is not a forwarding reference: const T is not cv-unqualified\n\ntemplate&lt;class T&gt;\nstruct A\n{\n    template&lt;class U&gt;\n    A(T&amp;&amp; x, U&amp;&amp; y, int* p); // x is not a forwarding reference: T is not a\n                            // type template parameter of the constructor,\n                            // but y is a forwarding reference\n};\n</code></pre> </li> <li> <p><code>auto&amp;&amp;</code>\uff0c\u200b\u9664\u4e86\u200b\u662f\u4ece\u200b <code>{}</code> \u200b\u521d\u59cb\u5316\u200b\u5217\u8868\u200b\u63a8\u65ad\u200b\u51fa\u6765\u200b\u7684\u200b\u65f6\u5019\u200b</p> </li> </ol> <pre><code>auto&amp;&amp; vec = foo();       // foo() may be lvalue or rvalue, vec is a forwarding reference\n auto i = std::begin(vec); // works either way\n (*i)++;                   // works either way\n\n g(std::forward&lt;decltype(vec)&gt;(vec)); // forwards, preserving value category\n\n for (auto&amp;&amp; x: f())\n {\n     // x is a forwarding reference; this is the safest way to use range for loops\n }\n\n auto&amp;&amp; z = {1, 2, 3}; // *not* a forwarding reference (special case for initializer lists)\n</code></pre> <p>Note</p> <ol> <li><code>arg</code> \u200b\u4e0d\u662f\u200b cv-qualified\u3002</li> <li><code>arg</code> \u200b\u5728\u200b\u4e00\u4e2a\u200b\"deduction context\"\u200b\u4e2d\u200b\uff08\u200b\u4e5f\u200b\u5c31\u662f\u200b\u7c7b\u578b\u200b<code>T</code>\u200b\u53ef\u80fd\u200b\u662f\u4ece\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\u6a21\u677f\u200b\u4e2d\u200b\u63a8\u65ad\u200b\u5f97\u5230\u200b\u7684\u200b\uff09\u3002 <pre><code>template &lt;typename T&gt;\nvoid dispatch(T &amp;&amp; arg); // \u200b\u5f15\u7528\u200b\u8f6c\u53d1\u200b\n\ntemplate &lt;typename T&gt;\nclass C{\npublic: \n    void mf(T &amp;&amp;x); // \u200b\u53f3\u503c\u200b\u8f6c\u53d1\u200b\uff0cC\u200b\u521b\u5efa\u200b\u65f6\u200bT\u200b\u5c31\u5b9a\u200b\u4e86\u200b\n};\n</code></pre></li> </ol>"},{"location":"Archive/C%2B%2B/language/6.declarations.html#5-block-declarations","title":"5. Block declarations","text":""},{"location":"Archive/C%2B%2B/language/7.initialization.html","title":"initialization","text":"<p>C++\u200b\u6807\u51c6\u200b\u4e2d\u200b\u7684\u200b\u521d\u59cb\u5316\u200b\u6709\u200b\u8fd9\u200b\u51e0\u79cd\u200b</p> <ol> <li>Default initialization</li> <li>Value initialization</li> <li>Copy initialization</li> <li>Direct initialization</li> <li>Aggregate initialization</li> <li>List initialization (C++11)</li> <li>Reference initialization</li> <li>Static non-local initialization(zero \u2013 constant)</li> <li>Dynamic non-local initialization(ordered \u2013 unordered)</li> </ol>"},{"location":"Archive/C%2B%2B/language/7.initialization.html#default-initialization","title":"default initialization","text":"<p>default initialization\u200b\u5728\u200b\u4e09\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u53d1\u751f\u200b</p> <ol> <li>\u200b\u5f53\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b\u521d\u59cb\u5316\u200b\u65f6\u200b\u6ca1\u6709\u200b\u4efb\u4f55\u200binitializer\uff0c\u200b\u5e76\u4e14\u200b\u5176\u200b\u5b58\u50a8\u5468\u671f\u200b\u662f\u200b\u81ea\u52a8\u200b\u3001\u200b\u9759\u6001\u200b\u3001\u200b\u672c\u5730\u200b\u7ebf\u7a0b\u200b\u5b58\u50a8\u200b\u65f6\u200b\u3002</li> <li>\u200b\u5f53\u200b\u4e00\u4e2a\u200b\u6709\u7740\u200b\u52a8\u6001\u200b\u5b58\u50a8\u5468\u671f\u200b\u7684\u200b\u53d8\u91cf\u200b\u65f6\u200b\u901a\u8fc7\u200b<code>new</code>\u200b\u521b\u5efa\u200b\u65f6\u200b\u3002</li> <li>\u200b\u5f53\u200b\u521d\u59cb\u5316\u200b\u65f6\u200b\u8c03\u7528\u200b\u4e86\u200b\u9ed8\u8ba4\u200b\u6784\u9020\u200b\u5668\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u800c\u200b\u5176\u4e2d\u200b\u6709\u200b\u4e00\u4e2a\u200b\u57fa\u7c7b\u200b\u6216\u8005\u200bnon-static\u200b\u6570\u636e\u200b\u6210\u5458\u200b\u6ca1\u6709\u200b\u5728\u200bconstructor initializer\u200b\u5217\u8868\u200b\u4e2d\u200b\u88ab\u200b\u63d0\u5230\u200b\u65f6\u200b\u3002</li> </ol> <p>\u200b\u6362\u8a00\u4e4b\u200b\uff0cdefault initialization\u200b\u4f1a\u200b\u4f7f\u5f97\u200barray\u200b\u7c7b\u578b\u200b\u88ab\u200b\u9ed8\u8ba4\u200b\u521d\u59cb\u5316\u200b\uff0c\u200b\u5176\u4ed6\u200b\u7684\u200b\u7c7b\u578b\u200b\u4e0d\u200b\u4f5c\u200b\u521d\u59cb\u5316\u200b\u3002</p> <pre><code>Widget w1; // default initialization\n</code></pre>"},{"location":"Archive/C%2B%2B/language/7.initialization.html#value-initialization","title":"value initialization","text":""},{"location":"Archive/C%2B%2B/language/7.initialization.html#copy-initialization","title":"copy initialization","text":""},{"location":"Archive/C%2B%2B/language/7.initialization.html#direct-initialization","title":"direct initialization","text":""},{"location":"Archive/C%2B%2B/language/7.initialization.html#copy-elision","title":"copy elision","text":""},{"location":"Archive/C%2B%2B/language/7.initialization.html#case-study","title":"case study","text":"<pre><code>auto f(K k) { return k; }\nint main() {\n  f(K{});\n  K k1{};\n  f(k1);\n}\n</code></pre>"},{"location":"Archive/C%2B%2B/language/8.class.html","title":"1. Class general","text":""},{"location":"Archive/C%2B%2B/language/8.class.html#11-overview","title":"1.1 Overview","text":""},{"location":"Archive/C%2B%2B/language/8.class.html#111-class","title":"1.1.1 Class \u200b\u57fa\u672c\u200b\u4ecb\u7ecd","text":"<p>\u200b\u4e00\u4e2a\u200b\u7c7b\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7528\u6237\u200b\u5b9a\u4e49\u200b\u7684\u200b\u7c7b\u578b\u200b</p> <p>\ud83d\udd18\u200b\u6210\u5458\u200b\u7ec4\u6210\u200b \u200b\u6210\u5458\u200b\u5728\u200b definition \u200b\u7684\u200b\u65f6\u5019\u200b\u5c31\u5b9a\u200b\u4e86\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u50cf\u200b namespace \u200b\u4e00\u6837\u200b\u540e\u8865\u200b\u3002</p> <ol> <li>\u200b\u6570\u636e\u200b\u6210\u5458\u200b\uff08a. non-static b. static\uff09</li> <li>\u200b\u6210\u5458\u200b\u51fd\u6570\u200b\uff08a. non-static b. static\uff09</li> <li>nested \u200b\u7c7b\u578b\u200b\uff08a. \u200b\u7c7b\u4e2d\u200b\u6709\u200b nested \u200b\u7c7b\u200b\u6216\u200b enumeration b. \u200b\u4f7f\u7528\u200b typedef \u200b\u6216\u200b type alias \u200b\u5b9a\u4e49\u200b\u7684\u200b\u7c7b\u578b\u200b\u522b\u540d\u200b c. injected-class-name\uff09</li> <li>\u200b\u4ece\u7c7b\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u4efb\u4f55\u200b unscoped \u200b\u7684\u200b enumerations \u200b\u91cc\u200b\u5f97\u5230\u200b\u7684\u200b enumerators\uff0c\u200b\u6216\u8005\u200b\u662f\u200b\u4f7f\u7528\u200b using-declarations / using-enum-declarations \u200b\u5f15\u5165\u200b\u7684\u200b\u6210\u5458\u200b\u3002</li> <li>\u200b\u6210\u5458\u200b\u6a21\u677f\u200b\uff08variable \u200b\u6a21\u677f\u200b\uff0c\u200b\u7c7b\u200b\u6a21\u677f\u200b\u6216\u200b\u51fd\u6570\u200b\u6a21\u677f\u200b\uff09\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5728\u200b\u4efb\u4f55\u200b non-local class/struct/union \u200b\u7684\u200b\u4e3b\u4f53\u200b\u4e2d\u200b\u51fa\u73b0\u200b\u3002</li> </ol> <p>\ud83d\udd18\u200b\u591a\u6001\u200b \u200b\u58f0\u660e\u200b/\u200b\u7ee7\u627f\u200b\u4e86\u200b virtual \u200b\u6210\u5458\u200b\u51fd\u6570\u200b\u7684\u200b class \u200b\u88ab\u200b\u79f0\u4e3a\u200b polymorphic \uff08\u200b\u591a\u6001\u200b\uff09\u3002\u200b\u8fd9\u79cd\u200b\u7c7b\u578b\u200b\u7684\u200b objects \u200b\u5c31\u662f\u200b\u591a\u6001\u200b objects\uff0c \u200b\u6709\u200b\u4f5c\u4e3a\u200b\u5bf9\u8c61\u200b\u8868\u793a\u200b\u7684\u200b\u4e00\u90e8\u5206\u200b\u800c\u200b\u5b58\u50a8\u200b\u7684\u200b\u8fd0\u884c\u200b\u65f6\u200b\u7c7b\u578b\u4fe1\u606f\u200b\uff0c\u200b\u8fd9\u200b\u53ef\u4ee5\u200b\u7528\u200b <code>dynamic_cast</code> \u200b\u548c\u200b <code>typeid</code> \u200b\u6765\u200b\u67e5\u8be2\u200b\u3002\u200b\u865a\u62df\u200b\u6210\u5458\u200b\u51fd\u6570\u200b\u53c2\u4e0e\u200b\u52a8\u6001\u200b\u7ed1\u5b9a\u200b\u3002</p> <p>\ud83d\udd18\u200b\u62bd\u8c61\u7c7b\u200b \u200b\u4e00\u4e2a\u200b\u81f3\u5c11\u200b\u6709\u200b\u4e00\u4e2a\u200b\u58f0\u660e\u200b\u6216\u200b\u7ee7\u627f\u200b\u7684\u200b\u7eaf\u200b\u865a\u62df\u200b\u6210\u5458\u200b\u51fd\u6570\u200b\u7684\u200b\u7c7b\u200b\u662f\u200b\u4e00\u4e2a\u200b\u62bd\u8c61\u7c7b\u200b\u3002\u200b\u8fd9\u79cd\u200b\u7c7b\u578b\u200b\u7684\u200b\u5bf9\u8c61\u200b\u4e0d\u80fd\u200b\u88ab\u200b\u521b\u5efa\u200b\u3002</p> <p>\ud83d\udd18LiteralType \u200b\u4e00\u4e2a\u200b\u5177\u6709\u200b constexpr \u200b\u6784\u9020\u51fd\u6570\u200b\u7684\u200b\u7c7b\u200b\u662f\u200b\u4e00\u4e2a\u200b LiteralType \uff1a\u200b\u8fd9\u79cd\u200b\u7c7b\u578b\u200b\u7684\u200b\u5bf9\u8c61\u200b\u53ef\u4ee5\u200b\u5728\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u88ab\u200b constexpr \u200b\u51fd\u6570\u200b\u64cd\u4f5c\u200b\u3002</p>"},{"location":"Archive/C%2B%2B/language/8.class.html#111-classes","title":"1.1.1 Classes \u200b\u7684\u200b\u6027\u8d28","text":"<p>\ud83d\udd18 Trivially copyable class \u200b\u81f3\u5c11\u200b\u6709\u200b\u4e00\u4e2a\u200b\u5408\u6cd5\u200b\u7684\u200b copy/move constructor/assignment \uff0c \u200b\u5e76\u4e14\u200b\u8981\u6c42\u200b\u62e5\u6709\u200b\u7684\u200b copy/move constructor/assignment \u200b\u548c\u200b destructor \u200b\u90fd\u200b\u662f\u200b trivial \u200b\u7684\u200b\uff0c\u200b\u4e14\u200bdestructor \u200b\u4e0d\u80fd\u200b\u662f\u200b deleted\u3002</p> <p>\ud83d\udd18 Trivial class \u200b\u5728\u200b Trivially copyable \u200b\u7684\u200b\u57fa\u7840\u200b\u4e0a\u200b\uff0c\u200b\u6709\u200b1\u200b\u4e2a\u200b\u6216\u200b\u66f4\u200b\u591a\u200b\u7684\u200b default constructor\uff0c\u200b\u5e76\u4e14\u200b\u6bcf\u4e2a\u200b\u90fd\u200b\u662f\u200b trivial \u200b\u7684\u200b\u3002</p> <p>\ud83d\udd18 Standard-layout class/struct/union Standard-layout class/struct/union \u200b\u9700\u8981\u200b\u6ee1\u8db3\u200b\u4ee5\u4e0b\u200b\u51e0\u6761\u200b\u6027\u8d28\u200b\uff1a</p> <p>\ud83d\udd18 Implicit-lifetime class \u200b\u662f\u200baggregate\u200b\u7684\u200b\uff0c\u200b\u5e76\u4e14\u200bdestructor\u200b\u4e0d\u662f\u200b\u7528\u6237\u200b\u63d0\u4f9b\u200b\u7684\u200b\uff0c\u200b\u81f3\u5c11\u200b\u6709\u200b\u4e00\u4e2a\u200btrivial constructor\u200b\u548c\u200b\u4e00\u4e2a\u200b trivial non-deleted destructor\u3002</p> <p>\ud83d\udd18 POD class(C++20\u200b\u4ee5\u540e\u200b\u964d\u7ea7\u200b) \u200b\u662f\u200b\u4e00\u4e2a\u200btrivial class +  standard-layout class\uff0c\u200b\u5e76\u4e14\u200b\u6ca1\u6709\u200b non-static \u200b\u7684\u200b\u6570\u636e\u200b\u6210\u5458\u200b\u7684\u200b\u7c7b\u578b\u200b\u662f\u200b non-POD \u200b\u7c7b\u200b\u3002</p> <ol> <li>\u200b\u6ca1\u6709\u200b non-static \u200b\u6570\u636e\u200b\u6210\u5458\u200b\u7684\u200b\u7c7b\u578b\u200b\u662f\u200b non-standard-layout \u200b\u7684\u200b\u7c7b\u200b\u6216\u200b\u5f15\u7528\u200b</li> <li>\u200b\u6ca1\u6709\u200b virtual \u200b\u51fd\u6570\u200b\u548c\u200b virtual \u200b\u57fa\u7c7b\u200b</li> <li>\u200b\u5bf9\u200b\u4efb\u4f55\u200b non-static \u200b\u6570\u636e\u200b\u6210\u5458\u200b \u200b\u6709\u7740\u200b\u540c\u6837\u200b\u7684\u200b\u8bbf\u95ee\u63a7\u5236\u200b</li> <li>\u200b\u6ca1\u6709\u200b non-standard-layout \u200b\u57fa\u7c7b\u200b</li> <li>\u200b\u7ee7\u627f\u200b\u7684\u200b\u7c7b\u200b\u4e2d\u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\u6709\u200b non-static \u200b\u6570\u636e\u200b\u6210\u5458\u200b</li> <li>\u200b\u6ca1\u6709\u200b\u4e00\u4e2a\u200b\u57fa\u7c7b\u200b\u7684\u200b\u7c7b\u578b\u200b\u4e0e\u200b\u7b2c\u4e00\u4e2a\u200b non-static \u200b\u6570\u636e\u200b\u6210\u5458\u200b\u76f8\u540c\u200b</li> </ol>"},{"location":"Archive/C%2B%2B/language/8.class.html#12-classstruct-type","title":"1.2 Class/Struct type","text":"<p>\u200b\u4e00\u4e2a\u200b\u7c7b\u200b\u7684\u200b\u7c7b\u578b\u200b\u662f\u200b\u7531\u200bclass-specifier\u200b\u5b9a\u4e49\u200b\u7684\u200b\uff0c\u200b\u5b83\u200b\u51fa\u73b0\u200b\u5728\u200b\u58f0\u660e\u200b\u8bed\u6cd5\u200b\u7684\u200bdecl-specifier-seq\u200b\u4e2d\u200b\u3002\u200b\u5173\u4e8e\u200bclass-specifier\u200b\u7684\u200b\u8bed\u6cd5\u200b\uff0c\u200b\u8bf7\u200b\u53c2\u89c1\u200b\u7c7b\u200b\u58f0\u660e\u200b\u3002</p>"},{"location":"Archive/C%2B%2B/language/8.class.html#13-union-type","title":"1.3 Union type","text":""},{"location":"Archive/C%2B%2B/language/8.class.html#14-injected-class-name","title":"1.4 Injected-class-name","text":""},{"location":"Archive/C%2B%2B/language/8.class.html#2-members","title":"2. Members","text":""},{"location":"Archive/C%2B%2B/language/8.class.html#23-nested-classes","title":"2.3 Nested classes","text":"<p>\u200b\u58f0\u660e\u200b\u5728\u200b\u53e6\u200b\u4e00\u4e2a\u200b class \u200b\u4e2d\u200b\u7684\u200b class/struct/union \u200b\u53eb\u505a\u200b nested class\u3002</p> <p>\ud83d\udd18 name lookup \u200b\u548c\u200b\u95ed\u5305\u200b\u8bbf\u95ee\u200b nested class \u200b\u7684\u200b name \u200b\u5b58\u5728\u200b\u4e8e\u200b\u67d0\u4e2a\u200b\u5c01\u95ed\u200b\u7684\u200bclass\u200b\u4e2d\u200b\uff0cname lookup \u200b\u67d0\u4e2a\u200bnested class\u200b\u4e2d\u200b\u7684\u200b\u6210\u5458\u200b\u51fd\u6570\u200b\u5c06\u4f1a\u200b\u5728\u200b\u9996\u5148\u200b\u68c0\u9a8c\u200b nested class \u200b\u7684\u200b scope\uff0c\u200b\u7136\u540e\u200b\u68c0\u9a8c\u200b enclosing class \u200b\u7684\u200bscope\u3002nested class \u200b\u53ef\u4ee5\u200b\u8bbf\u95ee\u200b enclosing class \u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u6210\u5458\u200b\uff0c\u200b\u4f46\u662f\u200b\u5b83\u200b\u5728\u200b\u5176\u4ed6\u200b\u65b9\u9762\u200b\u662f\u200b\u72ec\u7acb\u200b\u7684\u200b\uff0c\u200b\u5bf9\u200b enclosing class \u200b\u7684\u200bthis\u200b\u6307\u9488\u200b\u6ca1\u6709\u200b\u7279\u6b8a\u200b\u8bbf\u95ee\u200b\u6743\u200b\u3002nested class\u200b\u4e2d\u200b\u7684\u200b\u58f0\u660e\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b enclosing class \u200b\u7684\u200b\u4efb\u4f55\u200b\u6210\u5458\u200b\uff0c\u200b\u9075\u5faa\u200b\u975e\u200b\u9759\u6001\u200b\u6210\u5458\u200b\u7684\u200b\u901a\u5e38\u200b\u4f7f\u7528\u200b\u89c4\u5219\u200b\u3002</p> <pre><code>int x,y; // \u200b\u5168\u5c40\u53d8\u91cf\u200b\nclass enclose // enclosing class\n{\n    // note: private members\n    int x;\n    static int s;\npublic:\n    struct inner // nested class\n    {\n        void f(int i)\n        {\n            x = i; // Error: \u200b\u5728\u200b\u6ca1\u6709\u200b\u5b9e\u4f8b\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u5199\u200b  non-static enclose::x\n            int a = sizeof x; // Error until C++11,\n                              // OK in C++11: operand of sizeof is unevaluated,\n                              // this use of the non-static enclose::x is allowed.\n            s = i;   // OK: can assign to the static enclose::s\n            ::x = i; // OK: can assign to global x\n            y = i;   // OK: can assign to global y\n        }\n\n        void g(enclose* p, int i)\n        {\n            p-&gt;x = i; // OK: \u200b\u6709\u200b\u5b9e\u4f8b\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u53ef\u4ee5\u200bassign to enclose::x\n        }\n    };\n};\n</code></pre>"},{"location":"Archive/C%2B%2B/language/8.class.html#3-special-member-functions","title":"3. Special member functions","text":""},{"location":"Archive/C%2B%2B/language/8.class.html#constructor-destructor","title":"Constructor / Destructor","text":"<p>Quote</p> <ol> <li>\u200b\u8003\u8651\u200bRule of 3\uff1a\u200b\u5f53\u200b\u9700\u8981\u200b\u4e00\u4e2a\u200bdestructor\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u5927\u200b\u6982\u7387\u200b\u4e5f\u200b\u9700\u8981\u200b\u4e00\u4e2a\u200bcopy constructor\u200b\u548c\u200b\u4e00\u4e2a\u200bcopy assignment operator\u3002(outdate since C++11?)</li> <li>\u200b\u8003\u7565\u200bRule of 5\uff1a\u200b\u5f53\u200b\u9700\u8981\u200b\u4e00\u4e2a\u200bdestructor\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u5927\u200b\u6982\u7387\u200b\u4e5f\u200b\u9700\u8981\u200b\u4e00\u4e2a\u200bcopy/move constructor\u200b\u548c\u200b\u4e00\u4e2a\u200bcopy/move assignment operator\u3002</li> <li>\u200b\u8003\u8651\u200bRule of 0 \uff1a\u200b\u4e0d\u200b\u9700\u8981\u200b\u663e\u5f0f\u200bdestructor\u3001copy constructor\u200b\u548c\u200bcopy assignment \u200b\u7684\u200b\u7c7b\u200b\u66f4\u200b\u5bb9\u6613\u200b\u5904\u7406\u200b\u3002\uff08\u200b\u53ea\u8981\u200b\u6210\u5458\u200b\u90fd\u200b\u80fd\u200b\u94fe\u5f0f\u200b\u5904\u7406\u200b\uff0c\u200b\u522b\u7528\u200braw pointers!\uff09</li> <li>\u200b\u5982\u679c\u200b\u5b9a\u4e49\u200b\u6216\u8005\u200b<code>=delete</code>\u200b\u4efb\u4f55\u200b\u9ed8\u8ba4\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5c31\u200b\u5168\u90e8\u200b\u5b9a\u4e49\u200b\u6216\u8005\u200b\u5168\u90e8\u200b<code>=delete</code>\u3002</li> <li>\u200b\u5982\u679c\u200b\u60f3\u8981\u200b default/delete move operation\uff0c\u200b\u90a3\u4e48\u200b\u8bf7\u200b\u8ddf\u968f\u200bRule of 5\u3002</li> <li>\u200b\u5982\u679c\u200b\u60f3\u8981\u200bcopy\u200b\u53d6\u4ee3\u200b\u4efb\u4f55\u200bmove\uff0c\u200b\u8bf7\u200b\u8ddf\u968f\u200bRule of 3\uff08\u200b\u8fd9\u200b\u4e09\u4e2a\u200bdefault\u200b\u4ee5\u540e\u200b\uff0cmove\u200b\u4f1a\u200b\u88ab\u200b\u663e\u5f0f\u200b\u5ffd\u7565\u200b\uff09\u3002</li> </ol>"},{"location":"Archive/C%2B%2B/language/8.class.html#1-default-constructor","title":"1. Default constructor","text":"<p>\u200b\u9ed8\u8ba4\u200b\u6784\u9020\u51fd\u6570\u200b\u662f\u200b\u4e00\u4e2a\u200b\u53ef\u4ee5\u200b\u5728\u200b\u6ca1\u6709\u200b\u53c2\u6570\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u88ab\u200b\u8c03\u7528\u200b\u7684\u200b\u6784\u9020\u51fd\u6570\u200b\uff08\u200b\u8981\u4e48\u200b\u7528\u200b\u4e00\u4e2a\u200b\u7a7a\u200b\u7684\u200b\u53c2\u6570\u200b\u5217\u8868\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u8981\u4e48\u200b\u4e3a\u200b\u6bcf\u4e2a\u200b\u53c2\u6570\u200b\u63d0\u4f9b\u200b\u9ed8\u8ba4\u200b\u53c2\u6570\u200b\uff09\u3002\u200b\u4e00\u4e2a\u200b\u5177\u6709\u200b\u516c\u5171\u200b\u9ed8\u8ba4\u200b\u6784\u9020\u51fd\u6570\u200b\u7684\u200b\u7c7b\u578b\u200b\u88ab\u200b\u79f0\u4e3a\u200b<code>DefaultConstructible</code>\u3002</p> <p>\ud83d\udd18 \u200b\u7f16\u8bd1\u5668\u200b\u751f\u6210\u200b\u9ed8\u8ba4\u200b\u6784\u9020\u51fd\u6570\u200b \u200b\u5982\u679c\u200b\u4e00\u4e2a\u200bclass\u200b\u4e2d\u200b\u6ca1\u6709\u200b\u5b9a\u4e49\u200b\u6784\u9020\u51fd\u6570\u200b\uff0c\u200b\u90a3\u4e48\u200b\u7f16\u8bd1\u5668\u200b\u5c06\u200b\u81ea\u5df1\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u9ed8\u8ba4\u200bconstructor\u3002 \u200b\u4f46\u662f\u200b\u53ea\u8981\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u4efb\u4f55\u200b\u4e00\u4e2a\u200b\u6784\u9020\u51fd\u6570\u200b\uff0c\u200b\u6216\u8005\u200b\u4efb\u4f55\u200b\u6570\u200b\u6210\u5458\u200b\u53ca\u5176\u200b\u57fa\u7c7b\u200b\u4e0d\u662f\u200b\u9ed8\u8ba4\u200b\u6784\u9020\u200b\u7684\u200b\uff0c\u200b\u7f16\u8bd1\u5668\u200b\u5c31\u200b\u5c06\u200b\u4e0d\u4f1a\u200b\u81ea\u5df1\u200b\u751f\u6210\u200b\u4efb\u4f55\u200b\u6784\u9020\u51fd\u6570\u200b\u3002 \ud83d\udd18 \u200b\u663e\u5f0f\u200b\u58f0\u660e\u200b=default \u200b\u663e\u5f0f\u200b\u58f0\u660e\u200b\u8ba9\u200b\u7f16\u8bd1\u5668\u200b\u7ed9\u51fa\u200b\u9ed8\u8ba4\u200b\u6784\u9020\u51fd\u6570\u200b\u7684\u200b\u8bed\u6cd5\u200b\u5982\u4e0b\u200b\uff0c\u200b\u8fd9\u200b\u7b97\u662f\u200b\u4e00\u4e2a\u200bdefinition\u3002\u200b\u9664\u4e86\u200b\u9ed8\u8ba4\u200b\u521d\u59cb\u5316\u200b\u4ee5\u5916\u200b\uff0c\u200b\u53ef\u80fd\u200b\u8fd8\u4f1a\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e9b\u200b\u5176\u4ed6\u200b\u6548\u679c\u200b\uff0c\u200b\u4f8b\u5982\u200b<code>noexcept</code>\u3002</p> <p>Quote</p> <p>\u200b\u907f\u514d\u200b\u81ea\u5df1\u200b\u5199\u200bempty default constructor\uff0c\u200b\u6700\u597d\u200b\u4f7f\u7528\u200b <code>=default</code>\u3002</p> <pre><code>Widget()=default;\n</code></pre> <p>\ud83d\udd18 Member Initializer List \u200b\u5728\u200b\u8fdb\u5165\u200b\u6784\u9020\u51fd\u6570\u200b\u4e4b\u524d\u200b\uff0c\u200b\u6709\u200b\u4e00\u4e2a\u200b\u6210\u5458\u200b\u521d\u59cb\u5316\u200b\u5217\u8868\u200b\u3002 \u200b\u5982\u679c\u200b\u8981\u200b\u521d\u59cb\u5316\u200b\u6210\u5458\u200b\u5e94\u8be5\u200b\u5728\u200b\u8fd9\u91cc\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u5728\u200b\u6784\u9020\u51fd\u6570\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u8d4b\u503c\u200b\u8868\u8fbe\u5f0f\u200b\u3002</p> <pre><code>Widget()\uff1a s{\"CppCon\"}, i = 1 ,pi = nullptr{}\n</code></pre> <p>Quote</p> <p>C.47\uff1a\u200b\u6309\u7167\u200b\u6210\u5458\u200bdeclaration\u200b\u7684\u200b\u987a\u5e8f\u200b\u6765\u7eaa\u200b\u8fdb\u884c\u200b\u521d\u59cb\u5316\u200b\u3002 C.49\uff1a\u200b\u5728\u200b\u6784\u9020\u51fd\u6570\u200b\u91cc\u200b\uff0c\u200b\u9009\u62e9\u200binitialization\u200b\u800c\u200b\u4e0d\u662f\u200b\u8d4b\u503c\u200b\u3002</p>"},{"location":"Archive/C%2B%2B/language/8.class.html#2-destructor","title":"2. Destructor","text":"<p>\u200b\u6bcf\u4e2a\u200bclass\u200b\u90fd\u200b\u6709\u200bdestructor\u3002\u200b\u548c\u200bconstructor\u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u5982\u679c\u200b\u81ea\u5df1\u200b\u58f0\u660e\u200b\u4e86\u200b\u4e00\u4e2a\u200b\uff0c\u200b\u90a3\u4e48\u200b\u7f16\u8bd1\u5668\u200b\u5c31\u200b\u4e0d\u4f1a\u200b\u8fdb\u884c\u200b\u9ed8\u8ba4\u200b\u751f\u6210\u200b\u3002 \ud83d\udd18 \u200b\u7f16\u8bd1\u5668\u200b\u751f\u6210\u200b\u9ed8\u8ba4\u200b\u6790\u6784\u200b\u51fd\u6570\u200b \u200b\u5c06\u4f1a\u200b\u8c03\u7528\u200b\u6240\u6709\u200b\u6210\u5458\u200b\u7684\u200bdeconstructor\uff0c\u200b\u4f46\u662f\u200b\u5bf9\u200b\u57fa\u7840\u200b\u7c7b\u578b\u200b\u4e0d\u200b\u505a\u200b\u4efb\u4f55\u200b\u64cd\u4f5c\u200b\u3002</p> <pre><code>~Widget(){\n    ~delete pr; // \u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u5220\u9664\u200b\uff0c\u200b\u5426\u5219\u200b\u8d44\u6e90\u200b\u6cc4\u9732\u200b\n}\n</code></pre> <p>Quote</p> <ol> <li>\u200b\u5982\u679c\u200b\u4efb\u4f55\u200b\u6790\u200b\u6784\u5668\u200b\u5bf9\u200b\u4efb\u4f55\u200b\u6210\u5458\u200b\u7684\u200b\u8d44\u6e90\u200b\u91ca\u653e\u200b\u8d1f\u8d23\u200b\uff0c\u200b\u90a3\u4e48\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u5199\u200b\u4e00\u4e2a\u200bdestructor\u3002</li> <li>\u200b\u6c38\u8fdc\u200b\u4e0d\u8981\u200b\u81ea\u5df1\u200b\u5199\u200b\u4e00\u4e2a\u200b\u7a7a\u200bdestructor\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>=default</code>.</li> </ol>"},{"location":"Archive/C%2B%2B/language/8.class.html#3-copy-constructorassignment","title":"3. Copy constructor/assignment","text":"<p>Copy constructor\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u662f\u200b <code>(const)(volatile) T&amp;</code>\uff0c\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\u8981\u4e48\u200b\u4e3a\u7a7a\u200b\uff0c\u200b\u8981\u4e48\u200b\u6709\u200b\u9ed8\u8ba4\u503c\u200b\u3002</p> <pre><code>Widget (Widget const&amp;) ; // The default\nWidget (Widget&amp;); // Possible, but very likely not reasonable\nWidget (Widget);  // Not possible; recursive call \n</code></pre> <p>Copy assignment\u200b\u7684\u200b\u53c2\u6570\u200b\u4e5f\u200b\u7c7b\u4f3c\u200b\u3002</p> <pre><code>Widget&amp; operator= (Widget const&amp;) ; // The default\nWidget&amp; operator= (Widget&amp;); // Possible, but very likely not reasonable\nWidget&amp; operator= (Widget);  // Reasonable builds on the copy constructor \n</code></pre> <p>\ud83d\udd18 \u200b\u7f16\u8bd1\u5668\u200b\u751f\u6210\u200bcopy constructor \u200b\u7f16\u8bd1\u5668\u200b\u603b\u662f\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u751f\u6210\u200bcopy constructor\uff0c\u200b\u9664\u975e\u200b\u663e\u5f0f\u200b\u58f0\u660e\u200bcopy/move constructor\uff0c\u200b\u6216\u8005\u200b\u6709\u200b\u4efb\u4f55\u200b\u6570\u636e\u200b\u6210\u5458\u200b\u662f\u200b\u4e0d\u53ef\u200b\u590d\u5236\u200b\u7684\u200b\u3002</p> <p>Quote</p> <p>\u200b\u6bcf\u4e2a\u200bclass\u200b\u90fd\u200b\u6709\u200bcopy constructor\u200b\u548c\u200bcopy assignment\u200b\u64cd\u4f5c\u200b\u3002copy\u200b\u64cd\u4f5c\u200b\u8981\u4e48\u200b\u662f\u200b\u53ef\u7528\u200b\u7684\u200b\uff0c\u200b\u8981\u4e48\u200b\u662f\u200b(\u200b\u9690\u5f0f\u200b)\u200b\u5220\u9664\u200b\u7684\u200b\u3002</p> <p>\ud83d\udd18 =delete =delete\u200b\u5e76\u200b\u4e0d\u662f\u200b\u771f\u6b63\u200b\u5220\u9664\u200b\uff0c\u200b\u8fd9\u200b\u7b97\u662f\u200b\u4e00\u4e2a\u200bdefinition\u3002\u200b\u53ea\u662f\u200b\u5bf9\u200b\u4ed6\u200b\u8fdb\u884c\u200b\u4e86\u200b\u7981\u7528\u200b\u3002\u200b\u5982\u679c\u200bOverload resolution\u200b\u9009\u4e2d\u200b\u4e86\u200bcopy\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u90a3\u4e48\u200b\u7f16\u8bd1\u200b\u5c06\u4f1a\u200b\u5931\u8d25\u200b\u3002 \ud83d\udd18 \u200b\u9ed8\u8ba4\u200bcopy constructor\u200b\u884c\u4e3a\u200b \u200b\u9ed8\u8ba4\u200bcopy constructor\u200b\u5c06\u4f1a\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u6570\u636e\u200b\u6210\u5458\u200b\u4f7f\u7528\u200bcopy\u200b\u6784\u9020\u200b\u3002</p> <pre><code>class Widget{\npublic:\n    Widget(Widget const &amp; other) \n        : Base{other}\n        , i{other.i}\n        , s{other.s}\n        , pr{other.pr} {}\n    Widget&amp; operator=(Widget const&amp; other){\n        Base::operator=(other);\n        i = other.i;\n        s = other.s;\n        pr = other.pr;\n        return *this;\n    }\nprivate:\n    int i; // a fundamental type\n    std::string s; // a class(user-defined) type\n    Resource* pr{}; // a possible resoure\n}\n</code></pre> <p>\ud83d\udd18 \u200b\u9ed8\u8ba4\u200bcopy constructor\u200b\u7f3a\u70b9\u200b(shallow copy) \u200b\u5bf9\u4e8e\u200b\u4e0a\u9762\u200b\u7684\u200b<code>Resoure* pr{}</code>\uff0c\u200b\u5982\u679c\u200b\u4f7f\u7528\u200b\u9ed8\u8ba4\u200bcopy\uff0c\u200b\u90a3\u4e48\u200b\u663e\u7136\u200b\u5728\u200bdestruct\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u8d44\u6e90\u200b\u5c06\u4f1a\u200b\u88ab\u200bdouble delete\u3002 \u200b\u56e0\u6b64\u200b\u8fd9\u200b\u7b97\u662f\u200b\u4e00\u79cd\u200bshallow copy\uff0c\u200b\u5e94\u8be5\u200b\u5c3d\u91cf\u200b\u4f7f\u7528\u200bdeep copy\u3002</p> <pre><code>// Improve1 : new ptr\npr{other.pr ? new Resource{*other.pr}:nullptr} \n// Improve2 : \u200b\u5bf9\u200b\u65e7\u200b\u7684\u200b\u8d44\u6e90\u200b\u505a\u200b\u91ca\u653e\u200b\nWidget&amp; operator=(Widget const&amp; other){\n    delete resource; // \u200b\u5728\u200bdestructor\u200b\u4ee5\u5916\u200b\u505a\u200b\u91ca\u653e\u200b\uff0c\u200b\u5bfc\u81f4\u200bself-assignment\u200b\u95ee\u9898\u200b\uff0c\u200b\u901a\u5e38\u200b\u7528\u200bif(this!=&amp;other)\u200b\u68c0\u67e5\u200b\n    pr(other.pr ? new Resource{*other.pr}:nullptr);\n}\n</code></pre> <p>\ud83d\udd18 temporary-swap idiom \u200b\u5bf9\u4e8e\u200b\u4e0a\u9762\u200b\u7684\u200b<code>Resource</code>\u200b\u6307\u9488\u200b\uff0c\u200b\u7ba1\u7406\u200b\u8d77\u6765\u200b\u6bd4\u8f83\u200b\u9ebb\u70e6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200btemporary-swap idiom\u3002\u200b\u8fd9\u200b\u4e0d\u662f\u200b\u6700\u5feb\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u4f46\u662f\u200b\u5f88\u200b\u7b80\u5355\u200b\u3002</p> <pre><code>Widget&amp; operator=(Widget const&amp; other){\n    Widget temp(other); // \u200b\u8c03\u7528\u200b copy-constructor\uff0c\u200b\u6bd4\u200bassignment\u200b\u9760\u200b\u8c31\u200b\n    swap(temp);         // \u200b\u548c\u200b\u81ea\u8eab\u200b\u505a\u200b\u7f6e\u6362\u200b\uff0ctemp\u200b\u4e2d\u200b\u7684\u200bold resource\u200b\u88ab\u200bdestructor\u200b\u5904\u7406\u200b\uff08\u200b\u5b89\u5168\u200b\uff01\n}\n</code></pre> <p>\ud83d\udd18 \u200b\u5904\u7406\u200bresource\u200b\u7684\u200b\u6700\u4f18\u200b\u65b9\u6cd5\u200b(check + swap) \u200b\u6839\u636e\u200bresource\u200b\u7684\u200b\u4e0d\u540c\u200b\u72b6\u6001\u200b\uff0c\u200b\u5206\u4e3a\u200b\u8d4b\u503c\u200b\u548c\u200b\u4ea4\u6362\u200b\u4e24\u79cd\u200b\u7c7b\u578b\u200b\u6765\u200b\u8fdb\u884c\u200b\u5904\u7406\u200b\u3002</p> <pre><code>void swap(Widget&amp; other){\n    using std::swap;\n    swap(id,other.id);\n    swap(name.other.name);\n    swap(resource,other.resource);\n}\nWidget&amp; operator=(Widget const&amp; other){\n    if(pr &amp;&amp; other.pr){       \n        Base::operator=(other); // No need to handle self-assignment explicitly\n        i = other.i;\n        s = other.s;\n        *pr = *other.pr; // copy assignment of the resource\n    } else{\n        Widget temp(other); // \u200b\u8c03\u7528\u200b copy-constructor\uff0c\u200b\u6bd4\u200bassignment\u200b\u9760\u200b\u8c31\u200b\n        swap(temp);\n    }\n    return *this;\n}\n</code></pre> <p>Quote</p> <p>C.83 \u200b\u5bf9\u4e8e\u200bvalue-like \u200b\u7c7b\u578b\u200b\uff0c\u200b\u8003\u8651\u200b\u63d0\u4f9b\u200b\u4e00\u4e2a\u200b<code>noexcept</code> \u200b\u4ea4\u6362\u200b\u51fd\u6570\u200b\u3002</p> <p>\ud83d\udd18 \u200b\u5c06\u200braw pointeri\u200b\u66ff\u6362\u6210\u200bsmart pointer \u200b\u4e0a\u9762\u200b\u63d0\u5230\u200b\u7684\u200b\u95ee\u9898\u200b\u5176\u5b9e\u200b\u6765\u81ea\u200b\u4e8e\u200braw pointer\u200b\u4e0d\u200b\u5bf9\u200b\u8d44\u6e90\u200b\u8fdb\u884c\u200b\u9500\u6bc1\u200b\u5904\u7406\u200b\u3002\u200b\u4f7f\u7528\u200bsmart_pointer\u200b\u5c31\u200b\u6ca1\u6709\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\u3002 \u200b\u5982\u679c\u200b\u4f7f\u7528\u200bunique_ptr(uncopyable)\uff0c\u200b\u90a3\u4e48\u200b\u6574\u4e2a\u200b\u7c7b\u200b\u5c31\u200b\u4e0d\u80fd\u200b\u88ab\u200b\u62f7\u8d1d\u200b\u3002 \u200b\u800c\u200b\u4f7f\u7528\u200bshared_ptr\uff0c\u200b\u90a3\u4e48\u200b\u5c31\u200b\u4e0d\u7528\u200b\u81ea\u5df1\u200b\u5199\u200bcopy\u200b\u64cd\u4f5c\u200b\u4e86\u200b\uff0c\u200b\u7f16\u8bd1\u5668\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u81ea\u5df1\u200b\u751f\u6210\u200b\u3002\uff08Rule of 0\uff09.</p> <pre><code>class Widget{\npublic:\n    Widget(Widget const &amp; other) \n        : Base{other}\n        , i{other.i}\n        , s{other.s}\n        , pr{other.pr} {}\n    Widget&amp; operator=(Widget const&amp; other){\n        Base::operator=(other);\n        i = other.i;\n        s = other.s;\n        pr = other.pr;\n        return *this;\n    }\nprivate:\n    int i; // a fundamental type\n    std::string s; // a class(user-defined) type\n    std::shared_ptr&lt;Resource&gt; pr{}; // \u200b\u4e0d\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u5199\u200bdestructor\u200b\u4e86\u200b\uff0csp\u200b\u4f1a\u200b\u8d1f\u8d23\u200b\u6e05\u7406\u200b\n}\n</code></pre>"},{"location":"Archive/C%2B%2B/language/8.class.html#4-move-constructor","title":"4. Move constructor","text":"<p>Move constructor\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u662f\u200b <code>(const)(volatile) T&amp;&amp;</code>\uff0c\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\u8981\u4e48\u200b\u4e3a\u7a7a\u200b\uff0c\u200b\u8981\u4e48\u200b\u6709\u200b\u9ed8\u8ba4\u503c\u200b\u3002</p> <pre><code>Widget( Widget&amp;&amp; ) noexcept; // The default\nWidget( Widget const &amp;&amp;) noexcept; // Possible, but uncommon\n\nWidget&amp; operator=( Widget &amp;&amp;) noexcept;// The default\nWidget&amp; operator=( Widget const &amp;&amp;) noexcept;// Possible, but uncommon\n</code></pre> <p>\ud83d\udd18 \u200b\u7f16\u8bd1\u5668\u200b\u751f\u6210\u200bmove constructor \u200b\u5982\u679c\u200b\u6ca1\u7528\u200b\u7528\u6237\u200b\u5b9a\u4e49\u200bmove constructor/assignment\u3001copy constructor/assignment\u3001destructor\uff0c\u200b\u5e76\u4e14\u200b\u6240\u6709\u200b\u6570\u636e\u200b\u6210\u5458\u200b\u8981\u4e48\u200b\u80fd\u200bcopy\u200b\u8981\u4e48\u200b\u80fd\u200bmove\uff0c\u200b\u90a3\u4e48\u200b\u7f16\u8bd1\u5668\u200b\u5c06\u4f1a\u200b\u81ea\u5df1\u200b\u751f\u6210\u200bmove constructor\uff0c\u200b\u7c7b\u578b\u200b\u4e3a\u200b<code>T::T(T&amp;&amp;)</code>\u3002</p> <p>\u200b\u4e00\u4e2a\u200b\u7c7b\u200b\u53ef\u4ee5\u200b\u6709\u200b\u591a\u4e2a\u200bmove constructor\uff08eg: <code>T::T(T&amp;&amp;),T::T(const T&amp;&amp;)</code>\u3002\u200b\u5982\u679c\u200b\u7528\u6237\u200b\u5b9a\u4e49\u200b\u4e86\u200bmove constructor\uff0c\u200b\u8fd8\u662f\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>=default</code>\u200b\u6765\u200b\u8feb\u4f7f\u200b\u7f16\u8bd1\u5668\u200b\u751f\u6210\u200b\u9ed8\u8ba4\u200bmove\u3002</p> <p>\ud83d\udd18 =delete \ud83d\udd18 \u200b\u9ed8\u8ba4\u200bmove constructor\u200b\u884c\u4e3a\u200b</p> <pre><code>class Widget{\npublic:\n    Widget(Widget &amp;&amp; other)noexcept\n        : Base{std::mvoe(other)}\n        , i{std::mvoe(other.i)}\n        , s{std::mvoe(other.s)}\n        , pr{std::mvoe(other.pr)} {}\n    Widget&amp; operator=(Widget&amp;&amp; other){\n        Base::operator=(std::move(other));\n        i = std::move(other.i);\n        s = std::move(other.s);\n        pr = std::move(other.pr);\n        return *this;\n    }\nprivate:\n    int i; // a fundamental type\n    std::string s; // a class(user-defined) type\n    Resource* pr{}; // a possible resoure\n}\n</code></pre> <p>\u200b\u548c\u200bcopy\u200b\u4e00\u6837\u200b\u6709\u200bshallow move\u200b\u7684\u200b\u95ee\u9898\u200b\uff0c\u200b\u540c\u6837\u200b\u8981\u200b\u4f7f\u7528\u200b</p> <pre><code>Widget temp(std:: move(other));\nswap(temp);\n</code></pre> <p>Note</p> <ol> <li>\u200b\u9664\u4e86\u200b <code>default ctor</code> \u200b\u4ee5\u5916\u200b\uff0c\u200b\u7528\u6237\u200b\u4efb\u610f\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\uff0c<code>move</code> \u200b\u64cd\u4f5c\u200b\u90fd\u200b\u4e0d\u200b\u81ea\u52a8\u200b\u751f\u6210\u200b\u4e86\u200b\u3002</li> <li>\u200b\u7528\u6237\u200b\u5b9a\u4e49\u200b\u4e86\u200b <code>move</code> \u200b\u64cd\u4f5c\u200b\u4ee5\u540e\u200b\uff0c<code>copy</code> \u200b\u64cd\u4f5c\u200b\u4f1a\u200b\u88ab\u200b <code>delete</code> \uff0c\u200b\u53d8\u6210\u200bmove-only\u200b\u7c7b\u578b\u200b\u3002</li> <li><code>dtor</code> \u200b\u5728\u200b\u4efb\u4f55\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u90fd\u200b\u4f1a\u200b\u751f\u6210\u200b\u3002</li> </ol> <p></p>"},{"location":"Archive/C%2B%2B/language/8.class.html#4-inheritate","title":"4. Inheritate","text":""},{"location":"Archive/C%2B%2B/language/9.template.html","title":"Template","text":"<p>temple\u200b\u662f\u200b</p> <ul> <li>class \u200b\u6a21\u677f\u200b\uff0c\u200b\u53ef\u80fd\u200b\u662f\u200b nested classes</li> <li>funtion \u200b\u6a21\u677f\u200b\uff0c\u200b\u53ef\u80fd\u200b\u662f\u200b\u6210\u5458\u200b\u51fd\u6570\u200b</li> <li>\u200b\u7c7b\u578b\u200b\u522b\u540d\u200b</li> <li>\u200b\u4e00\u7ec4\u200b\u53d8\u91cf\u200b</li> <li>\u200b\u4e00\u79cd\u200bconcept</li> </ul> <p>\ud83d\udd18 template-id id \u200b\u8981\u4e48\u200b\u662f\u200b\u547d\u540d\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u6a21\u677f\u200b\uff08\u200b\u79f0\u4e3a\u200b(simple-template-id)\uff0c\u200b\u8981\u4e48\u200b\u662f\u200b\u4e00\u4e2a\u200b\u91cd\u8f7d\u200b\u64cd\u4f5c\u7b26\u200b\u6a21\u677f\u200b\u6216\u200b\u7528\u6237\u200b\u5b9a\u4e49\u200b\u7684\u200b\u5b57\u9762\u200b\u6a21\u677f\u200b\u7684\u200b\u540d\u79f0\u200b\u3002</p>"},{"location":"Archive/C%2B%2B/language/9.template.html#1-template-parameters-and-arguments","title":"1. Template parameters and arguments","text":"<p>\u200b\u51fd\u6570\u200b\u6a21\u677f\u200b\u6709\u200b\u4ee5\u4e0b\u200b\u51e0\u79cd\u200b\u53c2\u6570\u200b</p> <ul> <li>a non-type template parameter;</li> <li>a type template parameter;</li> <li>a template template parameter.</li> </ul>"},{"location":"Archive/C%2B%2B/language/9.template.html#11-non-type-template-parameter","title":"1.1 non-type template parameter","text":"<p>\u200b\u975e\u200b\u7c7b\u578b\u200b\u7684\u200b\u53c2\u6570\u200b\u901a\u5e38\u200b\u662f\u200b\u4e00\u4e9b\u200b\u5728\u200b\u7f16\u8bd1\u5668\u200b\u5c31\u200b\u80fd\u200b\u51b3\u5b9a\u200b\u7684\u200b structural type\u3002\u200b\u4f8b\u5982\u200b <code>&lt;size_t N&gt;</code> \u200b\u6765\u200b\u6307\u5b9a\u200b\u67d0\u4e2a\u200b\u5927\u5c0f\u200b\uff0c\u200b\u6216\u8005\u200b <code>&lt;int times&gt;</code> \u200b\u6765\u200b\u51b3\u5b9a\u200b\u67d0\u4e2a\u200b\u503c\u200b\u7684\u200b\u6a21\u677f\u200b\u7279\u5316\u200b\u3002</p> <p>\ud83d\udd18 <code>auto</code> \u200b\u4f5c\u4e3a\u200b\u5360\u4f4d\u200b\u7b26\u200b \u200b\u6309\u7167\u200bauto\u200b\u63a8\u65ad\u200b\u89c4\u5219\u200b\u8fdb\u884c\u200b\u63a8\u65ad\u200b\u3002</p> <pre><code>template&lt;auto n&gt;\nstruct B { /* ... */ };\n\nB&lt;5&gt; b1;   // OK: non-type template parameter type is int\nB&lt;'a'&gt; b2; // OK: non-type template parameter type is char\nB&lt;2.5&gt; b3; // error (until C++20): non-type template parameter type cannot be double\n\n// C++20 deduced class type placeholder, class template arguments are deduced at the call site\ntemplate&lt;std::array arr&gt;\nvoid f();\n\nf&lt;std::array&lt;double, 8&gt;{}&gt;();\n</code></pre> <p>\u200b\u5bf9\u4e8e\u200b pack parameter \u200b\u6765\u8bf4\u200b\uff0c\u200b\u5c06\u4f1a\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u7c7b\u578b\u200b\u8fdb\u884c\u200b\u63a8\u65ad\u200b\u3002</p> <pre><code>template&lt;auto...&gt;\nstruct C {};\n\nC&lt;'C', 0, 2L, nullptr&gt; x; // OK\n</code></pre>"},{"location":"Archive/C%2B%2B/language/9.template.html#12-type-template-parameter","title":"1.2 type template parameter","text":"<p>\u200b\u6700\u200b\u5e38\u89c1\u200b\u7684\u200b\uff0c\u200b\u4f7f\u7528\u200b <code>class</code> \u200b\u6216\u200b <code>typename</code> \u200b\u5173\u952e\u8bcd\u200b\u8fdb\u884c\u200b\u58f0\u660e\u200b\u3002</p> <p>\ud83d\udd18 \u200b\u5bf9\u4e8e\u200b constraint \u200b\u548c\u200b template \u200b\u7684\u200b\u89c4\u5219\u200b \u200b\u6bcf\u4e2a\u200b\u88ab\u200b\u6982\u5ff5\u200b <code>C</code> \u200b\u9650\u5236\u200b\u7684\u200b\u53c2\u6570\u200b <code>P</code> \u200b\u79f0\u4e3a\u200b\u7c7b\u578b\u200b\u9650\u5236\u200b <code>Q</code>\uff0c\u200b\u8fd9\u200b\u6761\u200b\u8bed\u53e5\u200b\u53eb\u200b\u9650\u5236\u200b\u8868\u8fbe\u5f0f\u200b <code>E</code>\uff0c\u200b\u9075\u4ece\u200b\u4ee5\u4e0b\u200b\u89c4\u5219\u200b\uff1a</p> <ul> <li>\u200b\u5982\u679c\u200b <code>Q</code> \u200b\u662f\u200b <code>C</code></li> <li><code>P</code> \u200b\u4e0d\u662f\u200b\u4e00\u4e2a\u200b parameter pack\uff0c <code>E</code> \u200b\u5c31\u662f\u200b <code>C&lt;P&gt;</code></li> <li>\u200b\u5426\u5219\u200b <code>P</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u6298\u53e0\u200b\u8868\u8fbe\u5f0f\u200b <code>C&lt;P&gt; &amp;&amp; ...</code></li> <li>\u200b\u5982\u679c\u200b <code>Q</code> \u200b\u662f\u200b <code>C&lt;A1,A2...,AN&gt;</code> \uff0c\u200b\u90a3\u4e48\u200b <code>E</code> \u200b\u662f\u200b <code>C&lt;P,A1,A2...,AN&gt;</code> \u200b\u6216\u200b  <code>C&lt;P,A1,A2...,AN&gt; &amp;&amp; ...</code>\u3002</li> </ul> <pre><code>template&lt;typename T&gt;\nconcept C1 = true;\ntemplate&lt;typename... Ts&gt; // variadic concept\nconcept C2 = true;\ntemplate&lt;typename T, typename U&gt;\nconcept C3 = true;\n\ntemplate&lt;C1 T&gt;         struct s1; // constraint-expression is C1&lt;T&gt;\ntemplate&lt;C1... T&gt;      struct s2; // constraint-expression is (C1&lt;T&gt; &amp;&amp; ...)\ntemplate&lt;C2... T&gt;      struct s3; // constraint-expression is (C2&lt;T&gt; &amp;&amp; ...)\ntemplate&lt;C3&lt;int&gt; T&gt;    struct s4; // constraint-expression is C3&lt;T, int&gt;\ntemplate&lt;C3&lt;int&gt;... T&gt; struct s5; // constraint-expression is (C3&lt;T, int&gt; &amp;&amp; ...)\n</code></pre> <pre><code>template&lt;class T&gt;\nclass My_vector { /* ... */ }; \n\ntemplate&lt;class T = void&gt;\nclass My_vector { /* ... */ }; // default \u200b\u503c\u4e3a\u200b void\n\ntemplate&lt;typename... T&gt;\nclass My_tuple { /* ... */ }; // parameter pack\n\ntemplate&lt;My_concept T&gt;\nclass My_constrained_vector { /* ... */ }; // \u200b\u9650\u5236\u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b\uff0c\u200b\u6ca1\u6709\u200b\u9ed8\u8ba4\u200b\n\ntemplate&lt;My_concept T = void&gt;\nclass My_constrained_op_functor { /* ... */ }; // \u200b\u9650\u5236\u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4f46\u200b\u6709\u200b\u9ed8\u8ba4\u200b\n\ntemplate&lt;My_concept... Ts&gt;\nclass My_constrained_tuple { /* ... */ }; // \u200b\u9650\u5236\u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b + parameter pack\n</code></pre>"},{"location":"Archive/C%2B%2B/language/9.template.html#13-template-template-parameter","title":"1.3 template template parameter","text":"<p>\u200b\u63a5\u6536\u200b\u4e00\u4e2a\u200b\u6a21\u677f\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b</p> <pre><code>template&lt;typename T&gt;\nclass my_array {};\n\n// two type template parameters and one template template parameter:\ntemplate&lt;typename K, typename V, template&lt;typename&gt; typename C = my_array&gt;\nclass Map\n{\n    C&lt;K&gt; key;\n    C&lt;V&gt; value;\n};\n</code></pre>"},{"location":"Archive/C%2B%2B/language/9.template.html#2-class-template","title":"2. Class template","text":""},{"location":"Archive/C%2B%2B/language/9.template.html#3-function-template","title":"3. Function template","text":""},{"location":"Archive/C%2B%2B/language/9.template.html#31-abbreviated-function-template","title":"3.1 Abbreviated function template","text":"<p>\u200b\u7528\u200b <code>auto</code> \u200b\u6765\u200b\u81ea\u52a8\u200b\u751f\u6210\u200b\u6a21\u677f\u200b\uff0c\u200b\u8fdb\u884c\u200b\u7c7b\u578b\u200b\u63a8\u65ad\u200b\u3002</p> <pre><code>void f1(auto); // same as template&lt;class T&gt; void f1(T)\nvoid f2(C1 auto); // same as template&lt;C1 T&gt; void f2(T), if C1 is a concept\nvoid f3(C2 auto...); // same as template&lt;C2... Ts&gt; void f3(Ts...), if C2 is a concept\nvoid f4(const C3 auto*, C4 auto&amp;); // same as template&lt;C3 T, C4 U&gt; void f4(const T*, U&amp;);\n\ntemplate&lt;class T, C U&gt;\nvoid g(T x, U y, C auto z); // same as template&lt;class T, C U, C W&gt; void g(T x, U y, W z);\n</code></pre>"},{"location":"Archive/C%2B%2B/language/9.template.html#4-variable-template","title":"4. Variable template","text":"<p>\u200b\u4e00\u4e2a\u200b variable template \u200b\u5b9a\u4e49\u200b\u4e86\u200b\u4e00\u7cfb\u5217\u200b\u7684\u200b\u53d8\u91cf\u200b\u6216\u200b\u9759\u6001\u6570\u636e\u200b\u6210\u5458\u200b\u3002</p> <p>\ud83d\udd18 instantiated variable \u200b\u4ece\u200b variable template \u200b\u5b9e\u4f8b\u200b\u5316\u200b\u7684\u200b\u53d8\u91cf\u200b\u53eb\u505a\u200b instantiated variable\u3002</p> <pre><code>template&lt;class T&gt;\nconstexpr T pi = T(3.1415926535897932385L); // variable template\n\ntemplate&lt;class T&gt;\nT circular_area(T r) // function template\n{\n    return pi&lt;T&gt; * r * r; // pi&lt;T&gt; is a variable template instantiation\n}\n</code></pre> <p>\ud83d\udd18 instantiated static data member \u200b\u4ece\u200b variable template \u200b\u5b9e\u4f8b\u200b\u5316\u200b\u7684\u200b\u9759\u6001\u6570\u636e\u200b\u6210\u5458\u200b\u53eb\u200b instantiated static data member\u3002</p> <pre><code>using namespace std::literals;\nstruct matrix_constants\n{\n    template&lt;class T&gt;\n    using pauli = hermitian_matrix&lt;T, 2&gt;; // alias template\n\n    template&lt;class T&gt; // static data member template\n    static constexpr pauli&lt;T&gt; sigmaX = {{0, 1}, {1, 0}}; \n\n    template&lt;class T&gt;\n    static constexpr pauli&lt;T&gt; sigmaY = {{0, -1i}, {1i, 0}};\n\n    template&lt;class T&gt;\n    static constexpr pauli&lt;T&gt; sigmaZ = {{1, 0}, {0, -1}};\n};\n</code></pre>"},{"location":"Archive/C%2B%2B/language/9.template.html#5-template-argument-deduction","title":"5. Template argument deduction","text":"<p>\u200b\u5728\u200b\u53ef\u80fd\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u7f16\u8bd1\u5668\u200b\u4f1a\u200b\u4ece\u200b1.\u200b\u51fd\u6570\u53c2\u6570\u200b\u4e2d\u200b\u63a8\u5bfc\u200b\u51fa\u200b\u7f3a\u5c11\u200b\u7684\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b 2. \u200b\u4ece\u200bconstructor\u200b\u53c2\u6570\u200b\u63a8\u65ad\u200b\u3002 \u200b\u4ee5\u4e0b\u200b\u51fd\u6570\u200b\u7ed9\u5b9a\u200b\u4e86\u200b <code>To</code> \u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u800c\u200b <code>From</code> \u200b\u7684\u200b\u7c7b\u578b\u200b\u662f\u4ece\u200b\u51fd\u6570\u53c2\u6570\u200b\u4e2d\u200b\u63a8\u65ad\u200b\u7684\u200b\u3002</p> <pre><code>template&lt;typename To, typename From&gt;\nTo convert(From f);\n\nvoid g(double d) {\n    int i = convert&lt;int&gt;(d);    // calls convert&lt;int, double&gt;(double)\n    char c = convert&lt;char&gt;(d);  // calls convert&lt;char, double&gt;(double)\n    int(*ptr)(float) = convert; // instantiates convert&lt;int, float&gt;(float) \n                                // and stores its address in ptr\n}\n</code></pre> <p>\u200b\u5728\u200b\u521d\u59cb\u5316\u200bstd\u200b\u5bb9\u5668\u200b\u7684\u200b\u65f6\u5019\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u7528\u200b\u7c7b\u578b\u200b\u63a8\u65ad\u200b\u3002</p> <pre><code>std::pair p(2, 4.5);\nstd::tuple t(4, 3, 2.5);\nstd::copy_n(vi1, 3, std::back_insert_iterator(vi2));\nstd::for_each(vi.begin(), vi.end(), Foo([&amp;](int i) {...}));\nauto lck = std::lock_guard(foo.mtx);\nstd::lock_guard lck2(foo.mtx, ul);\n</code></pre>"},{"location":"Archive/C%2B%2B/language/9.template.html#deduction-from-a-type","title":"Deduction from a type","text":"<p>\u200b\u901a\u5e38\u200b\u6709\u200b <code>T, T*, T const*, T&amp;, T const&amp;, T&amp;&amp;, T const&amp;&amp;</code>\u200b\u8fd9\u200b\u51e0\u79cd\u200b\u7c7b\u578b\u200b\u3002 \u200b\u5728\u200b\u63a8\u65ad\u200b\u7684\u200b\u65f6\u5019\u200b\u505a\u200breference collapse</p>"},{"location":"Archive/C%2B%2B/language/9.template.html#6-class-template-argument-deduction","title":"6. Class template argument deduction","text":""},{"location":"Archive/C%2B%2B/language/9.template.html#7-explicit-full-template-specialization","title":"7. Explicit (full) template specialization","text":""},{"location":"Archive/C%2B%2B/language/9.template.html#8-partial-template-specialization","title":"8. Partial template specialization","text":"<p>\u200b\u5c40\u90e8\u200b\u7279\u5316\u200b\uff0c\u200b\u5141\u8bb8\u200b\u5bf9\u200b\u6a21\u677f\u200b\u4e2d\u200b\u7684\u200b\u90e8\u5206\u200b\u53c2\u6570\u200b\u505a\u200b\u6307\u5b9a\u200b\u3002</p> <ul> <li>\u200b\u5fc5\u987b\u200b\u8981\u200b\u6307\u660e\u200b\u67d0\u4e9b\u200b\u4e1c\u897f\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u548c\u200b\u539f\u6765\u200b\u7684\u200b\u6a21\u677f\u200b\u5b8c\u5168\u76f8\u540c\u200b</li> <li>\u200b\u4e0d\u80fd\u200b\u6709\u200b\u9ed8\u8ba4\u200b\u53c2\u6570\u200b</li> <li>pack\u200b\u4e00\u5b9a\u200b\u5728\u200b\u6700\u540e\u200b</li> </ul> <pre><code>template&lt;class T1, class T2, int I&gt;\nclass A {};             // primary template\ntemplate&lt;class T, int I&gt;\nclass A&lt;T, T*, I&gt; {};   // #1: partial specialization where T2 is a pointer to T1\ntemplate&lt;class T, class T2, int I&gt;\nclass A&lt;T*, T2, I&gt; {};  // #2: partial specialization where T1 is a pointer\ntemplate&lt;class T&gt;\nclass A&lt;int, T*, 5&gt; {}; // #3: partial specialization where\n                        //     T1 is int, I is 5, and T2 is a pointer\ntemplate&lt;class X, class T, int I&gt;\nclass A&lt;X, T*, I&gt; {};   // #4: partial specialization where T2 is a pointer\n</code></pre>"},{"location":"Archive/C%2B%2B/language/9.template.html#dependent-name-sfinae","title":"Dependent name - SFINAE","text":"<p>\u200b\u5728\u200b\u6a21\u677f\u200b\uff08\u200b\u5305\u62ec\u200b\u7c7b\u200b\u6a21\u677f\u200b\u548c\u200b\u51fd\u6570\u200b\u6a21\u677f\u200b\uff09\u200b\u7684\u200b\u5b9a\u4e49\u200b\u4e2d\u200b\uff0c\u200b\u4e00\u4e9b\u200b\u6784\u9020\u200b\u7684\u200b\u542b\u4e49\u200b\u53ef\u80fd\u200b\u5728\u200b\u4e0d\u540c\u200b\u7684\u200b\u5b9e\u4f8b\u200b\u5316\u4e2d\u200b\u6709\u6240\u4e0d\u540c\u200b\u3002\u200b\u7279\u522b\u200b\u662f\u200b\uff0c\u200b\u7c7b\u578b\u200b\u548c\u200b\u8868\u8fbe\u5f0f\u200b\u53ef\u80fd\u200bdepend on\u200b\u7c7b\u578b\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u7684\u200b\u7c7b\u578b\u200b\u548c\u200b\u975e\u200b\u7c7b\u578b\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u7684\u200b\u503c\u200b\u3002</p> <pre><code>template&lt;typename T&gt;\nstruct X : B&lt;T&gt; // \"B&lt;T&gt;\" is dependent on T\n{\n    typename T::A* pa; // \"T::A\" is dependent on T\n\n    void f(B&lt;T&gt;* pb)\n    {\n        static int i = B&lt;T&gt;::i; // \"B&lt;T&gt;::i\" is dependent on T\n        pb-&gt;j++; // \"pb-&gt;j\" is dependent on T\n    }\n};\n</code></pre> <p>\u200b\u5bf9\u4e8e\u200b dependant names \u200b\u548c\u200b non-dependant names\u200b\u7684\u200bName lookup \u200b\u548c\u200b binding \u200b\u89c4\u5219\u200b\u662f\u200b\u4e0d\u540c\u200b\u7684\u200b\u3002</p>"},{"location":"Archive/C%2B%2B/language/9.template.html#declarationtypenamedependent-names","title":"\u5728\u200bdeclaration\u200b\u4e2d\u200b\u7528\u200b<code>typename</code>\u200b\u6765\u200b\u8868\u660e\u200bdependent names","text":"<p>\u200b\u5728\u200b\u6a21\u677f\u200b\u7684\u200b\u58f0\u660e\u200b\u6216\u200b\u5b9a\u4e49\u200b\u4e2d\u200b\uff0c\u200b\u5305\u62ec\u200b alias template\uff0c\u200b\u4e00\u4e2a\u200b (\u200b\u4e0d\u662f\u200b\u5f53\u524d\u200b\u5b9e\u4f8b\u200b\u5316\u200b\u7684\u200b\u6210\u5458\u200b) \u200b\u5e76\u4e14\u200b (\u200b\u4f9d\u8d56\u4e8e\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u7684\u200b\u540d\u79f0\u200b) \u200b\u4e0d\u200b\u88ab\u200b\u8ba4\u4e3a\u200b\u662f\u200b\u4e00\u4e2a\u200btype\uff0c\u200b\u9664\u975e\u200b\u4f7f\u7528\u200b\u5173\u952e\u5b57\u200b<code>typename</code> \u200b\u6216\u8005\u200b\u5b83\u200b\u5df2\u7ecf\u200b\u88ab\u200b\u786e\u7acb\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\u540d\u79f0\u200b\uff0c\u200b\u4f8b\u5982\u200b\u901a\u8fc7\u200btypedef\u200b\u58f0\u660e\u200b\u6216\u8005\u200b\u88ab\u200b\u7528\u4e8e\u200b\u547d\u540d\u200b\u4e00\u4e2a\u200b\u57fa\u7c7b\u200b\u3002</p> <pre><code>// \u200b\u5728\u200b\u7b2c\u200b1\u200b\u9636\u6bb5\u200b\uff0c\u200b\u7f16\u8bd1\u5668\u200b\u4e0d\u200b\u77e5\u9053\u200b T::size_type \u200b\u662f\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\uff0c T::npos\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5e38\u91cf\u200b -&gt; \u200b\u7b2c\u200b2\u200b\u9636\u6bb5\u200b\u7279\u4f8b\u200b\u5316\u200b\u7684\u200b\u65f6\u5019\u200b\u77e5\u9053\u200b\ntemplate &lt;typename T&gt; \nT :size_type munge(T const &amp;a){\n    T::size_type *i(T::npos);\n    // \u200b\u5982\u679c\u200bT::npos\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b -&gt; \u200b\u51fd\u6570\u200b\u58f0\u660e\u200b\n} // \u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u90fd\u200b\u662f\u200b dependent name \uff0c \u200b\u53d6\u51b3\u4e8e\u200b\u7c7b\u578b\u200b\u53c2\u6570\u200bT\n\ntemplate &lt;typename T&gt; \ntypename T :size_type munge(T const &amp;a){\n    typename T::size_type *i(T::npos);\n    // \u200b\u5982\u679c\u200bT::npos\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b -&gt; \u200b\u51fd\u6570\u200b\u58f0\u660e\u200b\n} \n</code></pre>"},{"location":"Archive/C%2B%2B/language/9.template.html#variadic-templates","title":"variadic templates","text":""},{"location":"Archive/C%2B%2B/language/preprocessor.html","title":"preprocesser","text":""},{"location":"Archive/C%2B%2B/language/preprocessor.html#_1","title":"preprocesser","text":""},{"location":"Archive/C%2B%2B/numeric/bit.html","title":"Bit operations","text":""},{"location":"Archive/C%2B%2B/numeric/bit.html#bit_cast","title":"bit_cast","text":"<p>(C++20)</p> <p>reinterpret the object representation of one type as that of another (function template)</p>"},{"location":"Archive/C%2B%2B/numeric/bit.html#byteswap","title":"byteswap","text":"<p>(C++23)</p> <p>reverses the bytes in the given integer value (function template)</p>"},{"location":"Archive/C%2B%2B/numeric/bit.html#has_single_bit","title":"has_single_bit","text":"<p>(C++20) \u200b\u68c0\u67e5\u200b\u4e00\u4e2a\u200b integer \u200b\u662f\u5426\u200b\u53ea\u6709\u200b1\u200b\u4e2a\u200b\u6bd4\u7279\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b -&gt; \u200b\u8be5\u200b\u6570\u5b57\u200b\u662f\u5426\u662f\u200b2\u200b\u7684\u200b\u5e42\u200b\u3002 \u200b\u53ef\u80fd\u200b\u6709\u200b\u4e24\u79cd\u200b\u5b9e\u73b0\u200b</p> <pre><code> x != 0 &amp;&amp; (x &amp; (x - 1)) == 0; // impl1\n std::popcount(x) == 1;        // impl2\n</code></pre> <p>\u200b\u7528\u4f8b\u200b\uff1a \u200b\u6253\u5370\u200b\u4e8c\u53c9\u6811\u200b\u3001\u200b\u5806\u200b\u7684\u200b\u5206\u5c42\u200b\u3002</p> <pre><code> for (auto t{1U}; auto i : v)\n        std::cout &lt;&lt; i &lt;&lt; (std::has_single_bit(++t) ? \" \u2502 \" : \" \");\n// 9 \u2502 6 9 \u2502 5 5 9 7 \u2502 1 1 3 5 8 3 4 2 \u2502\n</code></pre>"},{"location":"Archive/C%2B%2B/numeric/bit.html#bit_ceil-bit_floor","title":"bit_ceil / bit_floor","text":"<p>(C++20)</p> <p>finds the largest integral power of two not greater than the given value (function template)</p>"},{"location":"Archive/C%2B%2B/numeric/bit.html#bit_width","title":"bit_width","text":"<p>(C++20)</p> <p>finds the smallest number of bits needed to represent the given value (function template)</p>"},{"location":"Archive/C%2B%2B/numeric/bit.html#rotl-rotr","title":"rotl / rotr","text":"<p>(C++20)</p> <p>computes the result of bitwise right-rotation (function template)</p>"},{"location":"Archive/C%2B%2B/numeric/bit.html#countl_zero-countl_one-countr_zero-countr_one","title":"countl_zero / countl_one / countr_zero / countr_one","text":"<p>(C++20)</p> <p>counts the number of consecutive 1 bits, starting from the least significant bit (function template)</p>"},{"location":"Archive/C%2B%2B/numeric/bit.html#popcount","title":"popcount","text":"<p>(C++20)</p> <p>counts the number of 1 bits in an unsigned integer (function template)</p>"},{"location":"Archive/C%2B%2B/numeric/bit.html#endian","title":"endian","text":"<p>(C++20)</p> <p>indicates the endianness of scalar types (enum)</p>"},{"location":"Archive/C%2B%2B/numeric/numeric.html","title":"Numeric operations","text":"<p>Defined in header"},{"location":"Archive/C%2B%2B/numeric/numeric.html#reduce-transfrom_reduce","title":"reduce / transfrom_reduce","text":"<p>\u200b\u548c\u200b<code>accumulate</code> \u200b\u7528\u6cd5\u200b\u4e00\u6837\u200b\uff0c\u200b\u591a\u4e2a\u200bpolicy\u3002</p> <p><code>transfrom_reduce</code> \u200b\u5728\u200b <code>reduce</code> \u200b\u7684\u200b\u57fa\u7840\u200b\u4e0a\u200b\u518d\u52a0\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u5bf9\u200b\u5143\u7d20\u200b\u672c\u8eab\u200b\u5148\u200b\u8fdb\u884c\u200btransform\u3002</p> <pre><code>// transform_reduce instead of reduce; e.g., a + b * b != b + a * a\nvoid print_sum_squared(long const num)\n{\n    std::cout.imbue(std::locale{\"en_US.UTF8\"});\n    std::cout &lt;&lt; \"num = \" &lt;&lt; num &lt;&lt; '\\n';\n\n    // create an immutable vector filled with pattern: 1,2,3,4, 1,2,3,4 ...\n    const std::vector&lt;long&gt; v { [n = num * 4] {\n        std::vector&lt;long&gt; v;\n        v.reserve(n);\n        std::generate_n(std::back_inserter(v), n,\n            [i=0]() mutable { return 1 + i++ % 4; });\n        return v;\n    }()};\n\n    auto squared_sum = [](auto sum, auto val) { return sum + val * val; };\n\n    auto sum1 = std::accumulate(v.cbegin(), v.cend(), 0L, squared_sum);\n    std::cout &lt;&lt; \"accumulate(): \" &lt;&lt; sum1 &lt;&lt; '\\n';\n\n    auto sum2 = std::reduce(PAR v.cbegin(), v.cend(), 0L, squared_sum);\n    std::cout &lt;&lt; \"reduce(): \" &lt;&lt; sum2 &lt;&lt; '\\n';\n\n    auto sum3 = std::transform_reduce(PAR v.cbegin(), v.cend(), 0L, std::plus{},[](auto val) { return val * val; });\n    std::cout &lt;&lt; \"transform_reduce(): \" &lt;&lt; sum3 &lt;&lt; \"\\n\\n\";\n}\n\nint main()\n{\n    print_sum_squared(1);\n    print_sum_squared(1'000);\n    print_sum_squared(1'000'000);\n}\n</code></pre>"},{"location":"Archive/C%2B%2B/numeric/numeric.html#inclusive_scan-exclusive_scan","title":"inclusive_scan / exclusive_scan","text":"<p>\u200b\u8fdb\u884c\u200b\uff08\u200b\u53bb\u200b\u5f53\u524d\u200b\u5143\u7d20\u200b\uff09\u200b\u524d\u7f00\u200b\u626b\u63cf\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u4f7f\u7528\u200b <code>binary_op (or std::plus&lt;&gt;()</code> \u200b\u4f5c\u4e3a\u200bscan\u200b\u64cd\u4f5c\u7b26\u200b\u3002</p> <pre><code>int main()\n{\n  std::vector data {3, 1, 4, 1, 5, 9, 2, 6};\n\n  std::cout &lt;&lt; \"exclusive sum: \";\n  std::exclusive_scan(data.begin(), data.end(),\n        std::ostream_iterator&lt;int&gt;(std::cout, \" \"), 0); // \u200b\u53bb\u6389\u200b\u5f53\u524d\u200b\u524d\u7f00\u200b\uff0c\uff0c\u200b\u521d\u59cb\u503c\u200b0\n  std::cout &lt;&lt; \"\\ninclusive sum: \";\n  std::inclusive_scan(data.begin(), data.end(),\n        std::ostream_iterator&lt;int&gt;(std::cout, \" \")); // \u200b\u524d\u7f00\u200b\u548c\u200b\n\n  std::cout &lt;&lt; \"\\n\\nexclusive product: \";  \n  std::exclusive_scan(data.begin(), data.end(),\n        std::ostream_iterator&lt;int&gt;(std::cout, \" \"),\n        1, std::multiplies&lt;&gt;{});  // \u200b\u53bb\u6389\u200b\u5f53\u524d\u200b\u524d\u7f00\u200b\u4e58\u200b\uff0c\u200b\u521d\u59cb\u503c\u200b1\n  std::cout &lt;&lt; \"\\ninclusive product: \";\n  std::inclusive_scan(data.begin(), data.end(),\n        std::ostream_iterator&lt;int&gt;(std::cout, \" \"),\n        std::multiplies&lt;&gt;{});        // \u200b\u524d\u7f00\u200b\u4e58\u200b\n}\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\u4e3a\u200b</p> <pre><code>exclusive sum: 0 3 4 8 9 14 23 25 \ninclusive sum: 3 4 8 9 14 23 25 31 \n\nexclusive product: 1 3 3 12 12 60 540 1080 \ninclusive product: 3 3 12 12 60 540 1080 6480\n</code></pre>"},{"location":"Archive/C%2B%2B/numeric/numeric.html#transform_inclusive_scan-transform_exclusive_scan","title":"transform_inclusive_scan / transform_exclusive_scan","text":"<p>\u200b\u5728\u200b inclusive_scan / exclusive_scan \u200b\u7684\u200b\u57fa\u7840\u200b\u4e0a\u200b\u518d\u52a0\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u5bf9\u200b\u5143\u7d20\u200b\u672c\u8eab\u200b\u5148\u200b\u8fdb\u884c\u200btransform\u3002</p> <pre><code>int main()\n{\n  std::vector data {3, 1, 4, 1, 5, 9, 2, 6};\n\n  auto times_10 = [](int x) { return x * 10; };\n\n  std::cout &lt;&lt; \"10 times exclusive sum: \";\n  std::transform_exclusive_scan(data.begin(), data.end(),\n    std::ostream_iterator&lt;int&gt;(std::cout, \" \"),\n    0, std::plus&lt;int&gt;{}, times_10);\n  std::cout &lt;&lt; \"\\n10 times inclusive sum: \";\n  std::transform_inclusive_scan(data.begin(), data.end(),\n    std::ostream_iterator&lt;int&gt;(std::cout, \" \"),\n    std::plus&lt;int&gt;{}, times_10);\n}\n</code></pre> <p>\u200b\u7ed3\u679c\u200b\u4e3a\u200b</p> <pre><code>10 times exclusive sum: 0 30 40 80 90 140 230 250 \n10 times inclusive sum: 30 40 80 90 140 230 250 310\n</code></pre>"},{"location":"Archive/C%2B%2B/quicknote/16-Practical%20Performance%20Practices.html","title":"Practical Performance Practices","text":"<ul> <li>\u200b\u603b\u662f\u200b\u4f7f\u7528\u200b <code>const</code></li> <li>\u200b\u5982\u679c\u200b\u6709\u200b\u4e00\u4e2a\u200b\u590d\u6742\u200b\u521d\u59cb\u5316\u200b\uff0c\u200b\u4f7f\u7528\u200bIIFE\uff08\u200b\u6216\u8005\u8bf4\u200blambda\uff09\u3002</li> </ul>"},{"location":"Archive/C%2B%2B/quicknote/FC-Strong%20Type.html","title":"Strong Type","text":"<p>\u200b\u5728\u200b\u5199\u200b\uff08\u200b\u6784\u9020\u200b\uff09\u200b\u51fd\u6570\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u7ecf\u5e38\u200b\u4f1a\u200b\u9047\u5230\u200b\u53c2\u6570\u200b\u53f3\u200b\u76f8\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u53d8\u91cf\u200b\uff0c\u200b\u4f46\u662f\u200b\u542b\u4e49\u200b\u4e0d\u540c\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>struct Rectangle{\n    double _w;\n    double _h;\n    Rectangle(double w, double h) :_w{w}, _h{h} {}\n};\nRectangle r1(10,12); // \u200b\u5bbd\u200b10\u200b\u957f\u200b12\nRectangle r2(12,10); // \u200b\u5bbd\u200b12\u200b\u957f\u200b10\n</code></pre>"},{"location":"Archive/C%2B%2B/quicknote/FC-Strong%20Type.html#1","title":"1. \u200b\u4f7f\u7528\u200b\u5f3a\u200b\u7c7b\u578b\u200b\u6765\u200b\u4ee3\u8868\u200b\u539f\u6765\u200b\u7c7b\u578b\u200b\u76f8\u540c\u200b\u7684\u200b\u53c2\u6570","text":"<p>\u200b\u8fd9\u4e2a\u200b\u4ee3\u7801\u200b\u672c\u8eab\u200b\u6ca1\u9519\u200b\u3002\u200b\u4f46\u662f\u200b\u6ce8\u610f\u200b\u5230\u200b\u4e24\u4e2a\u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b\u90fd\u200b\u662f\u200b <code>double</code>\uff0c\u200b\u53ef\u80fd\u200b\u5b58\u5728\u200b\u4f20\u53cd\u200b\u4e86\u200b\u7684\u200b\u73b0\u8c61\u200b\u3002 \u200b\u5373\u4f7f\u200b\u4e0d\u4f20\u200b\u53cd\u200b\uff0c\u200b\u4e5f\u200b\u9700\u8981\u200b\u7528\u6237\u200b\u53bb\u200b\u770b\u200b\u63a5\u53e3\u200b\u7684\u200b\u8bf4\u660e\u200b\uff08\u200b\u5373\u4f7f\u200b\u4f9d\u8d56\u200bIDE\u200b\u4f1a\u200b\u8ba9\u200b\u8fd9\u4ef6\u200b\u4e8b\u60c5\u200b\u53d8\u5f97\u200b\u7b80\u5355\u200b\uff09\u3002</p> <p>\u200b\u5f3a\u200b\u7c7b\u578b\u200b\u7684\u200b\u76ee\u6807\u200b\u5c31\u662f\u200b\u4e3a\u4e86\u200b\u89e3\u51b3\u200b\u8fd9\u6837\u200b\u7684\u200b\u95ee\u9898\u200b\u3002\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u7684\u200b\u89e3\u51b3\u65b9\u6848\u200b\u662f\u200b\u628a\u200b\u8fd9\u200b\u4e24\u4e2a\u200b <code>double</code> \u200b\u90fd\u200b\u53d8\u6210\u200b\u7c7b\u200b\u3002 \u200b\u8fd9\u6837\u200b\u5c31\u200b\u4e0d\u200b\u53ef\u80fd\u200b\u51fa\u73b0\u200b\u8bef\u4f20\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002</p> <pre><code>class Width{\nprivate:\n    double _w;\npublic:\n    Width(double w): _w{w} {}\n    const double get(){return _w;}\n};\nclass Height{ ... };\nstruct Rectangle{\n    double _w;\n    double _h;\n    Rectangle(Width w, Height h) :_w_{w.get()}, _+_h{h.get()} {}\n};\nRectangle r1(Widht{10},Height{12}); // \u200b\u5bbd\u200b10\u200b\u957f\u200b12\n</code></pre>"},{"location":"Archive/C%2B%2B/quicknote/FC-Strong%20Type.html#2-nametype","title":"2. NameType","text":"<p>\u200b\u56e0\u4e3a\u200b\u4e0d\u60f3\u200b\u6bcf\u4e2a\u200b\u5176\u4ed6\u200b\u7684\u200b\u53c2\u6570\u200b\u90fd\u200b\u8bbe\u7f6e\u200b\u4e00\u4e2a\u200b\u7c7b\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6700\u597d\u200b\u80fd\u200b\u6709\u200b\u4e00\u4e2a\u200b\u4e1c\u897f\u200b\u628a\u200b\u4ed6\u4eec\u200b\u7edf\u4e00\u200b\u8d77\u6765\u200b\u3002 \u200b\u4ee5\u4e0b\u200b\u662f\u200b\u4e00\u4e2a\u200b\u62bd\u8c61\u200b\u51fa\u6765\u200b\u7684\u200b <code>NameType</code> \u200b\u7c7b\u578b\u200b\uff0c\u200b\u63a5\u6536\u200b\u67d0\u4e2a\u200b\u503c\u200b\uff0c\u200b\u5e76\u4e14\u200b\u7ed9\u51fa\u200b\u8fd4\u56de\u200b\u65b9\u6cd5\u200b\u3002</p> <pre><code>template &lt;typename T, typename Parameter&gt;\nclass NamedType\n{\npublic:\n    explicit NamedType(T const&amp; value) : value_(value) {}\n    explicit NamedType(T&amp;&amp; value) : value_(std::move(value)) {}\n    T&amp; get() { return value_; }\n    T const&amp; get() const {return value_; }\nprivate:\n    T value_;\n};\n</code></pre> <p>\u200b\u90a3\u4e48\u200b\u73b0\u5728\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u8fd9\u4e48\u200b\u4f7f\u7528\u200b\u5b83\u4eec\u200b\uff1a</p> <pre><code>using Width = NamedType&lt;double, struct WidthParameter&gt;;\nusing Height = NamedType&lt;double, struct HeightParameter&gt;;\nRectangle r(Width(10), Height(12));\n</code></pre> <p>\u200b\u8fd9\u91cc\u200b\u7684\u200b <code>struct WidthParameter</code> \u200b\u8d77\u5230\u200b\u4e86\u200b\u4e00\u4e2a\u200btag\u200b\u7684\u200b\u4f5c\u7528\u200b\uff0c\u200b\u533a\u5206\u200b\u4e0d\u540c\u200b\u7684\u200b <code>NamedType</code>\u3002</p>"},{"location":"Archive/C%2B%2B/ranges/adaptors.html","title":"Ranges adaptors","text":""},{"location":"Archive/C%2B%2B/ranges/adaptors.html#join-join_view","title":"join / join_view","text":"<p>\u200b\u5c06\u200b\u4e00\u4e2a\u200b <code>view</code> \u200b\u4e2d\u200b\u7684\u200b\u5185\u5bb9\u200b\u644a\u5e73\u200b\uff0c\u200b\u83b7\u5f97\u200b\u4e00\u4e32\u200b\u5e8f\u5217\u200b\u3002</p> <pre><code>const auto bits = { \"https:\"sv, \"//\"sv, \"cppreference\"sv, \".\"sv, \"com\"sv };\n    for (char const c : bits | std::views::join) std::cout &lt;&lt; c;\n//https://cppreference.com\n const std::vector&lt;std::vector&lt;int&gt;&gt; v{ {1,2}, {3,4,5}, {6}, {7,8,9} };\n    auto jv = std::ranges::join_view(v);\n//1 2 3 4 5 6 7 8 9\n</code></pre>"},{"location":"Archive/C%2B%2B/utilities/common_type.html","title":"Common Types","text":""},{"location":"Archive/C%2B%2B/utilities/common_type.html#1-pair","title":"1. pair","text":""},{"location":"Archive/C%2B%2B/utilities/common_type.html#2-tuple","title":"2. tuple","text":""},{"location":"Archive/C%2B%2B/utilities/common_type.html#3-optional","title":"3. optional","text":"<p>\ud83d\udcd6 fluentcpp</p> <p><code>optional&lt;T&gt;</code> \u200b\u4ee3\u8868\u200b\u53ef\u80fd\u200b\u5305\u542b\u200b\u6216\u8005\u200b\u4e0d\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\u4e3a\u200b <code>T</code> \u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u66ff\u4ee3\u200b\u4e86\u200b\u4e4b\u524d\u200b\u4f7f\u7528\u200b <code>nullptr/0/-1/false</code> \u200b\u7684\u200b\u60c5\u51b5\u200b\u3002</p> <p>\u200b\u548c\u200b <code>nullptr</code> \u200b\u6bd4\u200b\u8d77\u6765\u200b\uff0c\u200b\u867d\u7136\u200b\u4e8c\u8005\u200b\u90fd\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u68c0\u67e5\u200b\u662f\u5426\u200b\u4e3a\u7a7a\u200b\u7684\u200b\u80fd\u529b\u200b\uff0c\u200b\u4f46\u662f\u200b <code>optional</code> \u200b\u662f\u200b\u503c\u200b\u8bed\u4e49\u200b\u7684\u200b\uff0c\u200b\u4f8b\u5982\u200b\u590d\u5236\u200b\u3001\u200b\u6bd4\u8f83\u200b\u7b49\u200b\u64cd\u4f5c\u200b\u90fd\u200b\u662f\u200b\u57fa\u4e8e\u200b\u503c\u200b\u7684\u200b\u3002</p> <p>\u200b\u548c\u200b\u7a7a\u200b\u5b57\u7b26\u4e32\u200b <code>\"\"</code> \u200b\u5bf9\u6bd4\u200b\u8d77\u6765\u200b\uff0c <code>\"\"</code> \u200b\u8868\u793a\u200b\u7684\u200b\u53ef\u80fd\u200b\u662f\u200b1.\u200b\u5b57\u7b26\u4e32\u200b\u503c\u4e3a\u200b\u7a7a\u200b 2. \u200b\u5b57\u7b26\u4e32\u200b\u4e0d\u200b\u5b58\u5728\u200b\u4e24\u79cd\u200b\u60c5\u51b5\u200b\u3002 \u200b\u6bd4\u5982\u200b\u9700\u8981\u200b\u6784\u5efa\u200b\u4e00\u4e2a\u200b\u8be2\u95ee\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u53ef\u80fd\u200b\u65e0\u6cd5\u200b\u5206\u8fa8\u200b <code>\"\"</code> \u200b\u7684\u200b\u8bed\u4e49\u200b\u662f\u200b1. \u200b\u5e0c\u671b\u200b\u67e5\u8be2\u200b\u8be5\u5b57\u6bb5\u200b\u786e\u5b9e\u200b\u7b49\u4e8e\u200b <code>\"\"</code>  2. \u200b\u5e0c\u671b\u200b\u5bf9\u200b\u8be5\u200b\u5b57\u200b\u6bb5\u200b\u4e0d\u200b\u505a\u200b\u7b5b\u9009\u200b \u200b\u8fd9\u200b\u4e24\u79cd\u200b\u60c5\u51b5\u200b\u3002 \u200b\u4f46\u662f\u200b <code>optional</code> \u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>value=\"\" / nullopt</code> \u200b\u5c06\u200b\u5176\u200b\u533a\u5206\u200b\u5f00\u6765\u200b\u3002</p> <p>\u200b\u5bf9\u5e94\u200b Haskell \u200b\u4e2d\u200b\u7684\u200b <code>Maybe x = Just x | Nothing</code>  , Rust \u200b\u4e2d\u200b\u7684\u200b <code>Option&lt;T&gt; = Some&lt;T&gt; | None</code>\u3002</p> <p>\u200b\u4e3b\u8981\u200b\u6709\u200b\u4ee5\u4e0b\u200b\u4e00\u4e9b\u200b\u4f18\u70b9\u200b\uff1a</p> <ol> <li>\u200b\u5b89\u5168\u200b\u4ee3\u7801\u200b\uff1a\u200b\u7f16\u8bd1\u5668\u200b\u6216\u200b\u89e3\u91ca\u5668\u200b\u53ef\u4ee5\u200b\u5f3a\u5236\u200b\u8981\u6c42\u200b\u5728\u200b\u4f7f\u7528\u200b\u524d\u200b\u68c0\u67e5\u200b\u8be5\u503c\u200b\u662f\u5426\u200b\u65e0\u6548\u200b\u3002\u200b\u8fd9\u200b\u6709\u52a9\u4e8e\u200b\u9632\u6b62\u200b\u8fd0\u884c\u200b\u65f6\u200b\u7684\u200b\u9519\u8bef\u200b\uff0c\u200b\u5982\u7a7a\u200b\u6307\u9488\u200b\u5f02\u5e38\u200b\u3002</li> <li>\u200b\u8868\u8fbe\u200b\u6027\u200b\uff1a\u200b\u6bd4\u200b\u53e6\u5916\u200b\u68c0\u67e5\u200b\u662f\u5426\u200b\u4e3a\u200b <code>nullptr</code> \u200b\u6216\u200b0\u200b\u66f4\u200b\u6e05\u6670\u200b\u6613\u61c2\u200b\u3002</li> <li>\u200b\u5de5\u5177\u6027\u200b\uff1a\u200b\u8bb8\u591a\u200b\u73b0\u4ee3\u200b\u96c6\u6210\u200b\u5f00\u53d1\u200b\u73af\u5883\u200b\u548c\u200b\u4ee3\u7801\u200b\u7f16\u8f91\u5668\u200b\u5728\u200b\u5904\u7406\u200b\u53ef\u200b\u9009\u200b\u7c7b\u578b\u200b\u65f6\u200b\u53ef\u4ee5\u200b\u63d0\u4f9b\u200b\u6709\u7528\u200b\u7684\u200b\u5efa\u8bae\u200b\u548c\u200b\u81ea\u52a8\u200b\u8865\u5168\u200b\u3002</li> <li>\u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\ud83c\udf1f\uff1a \u200b\u5728\u200b\u6709\u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b\u7684\u200b\u8bed\u8a00\u200b\u4e2d\u200b\uff0c\u200b\u53ef\u200b\u9009\u200b\u7c7b\u578b\u200b\u53ef\u4ee5\u200b\u5e2e\u52a9\u200b\u786e\u4fdd\u200b\u4ee5\u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\u7684\u200b\u65b9\u5f0f\u200b\u4f7f\u7528\u200b\u8be5\u503c\u200b\u3002</li> </ol>"},{"location":"Archive/C%2B%2B/utilities/common_type.html#31-constructor","title":"3.1 constructor","text":"<p><code>optional</code> \u200b\u4e3b\u8981\u200b\u6709\u200b\u4ee5\u4e0b\u200b\u51e0\u79cd\u200b\u521d\u59cb\u5316\u200b\u65b9\u5f0f\u200b</p> \ud83d\udd18 \u200b\u7a7a\u200b\u521d\u59cb\u5316\u200b\ud83d\udd18 \u200b\u4ece\u53f3\u503c\u200b\u521d\u59cb\u5316\u200b\ud83d\udd18 \u200b\u4ece\u200b\u5de6\u503c\u200b\u521d\u59cb\u5316\u200b\ud83d\udd18 \u200b\u4ece\u200b <code>optional</code> \u200b\u521d\u59cb\u5316\u200b\ud83d\udd18 \u200b\u539f\u5730\u200b\u6784\u9020\u200b <p>\u200b\u5176\u503c\u200b\u4e3a\u200b <code>nullopt</code>\u3002</p> <pre><code>    optional&lt;L&gt; op1{};           // case1: \u200b\u7a7a\u200b\u521d\u59cb\u5316\u200b\uff0cop1.has_value: false\n    // &gt;&gt;&gt; p1.has_value: false // empty\n</code></pre> <p>\u200b\u5c06\u4f1a\u200b\u4f7f\u7528\u200b <code>move</code>\u3002</p> <pre><code>    optional&lt;L&gt; op2{L{}};        // case2: prvalue\u200b\u521d\u59cb\u5316\u200b\uff0ccon + move + de\n    //  &gt;&gt;&gt; op2.has_value: true, value: L2  // rvalue\n    // | +L0   [default0 constructor]\n    // | +L2   [move constructor]\n    // | ~L0   [destructor]\n</code></pre> <p>\u200b\u5c06\u4f1a\u200b\u4f7f\u7528\u200b <code>copy</code>\u3002</p> <pre><code>    L l1;\n    // | +L0   [default0 constructor]\n    optional&lt;L&gt; op3{l1};         // case3: lvalue\u200b\u521d\u59cb\u5316\u200b\uff0ccon + copy \n    //  &gt;&gt;&gt; op3.has_value: true, value: L1  \n    // | +L1   [copy constructor]\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\u5c31\u7b97\u200bmove\u200b\u4e4b\u540e\u200b\uff0c\u200b\u539f\u6765\u200b\u7684\u200b <code>optional</code> \u200b\u503c\u200b\u8fd8\u662f\u200b\u6ca1\u200b\u53d8\u200b\u3002</p> <pre><code>    optional&lt;L&gt; op4_1{op2};        // case4: \u200b\u4ece\u200boptional\u200b\u521d\u59cb\u5316\u200b\uff0ccopy\n    //  | +L3    [copy constructor]\n    // &gt;&gt;&gt; op4_1.has_value: true, value: L\n\n    optional&lt;L&gt; op4_2{std::move(op2)}; // case5: move optional ????????????????\n    //  | +L4    [move constructor]\n    // &gt;&gt;&gt; op4_2.has_value: true, value: L4  // move\n    // &gt;&gt;&gt; op2.has_value: true, value: L2  // rvalue\n</code></pre> <p>\u200b\u76f4\u63a5\u200b\u4f20\u6240\u542b\u200b\u7c7b\u578b\u200b\u7684\u200b\u6784\u9020\u200b\u53c2\u6570\u200b\uff08\u200b\u6700\u5feb\u200b\uff09\u3002</p> <pre><code>    optional&lt;L&gt; op5{std::in_place, 55}; // case6: in_place construct\n    //  &gt;&gt;&gt; op5.has_value: true, value: L55\n</code></pre>"},{"location":"Archive/C%2B%2B/utilities/common_type.html#32-modifier","title":"3.2 modifier","text":"<p>\ud83d\udd18 <code>optional.emplace</code> \u200b\u662f\u200b\u8fdb\u884c\u200b\u539f\u5730\u200b\u6784\u9020\u200b\u3002</p> \u200b\u76f4\u63a5\u200b <code>emplace</code> \u200b\u6784\u9020\u200b\u53c2\u6570\u200b <p>\u200b\u548c\u200b\u4e0a\u9762\u200b\u7684\u200bconstructor case5 \u200b\u76f8\u540c\u200b\u3002</p> <pre><code>optional&lt;L&gt; op1{};\n// &gt;&gt;&gt; op1.has_value: false // empty\nop1.emplace(7);\n// | +L7    [default constructor]\n//  &gt;&gt;&gt; op1.has_value: true, value: L7 \n</code></pre> <p>== \"\u200b\u5728\u200b\u539f\u6709\u200b\u503c\u200b\u7684\u200b\u57fa\u7840\u200b\u4e0a\u200b <code>emplace</code>\"</p> <pre><code>\u200b\u4f1a\u200b\u5148\u6790\u6784\u200b\u4e4b\u524d\u200b\u7684\u200b\u503c\u200b\uff1b\u200b\u4e5f\u200b\u53ef\u4ee5\u200b `emplace` \u200b\u5df2\u200b\u5b58\u5728\u200b\u7684\u200b\u5167\u90e8\u503c\u200b\uff0c\u200b\u4f1a\u200b\u76f8\u5e94\u200b\u8c03\u7528\u200bmove/copy\n\n  ```C++\n  op1.emplace(L{11});\n  // | +L11   [default constructor]\n  // | ~L7    [destructor]\n  // | +L13   [move constructor]\n  // | ~L11   [destructor]\n  L l1{16};\n  op1.emplace(l1); \n  //  &gt;&gt;&gt; op1.has_value: true, value: L13 \n  // | +L16   [default constructor]\n  // | ~L13   [destructor]\n  // | +L17   [copy constructor]\n  ```\n</code></pre> <p>\ud83d\udd18 <code>optional.reset</code> \u200b\u5c31\u662f\u200b\u6e05\u200b\u7a7a\u503c\u200b\uff0c\u200b\u53d8\u6210\u200b <code>nullopt</code>\u3002</p> <p>\ud83d\udd18 <code>optional.swap</code> \u200b\u4ea4\u6362\u200b\u4e24\u4e2a\u200b<code>optional</code>\u3002\u200b\u9700\u8981\u200b\u6240\u200b\u5305\u542b\u200b\u7684\u200b\u7c7b\u578b\u200b\u76f8\u540c\u200b\u3002</p>"},{"location":"Archive/C%2B%2B/utilities/common_type.html#33-observers","title":"3.3 Observers","text":"<p>\u200b\u5982\u4f55\u200b\u5224\u65ad\u200b <code>optional</code> \u200b\u662f\u5426\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u503c\u200b\uff1f\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>has_value</code>\u3002</p> <pre><code>```C++\nauto observe1(auto op) {\n  if (op.has_value()) {\n    fmt::print(\"op has value: {}\\n\", op.value());\n  } else {\n    fmt::print(\"op has no value\\n\");\n  }\n}\n\noptional&lt;int&gt; op{1};\noptional&lt;int&gt; op_empty{};\nobserve1(op);       // op has value: 1\nobserve1(op_empty); // op has no value\n```\n</code></pre> <p>\u200b\u4f46\u662f\u200b\u901a\u5e38\u200b\u5224\u65ad\u200b\u6709\u65e0\u200b\u503c\u540e\u200b\u90fd\u200b\u60f3\u200b\u8c03\u7528\u200b <code>value()</code>\uff0c\u200b\u800c\u200b <code>value()</code> \u200b\u51fd\u6570\u200b\u4e2d\u200b\u672c\u6765\u200b\u5c31\u200b\u8c03\u7528\u200b\u4e86\u200b\u4e00\u6b21\u200b <code>has_value()</code>\uff0c\u200b\u5728\u200b\u6ca1\u6709\u200b\u503c\u65f6\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200b\u3002</p> <p>\u200b\u6216\u8005\u200b\u4f7f\u7528\u200b\u91cd\u8f7d\u200b\u7684\u200b\u64cd\u4f5c\u7b26\u200b <code>bool</code> \u200b\u548c\u200b <code>*</code> \u200b\u6765\u200b\u5224\u65ad\u200b\u3001\u200b\u53d6\u503c\u200b\u3002</p> <pre><code>```C++\nauto observe2(auto op) {\n  if (op) {\n    fmt::print(\"op has value: {}\\n\", *op);\n  } else {\n    fmt::print(\"op has no value\\n\");\n  }\n}\n\n    optional&lt;int&gt; op{2};\n    optional&lt;int&gt; op_empty{};\n    observe2(op);       // op has value: 2\n    observe2(op_empty); // op has no value\n```\n</code></pre> <p>\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>value_or</code> \u200b\u6765\u200b\u6307\u5b9a\u200b\u9ed8\u8ba4\u503c\u200b</p> <pre><code>```C++\nauto observe3(auto op) {\n  fmt::print(\"op has {}value: {}\\n\", op.has_value() ? \"\" : \"no \",\n            op.value_or(42));\n}\n    optional&lt;int&gt; op{3};\n    optional&lt;int&gt; op_empty{};\n    observe3(op);       // op has value: 3\n    observe3(op_empty); // op has no value: 42\n```\n</code></pre>"},{"location":"Archive/C%2B%2B/utilities/common_type.html#34-monadic-operations","title":"3.4 monadic operations","text":"<p>\ud83d\udd18 and_then \u200b\u5982\u679c\u200b <code>optional</code> \u200b\u4e2d\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u503c\u200b\uff0c\u200b\u5219\u200b\u8c03\u7528\u51fd\u6570\u200b <code>F</code>\uff0c\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b <code>nullopt</code>\u3002 \ud83d\udd18 or_else \u200b\u5982\u679c\u200b <code>optional</code> \u200b\u4e2d\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u503c\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b\u5b83\u200b\u672c\u8eab\u200b\uff0c\u200b\u5426\u5219\u200b\u8c03\u7528\u51fd\u6570\u200b <code>F</code>\u3002</p> <p>!!! Note <code>optional</code> \u200b\u7684\u200bsetter\u200b\u8bbe\u7f6e\u200b     \u200b\u4f8b\u5982\u200b\u7ed3\u6784\u200b\u4f53\u91cc\u200b\u6709\u200b\u4e00\u4e2a\u200b <code>optional&lt;Cert&gt; cert_</code>\uff0c\u200b\u73b0\u5728\u200b\u8981\u200b\u5199\u200b\u4e00\u4e2a\u200b\u6210\u5458\u200b\u51fd\u6570\u200b <code>void setCert(???);</code>\uff0c\u200b\u63a5\u6536\u200b\u4e00\u4e2a\u200b\u5916\u90e8\u200b <code>Cert</code> \uff0c\u200b\u5982\u4f55\u200b\u8bbe\u5b9a\u200b\u53c2\u6570\u200b\uff1f</p> <pre><code>- \u200b\u901a\u5e38\u200b\u4f7f\u7528\u200b `void setCert(optional&lt;Cert&gt;);`\uff0c\u200b\u7136\u540e\u200b `move` \u200b\u8fdb\u200b\u5916\u90e8\u200b `Cert`\u3002\n- \u200b\u901a\u8fc7\u200b `void setCert(Cert&amp;&amp;) + void setCert(std::optional&lt;Cert&gt;)` \uff0c\u200b\u5728\u200b\u7eaf\u53f3\u503c\u200b\u7684\u200b\u65f6\u5019\u200b\u80fd\u7701\u200b\u4e00\u6b21\u200bmove\u3002\n- \u274c\u200b\u57fa\u672c\u200b\u4e0d\u7528\u200b `void setCert(const std::optional&lt;Cert&gt;&amp;)` \uff0c\u200b\u56e0\u4e3a\u200b\u8c03\u7528\u8005\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u6709\u4e2a\u200b `optional&lt;Cert&gt;`\uff0c \u200b\u53ef\u80fd\u200b\u4f1a\u200b\u7ed9\u200b\u4e00\u4e2a\u200b `Cert` \u200b\u4e34\u65f6\u200b\u503c\u200b\u3002\n</code></pre>"},{"location":"Archive/C%2B%2B/utilities/common_type.html#expected","title":"expected","text":""},{"location":"Archive/C%2B%2B/utilities/common_type.html#variant","title":"variant","text":""},{"location":"Archive/C%2B%2B/utilities/common_type.html#any","title":"any","text":""},{"location":"Archive/C%2B%2B/utilities/format.html","title":"Format","text":""},{"location":"Archive/C%2B%2B/utilities/format.html#1format","title":"1.format","text":""},{"location":"Archive/C%2B%2B/utilities/format.html#format-ranges","title":"format ranges","text":"<pre><code>expect(R\"((\"hello\", 42))\"s == std::format(\"{}\", std::tuple{\"hello\", 42}));\nexpect(\"[0x1, 0x2, 0x3]\"s == std::format(\"{::#x}\", std::vector{1, 2, 3}));\nexpect(\"[*1*, *2*, *3*]\"s == std::format(\"{::*^3}\", std::vector{1, 2, 3}));\nexpect(\"Q L\"s == std::format(\"{}\", std::string{'Q', ' ', 'L'}));\nexpect(R\"([\"a\", \"bc\"])\"s == std::format(\"{::?s}\", std::vector{std::vector{'a'}, std::vector{'b','c'}}));\nexpect(\"[[97], [98, 99]]\"s == std::format(\"{:::d}\", std::vector{std::vector{'a'}, std::vector{'b','c'}}));\n</code></pre>"},{"location":"Archive/C%2B%2B/utilities/memory_management.html","title":"Dynamic memory management","text":""},{"location":"Archive/C%2B%2B/utilities/memory_management.html#smart-pointers","title":"Smart pointers","text":""},{"location":"Archive/C%2B%2B/utilities/memory_management.html#unique_ptr","title":"<code>unique_ptr</code>","text":"<p><code>unique_ptr</code> \u200b\u662f\u200b\u7ba1\u7406\u200b\u53e6\u200b\u4e00\u4e2a\u200bobject\u200b\u7684\u200bsmart pointer\uff0c\u200b\u5728\u200b<code>unique_ptr</code>\u200b\u5468\u671f\u200b\u7ed3\u675f\u200b\u7684\u200b\u65f6\u5019\u200b\u5bf9\u200b\u7ba1\u7406\u200b\u7684\u200bobject\u200b\u8fdb\u884c\u200b\u5904\u7406\u200b\u3002 \u200b\u6784\u9020\u51fd\u6570\u200b\u4e3a\u200b</p> <pre><code>unique_ptr( pointer p );\n// deleter \u200b\u4e3a\u200b value\nunique_ptr(pointer p, const A&amp; d) noexcept; // copy\nunique_ptr(pointer p, A&amp;&amp; d) noexcept;      // move\n// deleter \u200b\u4e3a\u200b\u5de6\u503c\u200b\u5f15\u7528\u200b A&amp;\nunique_ptr(pointer p, A&amp;&amp; d) noexcept;\nunique_ptr(pointer p, A&amp;&amp; d) = delete;\n// deleter \u200b\u4e3a\u200b\u5de6\u503c\u200b\u5f15\u7528\u200b const A&amp;\nunique_ptr(pointer p, const A&amp; d) noexcept;\nunique_ptr(pointer p, const A&amp;&amp; d) = delete;\n// \u200b\u4ece\u200b\u53e6\u200b\u4e00\u4e2a\u200bunique_ptr\u200b\u4e2d\u200b\u83b7\u53d6\u200b\u6240\u6709\u6743\u200b\nunique_ptr( unique_ptr&amp;&amp; u ) noexcept;\n</code></pre> <p>\u200b\u901a\u5e38\u200b\u76f4\u63a5\u200b\u7ba1\u7406\u200b\u4e00\u4e2a\u200b\u7269\u54c1\u200b\uff0c\u200b\u7136\u540e\u200b\u7528\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u6e05\u7406\u200b\u3002\u200b\u5728\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u6700\u597d\u200b\u4f7f\u7528\u200b<code>make_unique</code>\u3002\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7ba1\u7406\u200b\u67d0\u4e2a\u200b\u6570\u7ec4\u200b\u6216\u8005\u200b\u5bb9\u5668\u200b\u7b49\u200b\u3002</p> <pre><code>std::unique_ptr&lt;Foo&gt; up(new Foo);\nstd::unique_ptr&lt;Foo&gt; v1 = std::make_unique&lt;Foo&gt;();\nstd::unique_ptr&lt;Fo0[]&gt; v2 = std::make_unique&lt;Foo[]&gt;(5);\n</code></pre>"},{"location":"Archive/C%2B%2B/utilities/memory_management.html#shared_ptr","title":"<code>shared_ptr</code>","text":"<p><code>shared_ptr</code>\u200b\u662f\u200b\u6709\u7740\u200b\u5171\u4eab\u200b\u6240\u6709\u6743\u200b\u7684\u200bsmart pointer\uff0c\u200b\u5f53\u200b\u6ca1\u6709\u200b\u4efb\u4f55\u200b<code>shared_ptr</code>\u200b\u6307\u5411\u200b\u7ba1\u7406\u200bobject\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u8fd9\u4e2a\u200bobject\u200b\u624d\u200b\u4f1a\u200b\u88ab\u200b\u6467\u6bc1\u200b\u3002</p> <pre><code>std::cout &lt;&lt; \"2) constructor with object\\n\";\nstd::shared_ptr&lt;Foo&gt; sh2(new Foo{10}); \nstd::cout &lt;&lt; \"sh2.use_count(): \" &lt;&lt; sh2.use_count() &lt;&lt; '\\n'; //sh2.use_count(): 1\nstd::shared_ptr&lt;Foo&gt; sh3(sh2); \nstd::cout &lt;&lt; \"sh2.use_count(): \" &lt;&lt; sh2.use_count() &lt;&lt; '\\n'; //sh2.use_count(): 2\nstd::cout &lt;&lt; \"sh3.use_count(): \" &lt;&lt; sh3.use_count() &lt;&lt; '\\n'; //sh3.use_count(): 2\n</code></pre> <p><code>make_shard</code> \u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b<code>shared_ptr</code>\uff0c\u200b\u6709\u200b\u4ee5\u4e0b\u200b\u51e0\u79cd\u200b\u7528\u6cd5\u200b</p> <pre><code>//\u200b\u63d0\u4f9b\u200b\u7ba1\u7406\u200bobject T\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u6784\u9020\u200b\u4e00\u4e2a\u200b\u5bf9\u8c61\u200b\nshared_ptr&lt;T&gt; make_shared( Args&amp;&amp;... args ); \n// \u200b\u6784\u9020\u200b\u591a\u7ef4\u200b\u6570\u636e\u7ba1\u7406\u200b\nshared_ptr&lt;T&gt; make_shared( std::size_t N );\nshared_ptr&lt;T&gt; make_shared(); // \u200b\u8fd9\u91cc\u200bT\u200b\u672c\u8eab\u200b\u662f\u200b\u4e2a\u200b\u4f8b\u5982\u200bArr[123]\u200b\u8fd9\u6837\u200b\u7684\u200b\u6570\u7ec4\u200b\n</code></pre>"},{"location":"Archive/C%2B%2B/utilities/memory_management.html#weak_ptr","title":"<code>weak_ptr</code>","text":""},{"location":"Archive/C%2B%2B/utilities/memory_management.html#allocators","title":"Allocators","text":""},{"location":"Archive/C%2B%2B/utilities/memory_management.html#memory-resources","title":"Memory resources","text":""},{"location":"Archive/C%2B%2B/utilities/memory_management.html#uninitialized-storage","title":"Uninitialized storage","text":""},{"location":"Archive/C%2B%2B/utilities/type_operations.html","title":"Type operations","text":""},{"location":"Archive/C%2B%2B/utilities/type_operations.html#forward","title":"forward","text":"<p>reference</p> <p><code>forward</code> \u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u5de6\u503c\u200b\u6216\u200b\u53f3\u503c\u200b\u3002</p> <pre><code>// \u200b\u5c06\u200b\u5de6\u503c\u200b\u8f6c\u53d1\u200b\u4e3a\u200b\u5de6\u503c\u200b\u6216\u200b\u53f3\u503c\u200b\uff0c\u200b\u53d6\u51b3\u4e8e\u200bT\ntemplate&lt; class T &gt;\nconstexpr T&amp;&amp; forward( std::remove_reference_t&lt;T&gt;&amp; t ) noexcept; // (1)\n\n// \u200b\u5c06\u200b\u53f3\u503c\u200b\u8f6c\u53d1\u200b\u4e3a\u200b\u53f3\u503c\u200b\uff0c\u200b\u4e0d\u200b\u53ef\u80fd\u200b\u5de6\u503c\u200b\ntemplate&lt; class T &gt;\nconstexpr T&amp;&amp; forward( std::remove_reference_t&lt;T&gt;&amp;&amp; t ) noexcept; // (1)\n</code></pre> <p>\ud83d\udd18 (1)\u200b\u63a5\u6536\u200b\u5de6\u503c\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b \u200b\u5f53\u200b <code>t</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b forwarding reference\uff0c<code>forward</code> \u200b\u4f7f\u5f97\u200b\u53c2\u6570\u200b\u5230\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u7c7b\u578b\u200b\u8f6c\u4e3a\u200b\u8be5\u200b\u51fd\u6570\u200b\u6240\u200b\u58f0\u660e\u200b\u7684\u200b\u3002</p> <pre><code>template&lt;class T&gt;\nvoid wrapper(T&amp;&amp; arg)\n{\n    // arg is always lvalue\n    foo(std::forward&lt;T&gt;(arg)); // Forward as lvalue or as rvalue, depending on T\n}\n\n// pass rvalue string -&gt; T = std::String\n// pass const lvalue string -&gt; T = const std::String &amp;\n// pass non-const lvalue string -&gt; T = std::String&amp;\n</code></pre> <p>\ud83d\udd18 (2)\u200b\u63a5\u6536\u200b\u53f3\u503c\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b \u200b\u8fd9\u4e2a\u200b\u91cd\u8f7d\u200b\u4f7f\u5f97\u200b\u8f6c\u53d1\u200b\u4e00\u4e2a\u200b\u8868\u8fbe\u5f0f\u200b\uff08\u200b\u6bd4\u5982\u200b\u51fd\u6570\u8c03\u7528\u200b\uff09\u200b\u7684\u200b\u7ed3\u679c\u200b\u6210\u4e3a\u200b\u53ef\u80fd\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u8868\u8fbe\u5f0f\u200b\u53ef\u4ee5\u200b\u662f\u200brvalue\u200b\u6216\u200blvalue\uff0c\u200b\u4f5c\u4e3a\u200b\u8f6c\u53d1\u200b\u5f15\u7528\u200b\u53c2\u6570\u200b\u7684\u200b\u539f\u59cb\u200b\u503c\u200b\u7c7b\u522b\u200b\u3002</p> <pre><code>// transforming wrapper\n// \u200b\u4e00\u4e2a\u200b\u5305\u88c5\u200b\u5668\u200b\u4e0d\u200b\u53ea\u662f\u200b\u8f6c\u53d1\u200b\u5176\u200b\u53c2\u6570\u200b\uff0c\u200b\u800c\u662f\u200b\u5728\u200b\u8be5\u200b\u53c2\u6570\u200b\u4e0a\u200b\u8c03\u7528\u200b\u4e00\u4e2a\u200b\u6210\u5458\u200b\u51fd\u6570\u200b\uff0c\u200b\u5e76\u200b\u8f6c\u53d1\u200b\u5176\u200b\u7ed3\u679c\u200b\u3002\ntemplate&lt;class T&gt;\nvoid wrapper(T&amp;&amp; arg)\n{\n    foo(forward&lt;decltype(forward&lt;T&gt;(arg).get())&gt;(forward&lt;T&gt;(arg).get()));\n}\n</code></pre>"},{"location":"Archive/C%2B%2B/utilities/type_operations.html#forward_like","title":"forward_like","text":""},{"location":"Archive/C%2B%2B/utilities/type_operations.html#move","title":"move","text":"<p>Note</p> <p>\u200b\u5728\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u4f53\u91cc\u200b\u5e94\u8be5\u200b\u7528\u200bmove\u200b\u8fd8\u662f\u200bforward\uff1f | Signature                           | Action                              | Note                                     | | ----------------------------------- | ----------------------------------- | ---------------------------------------- | | <code>void Fun(Object p)</code>                | <code>x = std::move(p);</code>                 | p\u200b\u662f\u200b\u51fd\u6570\u200b\u62e5\u6709\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5bf9\u8c61\u200b                    | | <code>template&lt;class T&gt; void Fun(T &amp;&amp;p)</code> | <code>x = std::forward&lt;T&gt;(p);</code>           | forward \u200b\u8f6c\u53d1\u200b\uff0c\u200b\u5224\u65ad\u200b\u4f20\u5165\u200b\u7684\u200b\u662f\u200b\u5de6\u503c\u200b\u8fd8\u662f\u200b\u53f3\u503c\u200b\u3002 | | <code>Object o{/* */}</code>                   | <code>x = std::move(p);</code>                 | \u200b\u81ea\u5df1\u200b\u7684\u200b\u5bf9\u8c61\u200b\u3002                             | | <code>auto&amp;&amp; o{/* */}</code>                   | <code>x = std::forward&lt;decltype(o)&gt;(o);</code> | auto\u200b\u662f\u200btype\u200b\u63a8\u65ad\u200b\uff0c\u200b\u4e5f\u200b\u662f\u200bforward\u200b\u8f6c\u53d1\u200b          |</p>"},{"location":"Archive/C%2B%2B/utilities/type_operations.html#move_if_noexcept","title":"move_if_noexcept","text":"<p><code>move_if_noexcept</code> \u200b\u5c06\u200b\u83b7\u5f97\u200b\u5176\u200b\u53c2\u6570\u200b\u7684\u200b\u53f3\u503c\u200b\u5f15\u7528\u200b\uff0c\u200b\u5982\u679c\u200b\u5b83\u200b\u7684\u200b\u79fb\u52a8\u200b\u6784\u9020\u51fd\u6570\u200b\u662f\u200b <code>noexcept</code>\uff0c\u200b\u6216\u8005\u200b\u6ca1\u6709\u200b copy \u200b\u6784\u9020\u51fd\u6570\u200b\uff08move-only \u200b\u7c7b\u578b\u200b\uff09\uff0c\u200b\u5219\u200b\uff0c\u200b\u5426\u5219\u200b\u83b7\u5f97\u200b\u5176\u200b\u53c2\u6570\u200b\u7684\u200b\u5de6\u503c\u200b\u5f15\u7528\u200b\u3002\u200b\u5b83\u200b\u901a\u5e38\u200b\u88ab\u200b\u7528\u6765\u200b\u7ed3\u5408\u200b\u79fb\u52a8\u200b\u8bed\u4e49\u200b\u548c\u200b\u5f3a\u200b\u5f02\u5e38\u200b\u4fdd\u8bc1\u200b\u3002</p> <p>\u200b\u8f93\u5165\u200b <code>x</code>\uff0c\u200b\u6839\u636e\u200b\u5f02\u5e38\u200b\u4fdd\u8bc1\u200b\u8fd4\u56de\u200b<code>std::move(x)</code> \u200b\u6216\u200b <code>x</code>\u3002</p> <p>Note</p> <p>\u200b\u4f8b\u5982\u200b\uff0c\u200b\u8fd9\u200b\u88ab\u200bstd::vector::resize\u200b\u6240\u200b\u4f7f\u7528\u200b\uff0c\u200b\u5b83\u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\u5206\u914d\u200b\u65b0\u200b\u7684\u200b\u5b58\u50a8\u7a7a\u95f4\u200b\uff0c\u200b\u7136\u540e\u200b\u5c06\u200b\u5143\u7d20\u200b\u4ece\u200b\u65e7\u200b\u7684\u200b\u5b58\u50a8\u7a7a\u95f4\u200b\u79fb\u52a8\u200b\u6216\u200b\u590d\u5236\u5230\u200b\u65b0\u200b\u7684\u200b\u5b58\u50a8\u7a7a\u95f4\u200b\u3002\u200b\u5982\u679c\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u64cd\u4f5c\u200b\u4e2d\u200b\u53d1\u751f\u200b\u4e86\u200b\u5f02\u5e38\u200b\uff0cstd::vector::resize\u200b\u5c31\u200b\u4f1a\u200b\u64a4\u9500\u200b\u5b83\u200b\u5230\u6b64\u4e3a\u6b62\u200b\u6240\u200b\u505a\u200b\u7684\u200b\u4e00\u5207\u200b\uff0c\u200b\u8fd9\u200b\u53ea\u6709\u200b\u5728\u200bstd::move_if_noexcept\u200b\u88ab\u200b\u7528\u6765\u200b\u51b3\u5b9a\u200b\u662f\u200b\u4f7f\u7528\u200b\u79fb\u52a8\u200b\u6784\u9020\u200b\u8fd8\u662f\u200b\u590d\u5236\u200b\u6784\u9020\u200b\u65f6\u624d\u200b\u53ef\u80fd\u200b</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;utility&gt;\n\nstruct Bad\n{\n    Bad() {}\n    Bad(Bad&amp;&amp;) { std::cout &lt;&lt; \"Throwing move constructor called\\n\"; }\n    Bad(const Bad&amp;) { std::cout &lt;&lt; \"Throwing copy constructor called\\n\";}\n};\n\nstruct Good\n{\n    Good() {}\n    Good(Good&amp;&amp;) noexcept {std::cout &lt;&lt; \"Non-throwing move constructor called\\n\";}\n    Good(const Good&amp;) noexcept { std::cout &lt;&lt; \"Non-throwing copy constructor called\\n\";}\n};\n\nint main()\n{\n    Good g;\n    Bad b;\n    Good g2 = std::move_if_noexcept(g); // Non-throwing move constructor called\n    Bad b2 = std::move_if_noexcept(b); // Throwing copy constructor called\n}\n</code></pre>"},{"location":"Archive/C%2B%2B/utilities/type_operations.html#to_underlying","title":"to_underlying","text":""},{"location":"Archive/Haskell/1%20%E7%AE%80%E4%BB%8B.html","title":"\u51fd\u6570\u200b\u5f0f\u200b\u7a0b\u5e8f\u8bbe\u8ba1\u200b\u7b80\u4ecb","text":""},{"location":"Archive/Haskell/1%20%E7%AE%80%E4%BB%8B.html#_2","title":"\u6838\u5fc3\u200b\u6982\u5ff5","text":"<ul> <li>\u200b\u7c7b\u578b\u200b\uff1a\u200b\u4e00\u4e9b\u200b\u503c\u200b\u7684\u200b\u96c6\u5408\u200b</li> <li>\u200b\u51fd\u6570\u200b\uff1a\u200b\u5e26\u6709\u200b\u4e00\u4e2a\u200b\u6216\u200b\u591a\u4e2a\u200b\u53c2\u6570\u200b\uff0c\u200b\u5e76\u200b\u80fd\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u7ed3\u679c\u200b\u7684\u200b\u8fd0\u7b97\u200b\u3002</li> </ul>"},{"location":"Archive/Haskell/1%20%E7%AE%80%E4%BB%8B.html#haskell-","title":"Haskell -- \u200b\u51fd\u6570\u200b\u5f0f\u200b\u7a0b\u5e8f\u8bbe\u8ba1\u200b\u8bed\u8a00","text":"<p>\u200b\u5b98\u65b9\u7f51\u7ad9\u200bhttp://www.haskell.org/\u3002</p> <p>Haskell \u200b\u662f\u200b\u4e00\u79cd\u200b\u51fd\u6570\u200b\u5f0f\u200b\u7a0b\u5e8f\u8bbe\u8ba1\u200b\u8bed\u8a00\u200b\uff0c\u200b\u6709\u200b\u591a\u79cd\u200b\u5b9e\u73b0\u200b\u3002\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u89e3\u91ca\u5668\u200b\u8fdb\u884c\u200b\u4ea4\u4e92\u200b\u8fd0\u884c\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7f16\u8bd1\u200b\u7a0b\u200b\u4ee3\u7801\u200b\u3002Haskell toolchain\u200b\u5b98\u200b\u7f51\u4e0a\u200b\u7684\u200b\u5de5\u5177\u200b\u94fe\u200b\u5305\u62ec\u200b\u4ee5\u4e0b\u200b\u90e8\u5206\u200b\uff0c\u200b\u901a\u8fc7\u200b\u5b98\u200b\u7f51\u4e0a\u200b\u7684\u200bGHCup\u200b\u53ef\u4ee5\u200b\u5bf9\u200b\u5176\u200b\u8fdb\u884c\u200b\u7edf\u4e00\u200b\u5b89\u88c5\u200b\u3002</p> <ol> <li> <p>\u200b\u7f16\u8bd1\u5668\u200b\u548c\u200b\u89e3\u91ca\u5668\u200bGHC\uff1a</p> </li> <li> <p>GHC(Glasgow Haskell compiler)\u200b\u662f\u200b\u6700\u200b\u5e7f\u6cdb\u200b\u4f7f\u7528\u200b\u7684\u200bHaskell\u200b\u7f16\u8bd1\u5668\u200b\u3002GHC\u200b\u53ef\u4ee5\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200bHaskell\u200b\u811a\u672c\u200b\uff08\u200b\u5b83\u4eec\u200b\u901a\u5e38\u200b\u6709\u200b\u4e00\u4e2a\u200b.hs\u200b\u6269\u5c55\u540d\u200b\uff09\u200b\u5e76\u200b\u7f16\u8bd1\u200b\u5b83\u200b\u3002</p> </li> <li> <p>GHCi(Glasgow Haskell compiler interactive)\u200b\u5219\u200b\u662f\u200b\u4e00\u4e2a\u200b\u89e3\u91ca\u5668\u200b\uff0c\u200b\u5373\u200bGHC\u200b\u7684\u200b\u4ea4\u4e92\u200b\u6a21\u5f0f\u200b\u3002\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u5b83\u200b\u50cf\u200b\u5728\u200b\u7eb8\u200b\u4e0a\u4f5c\u200b\u8ba1\u7b97\u200b\u4e00\u6837\u200b\u4e00\u6b65\u6b65\u200b\u5730\u200b\u8ba1\u7b97\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u503c\u200b\u3002\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u4f60\u200b\u52a0\u8f7d\u200b\u7684\u200b\u811a\u672c\u200b\u4e2d\u200b\u8c03\u7528\u51fd\u6570\u200b\uff0c\u200b\u7ed3\u679c\u200b\u4f1a\u200b\u7acb\u5373\u200b\u663e\u793a\u200b\u3002</p> </li> <li> <p>\u200b\u6253\u5305\u200b\u548c\u200b\u53d1\u5e03\u200b\u5de5\u5177\u200bCabel\uff1a     Cabal\u200b\u7528\u4e8e\u200b\u7ba1\u7406\u200bhaskell\u200b\u7684\u200b\u8f6f\u4ef6\u200b\u3001\u200b\u5e93\u200b\u3001\u200b\u5b89\u88c5\u5305\u200b\u7b49\u200b\u3002</p> </li> <li> <p>\u200b\u8de8\u5e73\u53f0\u200b\u7f16\u8bd1\u200bStack\uff1a     Stack\u200b\u7c7b\u4f3c\u200bCmake\u200b\u5de5\u5177\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5f88\u200b\u65b9\u4fbf\u200b\u7684\u200b\u914d\u7f6e\u200b\u4e0d\u540c\u200b\u5e73\u53f0\u200b\u4e0a\u200b\u7684\u200b\u7f16\u8bd1\u200b\u3002</p> </li> <li> <p>\u200b\u8bed\u8a00\u200b\u670d\u52a1\u5668\u200bhaskell-language-server \uff08\u200b\u53ef\u200b\u9009\u200b\uff09\uff1a    haskell-language-server \u200b\u662f\u200b\u4e00\u4e2a\u200b\u8bed\u8a00\u200b\u670d\u52a1\u5668\u200b\uff0c\u200b\u4f9b\u200b\u5f00\u53d1\u4eba\u5458\u200b\u4e0e\u200b\u4ed6\u4eec\u200b\u7684\u200b\u7f16\u8f91\u5668\u200b/IDE\u200b\u96c6\u6210\u200b\u3002</p> </li> </ol>"},{"location":"Archive/Haskell/1%20%E7%AE%80%E4%BB%8B.html#haskell","title":"Haskell \u200b\u7279\u5f81","text":"<ul> <li>Functional \u200b\u51fd\u6570\u200b\u5f0f\u200b\uff1a \u200b\u7a0b\u5e8f\u200b\u7684\u200b\u57fa\u672c\u200b\u6784\u6210\u200b\u90e8\u5206\u200b\u662f\u200b\u51fd\u6570\u200b\u3002\u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u8fd4\u56de\u200b\u51fd\u6570\u200b\u5e76\u200b\u4ee5\u200b\u51fd\u6570\u200b\u4e3a\u200b\u53c2\u6570\u200b\u3002\u200b\u53e6\u5916\u200b\uff0cHaskell\u200b\u4e2d\u200b\u552f\u4e00\u200b\u7684\u200b\u5faa\u73af\u200b\u7ed3\u6784\u200b\u662f\u200b\u9012\u5f52\u200b\u3002</li> <li>Pure \u200b\u7eaf\u51c0\u200b\uff1a \u200b\u6ca1\u6709\u200b\u526f\u4f5c\u7528\u200b\uff0c\u200b\u526f\u4f5c\u7528\u200b\u6307\u200b\u7684\u200b\u662f\u200b\u8bf8\u5982\u200b\u8bfb\u53d6\u200b\u6587\u4ef6\u200b\u3001\u200b\u6253\u5370\u200b\u51fa\u200b\u6587\u672c\u200b\u6216\u200b\u6539\u53d8\u200b\u5168\u5c40\u53d8\u91cf\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u6765\u8bf4\u200b\uff0c\u200b\u6240\u6709\u200b\u7684\u200b\u8f93\u5165\u200b\u90fd\u200b\u5728\u200b\u5728\u200b\u5b83\u200b\u7684\u200b\u53c2\u6570\u200b\u4e2d\u200b\uff0c\u200b\u6240\u6709\u200b\u8f93\u51fa\u200b\u90fd\u200b\u5728\u200b\u5b83\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u4e2d\u200b\u3002</li> <li>Lazy \u200b\u61d2\u60f0\u200b\uff1a \u200b\u60f0\u6027\u200b\u6c42\u503c\u200b\uff0c\u200b\u503c\u200b\u53ea\u6709\u200b\u5728\u200b\u88ab\u200b\u7528\u5230\u200b\u7684\u200b\u65f6\u5019\u200b\u624d\u200b\u4f1a\u200b\u88ab\u200b\u8ba1\u7b97\u200b\u3002\u200b\u56e0\u6b64\u200b\u80fd\u591f\u200b\u652f\u6301\u200b\u65e0\u7ebf\u200b\u6570\u636e\u7c7b\u578b\u200b\u3002</li> <li>Strongly type \u200b\u5f3a\u200b\u7c7b\u578b\u200b\uff1a\u200b\u6bcf\u4e2a\u200b\u503c\u200b\u548c\u200b\u8868\u8fbe\u5f0f\u200b\u90fd\u200b\u6709\u200b\u7c7b\u578b\u200b\uff0c\u200b\u7f16\u8bd1\u5668\u200b\u4f1a\u200b\u5728\u200b\u7f16\u8bd1\u200b\u671f\u200b\u68c0\u67e5\u200b\u7c7b\u578b\u200b\uff0c\u200b\u56e0\u6b64\u200b\u7c7b\u578b\u200b\u9519\u8bef\u200b\u4e0d\u4f1a\u200b\u53d1\u751f\u200b\u5728\u200b\u8fd0\u884c\u200b\u65f6\u200b\u3002\u200b\u8fd9\u200b\u4e5f\u200b\u5c31\u200b\u8bf4\u200b\uff0cHaskll\u200b\u4e2d\u200b\u6ca1\u6709\u200bPython\u200b\u7684\u200b<code>AttributeErrors</code>\uff0cC\u200b\u4e2d\u200b\u7684\u200b<code>segmentation faults</code>\u3002</li> <li>Type inferred \u200b\u7c7b\u578b\u200b\u63a8\u65ad\u200b\uff1a\u200b\u7f16\u8bd1\u5668\u200b\u4f1a\u200b\u5bf9\u200b\u7c7b\u578b\u200b\u81ea\u52a8\u200b\u63a8\u65ad\u200b\uff0c\u200b\u5927\u90e8\u5206\u200b\u51fd\u6570\u200b\u90fd\u200b\u4e0d\u200b\u9700\u8981\u200b\u663e\u793a\u200b\u7ed9\u5b9a\u200b\u7c7b\u578b\u200b(\u200b\u4f46\u662f\u200b\u663e\u5f0f\u200b\u7ed9\u51fa\u200b\u5bf9\u200bdebug\u200b\u603b\u662f\u200b\u597d\u200b\u7684\u200b)\u3002</li> <li>Garbage-collected \u200b\u5783\u573e\u200b\u56de\u6536\u200b</li> <li>Compiled \u200b\u7f16\u8bd1\u200b\uff1a\u200b\u867d\u7136\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4ea4\u4e92\u5f0f\u200bghci\u200b\u6765\u200b\u5b9e\u65f6\u200b\u8fd0\u884c\u200b\uff0c\u200b\u4f46\u662f\u200bHaskell\u200b\u662f\u200b\u7f16\u8bd1\u8bed\u8a00\u200b\u3002</li> </ul>"},{"location":"Archive/Haskell/1%20%E7%AE%80%E4%BB%8B.html#haskell_1","title":"Haskell \u200b\u8bed\u8a00\u200b\u7279\u6027","text":"<ul> <li>\u200b\u9ad8\u9636\u200b\u51fd\u6570\u200b\uff1a \u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u4ee5\u200b\u9886\u57df\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\uff0c \u200b\u4f8b\u5982\u200b<code>map length [\"abc\",\"abcdef\"] = [length \"abc\",length \"abcdef\"] = [3,6]</code>\u3002</li> <li>\u200b\u533f\u540d\u200b\u51fd\u6570\u200b(aka lambdas)\uff1a \u200b\u53ef\u4ee5\u200b\u5b9a\u4e49\u200b\u5355\u6b21\u200b\u4f7f\u7528\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u4e0d\u7528\u200b\u8d77\u200b\u540d\u5b57\u200b<code>filter (\\x -&gt; length x &gt; 1) [\"abc\",\"d\",\"ef\"] =  [\"abc\",\"ef\"]</code>\u3002</li> <li>\u200b\u90e8\u5206\u200b\u5e94\u7528\u200b\uff1a \u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u5728\u200b\u67d0\u4e2a\u200b\u5df2\u6709\u200b\u7684\u200b\u51fd\u6570\u200b\u4e0a\u200b\uff0c\u200b\u7ed9\u5b9a\u200b\u90e8\u5206\u200b\u53c2\u6570\u200b\u7684\u200b\u65b9\u5f0f\u200b\u6765\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u51fd\u6570\u200b\u4e86\u200b\u3002\u200b\u4f8b\u5982\u200b<code>map (*3) [1,2,3]</code>\u200b\u4e2d\u200b\u7ed9\u5b9a\u200b\u4e86\u200b<code>*</code>\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b<code>3</code>\uff0c \u200b\u5176\u200b\u6548\u679c\u200b\u4e3a\u200b<code>[1*3,2*3,3*3]=[3,6,9]</code>\u3002</li> <li>\u200b\u4ee3\u6570\u200b\u6570\u636e\u7c7b\u578b\u200b\uff1a \u200b\u7b26\u5408\u200b\u6570\u636e\u7c7b\u578b\u200b\uff0c\u200b\u901a\u8fc7\u200b\u7ed3\u5408\u200b\u5176\u4ed6\u200b\u7c7b\u578b\u200b\u5f62\u6210\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5305\u542b\u200b\u4e0d\u540c\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u4f8b\u5982\u200b<code>data Shape = Point | Rectangle Double Double | Circle Double</code>\u3002</li> <li> <p>\u200b\u6a21\u5f0f\u5339\u914d\u200b\uff1a \u200b\u5b9a\u4e49\u200b\u51fd\u6570\u200b\u7684\u200b\u65f6\u5019\u200b\u53ef\u4ee5\u200b\u6839\u636e\u200b\u8f93\u5165\u200b\u53d8\u91cf\u200b\u7684\u200b\u4e0d\u540c\u200b\u60c5\u51b5\u200b\u8fdb\u884c\u200b\u5339\u914d\u200b\uff0c \u200b\u4f8b\u5982\u200b\u4ee5\u4e0b\u200b\u4ee3\u7801\u200b\u5206\u522b\u200b\u5339\u914d\u200b\u5230\u200b<code>Shape</code>\u200b\u7684\u200b\u4e0d\u540c\u200b\u60c5\u51b5\u200b</p> <pre><code>area Point = 0\narea (Rectangle width height) = width * height\narea (Circle radius) = 2 * pi * radius\n</code></pre> </li> <li> <p>\u200b\u5217\u8868\u200b\uff1a \u200b\u6709\u200b\u548c\u200bPython\u200b\u7c7b\u4f3c\u200b\u7684\u200b\u5217\u8868\u200b\u8868\u8fbe\u5f0f\u200b\uff0c\u200b\u4f8b\u5982\u200b\u7ec4\u5408\u200b\u51fa\u200b\u5947\u6570\u200b\u957f\u5ea6\u200b\u7684\u200b\u540d\u5b57\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u751f\u6210\u200b</p> <pre><code>[whole | first &lt;- [\"Eva\", \"Mike\"],\n     last &lt;- [\"Smith\", \"Wood\", \"Odd\"],\n     let whole = first ++ last,\n     even (length whole)]\n-- [\"EvaSmith\",\"EvaOdd\",\"MikeWood\"]\n</code></pre> <p>\u200b\u751f\u6210\u200b\u7d20\u6570\u200b\u5217\u8868\u200b\uff0c\u200b\u7531\u4e8e\u200bhaskell\u200b\u7684\u200blazy\u200b\u7279\u6027\u200b\uff0c\u200b\u56e0\u6b64\u200b\u53ef\u4ee5\u200b\u751f\u6210\u200b\u65e0\u9650\u200b\u5217\u8868\u200b\u3002</p> <pre><code>primes = [ n | n &lt;- [2..] , all (\\k -&gt; n `mod` k /= 0) [2..n `div` 2] ]\ntake 10 primes -- [2,3,5,7,11,13,17,19,23,29]\n</code></pre> </li> <li> <p>\u200b\u53c2\u6570\u200b\u5316\u200b\u7c7b\u578b\u200b\uff1a\u200b\u53ef\u4ee5\u200b\u5b9a\u4e49\u200b\u63a5\u53d7\u200b\u5176\u4ed6\u200b\u7c7b\u578b\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4f8b\u5982\u200b\u5217\u8868\u200b<code>[a]</code>\u200b\u53ef\u4ee5\u200b\u63a5\u53d7\u200b\u4efb\u4f55\u200b\u7c7b\u578b\u200b<code>a</code>\u200b\u4f5c\u4e3a\u200b\u8f93\u5165\u200b\uff0c\u200b\u5f62\u6210\u200b<code>[Int],[Bool]</code>\u200b\u7b49\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u5217\u8868\u200b\u3002</p> </li> <li>\u200b\u7c7b\u578b\u200b\u7c7b\u200bType classes\uff1a \u200b\u4e00\u79cd\u200b\u591a\u6001\u200b\uff0c\u200b\u6839\u636e\u200b\u53c2\u6570\u200b\u7684\u200b\u7c7b\u578b\u200b\u7ed9\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u4e00\u4e2a\u200b\u4e0d\u540c\u200b\u7684\u200b\u5b9e\u73b0\u200b\u3002\u200b\u5728\u200bclass\u200b\u4e2d\u200b\u8be6\u7ec6\u200b\u4ecb\u7ecd\u200b\u3002</li> </ul>"},{"location":"Archive/Haskell/1%20%E7%AE%80%E4%BB%8B.html#_3","title":"\u4ec0\u4e48\u200b\u662f\u200b\u51fd\u6570\u200b\u5f0f\u200b\u7a0b\u5e8f","text":"<p>\u200b\u5728\u200b\u51fd\u6570\u200b\u5f0f\u200b\u7a0b\u5e8f\u8bbe\u8ba1\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u901a\u8fc7\u200b\u8ba1\u7b97\u200b\u5305\u542b\u200b\u95ee\u9898\u200b\u9886\u57df\u200b\u51fd\u6570\u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\u4e4b\u503c\u200b\u6765\u200b\u89e3\u51b3\u95ee\u9898\u200b\u3002\u200b\u53ef\u4ee5\u200b\u628a\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u5f0f\u200b\u7a0b\u5e8f\u8bbe\u8ba1\u200b\u8bed\u8a00\u200b\u7684\u200b\u5b9e\u73b0\u200b\u770b\u4f5c\u200b\u4e0e\u200b\u8ba1\u7b97\u5668\u200b\u7c7b\u4f3c\u200b\u7684\u200b\u5de5\u5177\u200b\uff1a\u200b\u8f93\u5165\u200b\u4e00\u4e2a\u200b\u8868\u8fbe\u5f0f\u200b\uff0c\u200b\u7cfb\u7edf\u200b\u8ba1\u7b97\u200b\u51fa\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u503c\u200b\u3002\u200b\u7a0b\u5e8f\u5458\u200b\u7684\u200b\u4efb\u52a1\u200b\u662f\u200b\u7f16\u5199\u200b\u5c06\u200b\u95ee\u9898\u200b\u5efa\u6a21\u200b\u540e\u200b\u7684\u200b\u51fd\u6570\u200b\u3002</p> <p>!!! [note]     \u200b\u51fd\u6570\u200b\u7a0b\u5e8f\u200b = \u200b\u4e00\u7cfb\u5217\u200b\u51fd\u6570\u200b + \u200b\u503c\u200b\u7684\u200b\u5b9a\u4e49\u200b     \u200b\u5b9a\u4e49\u200b\uff1a \u200b\u5c06\u200b\u4e00\u4e2a\u200b\u540d\u79f0\u200b(name)\u200b\u548c\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b(type)\u200b\u7ed1\u5b9a\u200b\u3002     <code>Haskell         name :: type         name = expression</code></p>"},{"location":"Archive/Haskell/1%20%E7%AE%80%E4%BB%8B.html#haskell_2","title":"Haskell\u200b\u7a0b\u5e8f\u7ed3\u6784","text":"<pre><code>module Gold where           -- \u200b\u6a21\u5757\u200b\u58f0\u660e\u200b\n-- The golden ratio         -- \u200b\u6ce8\u91ca\u200b\u7b26\u53f7\u200b\nimport Data.List            -- \u200b\u6a21\u5757\u200b\u5bfc\u5165\u200b\n\nphi :: Double               -- \u200b\u53d8\u91cf\u200b\u7c7b\u578b\u200b\u6ce8\u89e3\u200b(aka\u200b\u7c7b\u578b\u200b\u7b7e\u540d\u200b,\u200b\u975e\u200b\u5fc5\u9700\u200b)\nphi = (sqrt 5 + 1) / 2      -- \u200b\u53d8\u91cf\u200b\u8d4b\u503c\u200b(\u200b\u5fc5\u9700\u200b)\n\npolynomial :: Double -&gt; Double  -- \u200b\u51fd\u6570\u200b\u7c7b\u578b\u200b\u6ce8\u89e3\u200b\npolynomial x = x^2 - x - 1      -- \u200b\u51fd\u6570\u200b\u7b49\u5f0f\u200b\n\nmain = do                   -- main\u200b\u51fd\u6570\u200b\u4f53\u200b\n  print (polynomial phi)    -- \u200b\u51fd\u6570\u8c03\u7528\u200b\n  print (f phi)\n</code></pre>"},{"location":"Archive/Haskell/1%20%E7%AE%80%E4%BB%8B.html#_4","title":"\u8868\u8fbe\u5f0f\u200b\u548c\u200b\u7c7b\u578b","text":"<p>Haskell\u200b\u7a0b\u5e8f\u200b\u4e2d\u200b\u51e0\u4e4e\u200b\u6240\u6709\u200b\u7684\u200b\u4e1c\u897f\u200b\u90fd\u200b\u662f\u200b\u8868\u8fbe\u5f0f\u200b\uff0c\u200b\u6ca1\u6709\u200b\u50cf\u200bPython\u3001Java\u200b\u6216\u200bC\u200b\u90a3\u6837\u200b\u7684\u200b\u8bed\u53e5\u200b\uff08\u200b\u8868\u8fbe\u5f0f\u200b = \u200b\u503c\u200b + \u200b\u7c7b\u578b\u200b\uff09\u3002\u200b\u6bd4\u5982\u200b\u4ee5\u4e0b\u200b\u7684\u200b\u4f8b\u5b50\u200b</p> \u200b\u8868\u8fbe\u5f0f\u200b \u200b\u7c7b\u578b\u200b \u200b\u503c\u200b True Bool True not True Bool False \"as\" ++ \"df\" [Char] \"asdf\" <p>\u200b\u53d8\u91cf\u200b\u7b7e\u540d\u200b\u578b\u200b\u5982\u200b<code>variable :: Type</code>\u3002\u200b\u867d\u7136\u200b\u88ab\u200b\u53eb\u505a\u200b\u53d8\u91cf\u200b\uff0c\u200b\u4f46\u200b\u5b9e\u9645\u4e0a\u200b\u5c31\u662f\u200b\u4e00\u4e2a\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u5b83\u200b\u7684\u200b\u503c\u200b\u662f\u200b\u4e0d\u80fd\u200b\u88ab\u200b\u6539\u53d8\u200b\u7684\u200b\u3002\u200b\u6216\u8005\u8bf4\u200bHaskell\u200b\u4e2d\u200b\u7684\u200b\u53d8\u91cf\u200b\u5b9e\u9645\u4e0a\u200b\u5c31\u662f\u200b\u6307\u660e\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u503c\u200b\u3002</p> <p>\u200b\u51fd\u6570\u200b\u7b7e\u540d\u200b\u578b\u200b\u5982\u200b<code>function :: Type1 -&gt; Type2 -&gt; ... -&gt; ReturnType</code>\uff0c\u200b\u5176\u4e2d\u200b\u6bcf\u4e2a\u200b<code>Type</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u8f93\u5165\u200b\u53c2\u6570\u200b\u7684\u200b\u7c7b\u578b\u200b(\u200b\u53ef\u4ee5\u200b\u6709\u200b\u591a\u4e2a\u200b)\uff0c\u200b\u800c\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b<code>ReturnType</code>\u200b\u5219\u200b\u662f\u200b\u8fd4\u56de\u503c\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002\u200b\u5b83\u4eec\u200b\u4e4b\u95f4\u200b\u5747\u200b\u4f7f\u7528\u200b<code>(-&gt;)</code>\u200b\u8fde\u63a5\u200b\uff0c\u200b\u8fd4\u56de\u503c\u200b\u53ea\u80fd\u200b\u6709\u200b\u4e00\u4e2a\u200b\u3002</p>"},{"location":"Archive/Haskell/1%20%E7%AE%80%E4%BB%8B.html#_5","title":"\u51fd\u6570\u8c03\u7528\u200b\u53ca\u200b\u8c03\u7528\u200b\u987a\u5e8f","text":"<p>\u200b\u6ca1\u6709\u200b\u7279\u6b8a\u200b\u8bed\u6cd5\u200b\uff0c\u200b\u628a\u200b\u53c2\u6570\u200b\u76f4\u63a5\u200b\u653e\u5728\u200b\u51fd\u6570\u200b\u540d\u200b\u4e4b\u540e\u200b\uff0c\u200b\u7a7a\u683c\u200b\u9694\u5f00\u200b\u3002</p> Haskell C++/Python f 1 f(1) f 1 2 f(1,2) <p>\u200b\u62ec\u53f7\u200b\u53ef\u4ee5\u200b\u7528\u6765\u200b\u7ec4\u5408\u200b\u8868\u8fbe\u5f0f\u200b\uff0c\u200b\u6ca1\u6709\u200b\u62ec\u53f7\u200b\u7684\u8bdd\u200b\u51fd\u6570\u200b\u4e5f\u200b\u4f1a\u200b\u88ab\u200b\u89c6\u4e3a\u200b\u53c2\u6570\u200b\u3002</p> Haskell C++/Python g h f 1 g(h,f,1) g h (f 1) g(h,f(1)) g (h f 1) g(h(f,1)) <p>\u200b\u51fd\u6570\u8c03\u7528\u200b\u7684\u200b\u7ed1\u5b9a\u200b\u6bd4\u200b\u8fd0\u7b97\u7b26\u200b\u66f4\u200b\u7d27\u200b\u3002</p> Haskell C++/Python a + b a + b f a + g b f(a) + g(b) f (a + g b) f(a+g(b)) <p>Note</p> <p>Haskell\u200b\u4e2d\u200b\u51fd\u6570\u200b\u5e94\u7528\u200b\u5411\u200b\u5de6\u200b\u8054\u7cfb\u200b\uff0c\u200b\u4e5f\u5c31\u662f\u8bf4\u200b<code>f g x y =  (((f g) x) y)</code></p>"},{"location":"Archive/Haskell/1%20%E7%AE%80%E4%BB%8B.html#_6","title":"\u5173\u4e8e\u200b\u7f29\u8fdb\u200b\u7684\u200b\u8bf4\u660e","text":"<p>Haskell\u200b\u4e2d\u200b\u7f29\u8fdb\u200b\u5f88\u200b\u91cd\u8981\u200b\uff0c\u200b\u4f46\u662f\u200b\u89c4\u5219\u200b\u6bd4\u8f83\u200b\u96be\u4ee5\u63cf\u8ff0\u200b\uff0c\u200b\u57fa\u672c\u4e0a\u200b\u6765\u8bf4\u200b\u53ea\u8981\u200b\u505a\u5230\u200b</p> <ol> <li>\u200b\u540c\u200b\u4e00\u7ec4\u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\u4ece\u200b\u540c\u4e00\u200b\u5217\u200b\u5f00\u59cb\u200b</li> <li>\u200b\u5982\u679c\u200b\u8868\u8fbe\u5f0f\u200b\u5fc5\u987b\u200b\u88ab\u200b\u5206\u6210\u200b\u591a\u884c\u200b\uff0c\u200b\u90a3\u4e48\u200b\u540e\u9762\u200b\u7684\u200b\u884c\u6570\u200b\u5e94\u8be5\u200b\u589e\u52a0\u200b\u7f29\u8fdb\u200b\u3002</li> </ol> <p>\u200b\u4e3e\u200b\u51e0\u4e2a\u200b\u6bd4\u8f83\u7b80\u5355\u200b\u7684\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u4ee5\u4e0b\u200b\u8fd9\u4e9b\u200b\u662f\u200b\u6b63\u786e\u200b\u8303\u4f8b\u200b</p> <pre><code>i x = let y = x+x+x+x+x+x in div y 5\n\n-- let and in are grouped together, an expression is split\nj x = let y = x+x+x\n              +x+x+x\n      in div y 5\n\n-- the definitions of a and b are grouped together\nk = a + b\n  where a = 1\n        b = 1\n\nl = a + b\n  where\n    a = 1\n    b = 1\n</code></pre> <p>\u200b\u800c\u200b\u4ee5\u4e0b\u200b\u5219\u200b\u65e0\u6cd5\u200b\u901a\u8fc7\u200b\u7f16\u8bd1\u200b</p> <pre><code>-- let..in\u200b\u88ab\u200b\u5206\u6210\u200b\u591a\u884c\u200b\uff0c\u200b\u4f46\u662f\u200b\u6ca1\u6709\u200b\u7f29\u8fdb\u200b\ni x = let y = x+x+x+x+x+x\nin div y 5\n\n-- y\u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\u88ab\u200b\u5206\u6210\u200b\u591a\u884c\u200b\uff0c\u200b\u4f46\u662f\u200b\u6ca1\u6709\u200b\u7f29\u8fdb\u200b\nj x = let y = x+x+x\n      +x+x+x\n      in div y 5\n\n-- where\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200ba\u200b\u548c\u200bb\u200b\u6ca1\u6709\u200b\u5bf9\u9f50\u200b\nk = a + b\n  where a = 1\n      b = 1\n\n-- \u200b\u53e6\u200b\u4e00\u79cd\u200b\u6ca1\u6709\u200b\u5bf9\u9f50\u200b\nl = a + b\n  where\n    a = 1\n     b = 1\n\n-- where\u200b\u672c\u8eab\u200b\u662f\u200bl = a+b\u200b\u7684\u200b\u4e00\u90e8\u5206\u200b\uff0c\u200b\u9700\u8981\u200b\u8fdb\u884c\u200b\u7f29\u8fdb\u200b\nl = a + b\nwhere\n  a = 1\n  b = 1\n</code></pre>"},{"location":"Archive/Haskell/11.%20IO.html","title":"IO","text":""},{"location":"Archive/Haskell/11.%20IO.html#1-io","title":"1 IO\u200b\u7684\u200b\u57fa\u672c\u200b\u4f7f\u7528","text":"<p>\u200b\u4e4b\u524d\u200b\u867d\u7136\u200b\u4e00\u76f4\u200b\u5728\u200b\u63d0\u5230\u200bpurity\u200b\u548c\u200bside effect\uff0c\u200b\u4f46\u662f\u200bHaskell\u200b\u5374\u662f\u200b\u4e00\u95e8\u200b\u5f88\u68d2\u200b\u7684\u200b\u6307\u4ee4\u200b\u5f0f\u200b\u7f16\u7a0b\u8bed\u8a00\u200b\u3002\u200b\u5f53\u200b\u4f7f\u7528\u200bIO\u200b\u64cd\u4f5c\u200b\u7684\u200b\u65f6\u5019\u200b\u53ea\u8981\u200b\u5c06\u200b\u8fd9\u4e9b\u200b\u64cd\u4f5c\u200b\u6309\u5e8f\u200b\u653e\u5728\u200b<code>do</code>\u200b\u5757\u200b\u4e2d\u200b\u3002</p> <pre><code>questionnaire = do\n  putStrLn \"Write something!\"\n  s &lt;- getLine\n  putStrLn (\"You wrote: \"++s)\n-- Prelude&gt; questionnaire\n-- Write something!\n-- Haskell!\n-- You wrote: Haskell!\n</code></pre> <p>\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4ece\u200b\u7f51\u7edc\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u8bfb\u53d6\u200b\uff0c\u200b\u4f8b\u5982\u200b\u4ee5\u4e0b\u200b\u7a0b\u5e8f\u200b\u901a\u8fc7\u200bHTTP\u200b\u534f\u8bae\u200b\u4ece\u200b\u67d0\u4e2a\u200bURL\u200b\u4e2d\u200b\u83b7\u53d6\u200b\u90e8\u5206\u200b\u5185\u5bb9\u200b\u5e76\u200b\u8fdb\u884c\u200b\u6253\u5370\u200b\u3002</p> <pre><code>import Network.HTTP\nimport Control.Monad\n\nmain = do\n  rsp &lt;- simpleHTTP (getRequest \"http://httpbin.org/base64/aGFza2VsbCBmb3IgZXZlcgo=\")\n  body &lt;- getResponseBody rsp\n  forM_ (words body) $ \\w -&gt; do\n     putStr \"word: \"\n     putStrLn w\n</code></pre>"},{"location":"Archive/Haskell/11.%20IO.html#11-io","title":"1.1 IO\u200b\u7c7b\u578b\u200b\u63a2\u7a76","text":"<p>\u200b\u4e24\u4e2a\u200b\u5e38\u7528\u200b\u7684\u200bIO\u200b\u51fd\u6570\u200b\u7c7b\u578b\u200b\u5982\u4e0b\u200b\u3002</p> <pre><code>Prelude&gt; :t putStrLn\nputStrLn :: String -&gt; IO ()\n\nPrelude&gt; :t getLine\ngetLine :: IO String\n</code></pre> <p>\u200b\u7c7b\u578b\u200b<code>IO a</code>\u200b\u7684\u200b\u503c\u200b\u662f\u200b\u4e00\u4e2a\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u5236\u9020\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\u4e3a\u200b<code>a</code>\u200b\u7684\u200b\u503c\u200b\u3002\u200b\u56e0\u6b64\u200b<code>getLine</code>\u200b\u5c31\u200b\u5236\u9020\u200b\u4e00\u4e2a\u200b<code>string</code>\u200b\u7684\u200bIO\u200b\u64cd\u4f5c\u200b\u3002\u200b\u800c\u200b<code>()</code>\u200b\u5219\u200b\u662f\u200b\u5355\u4f4d\u200b\u7c7b\u578b\u200b(unit type)\uff0c\u200b\u91cc\u9762\u200b\u53ea\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u503c\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b<code>()</code>\u200b\u672c\u8eab\u200b\u3002\u200b\u5b83\u200b\u6700\u5e38\u200b\u4f7f\u7528\u200b\u7684\u200b\u573a\u666f\u200b\u662f\u200b\u5728\u200bIO\u200b\u64cd\u4f5c\u200b\u4e0d\u200b\u8fd4\u56de\u200b\u4efb\u4f55\u200b\u503c\u200b\u7684\u200b\u65f6\u5019\u200b\u3002</p> <p><code>do</code>\u200b\u5757\u200b\u5b9e\u9645\u4e0a\u200b\u5141\u8bb8\u200b\u6211\u4eec\u200b\u6267\u884c\u200b\u4e00\u7cfb\u5217\u200b\u6709\u200b\u526f\u4f5c\u7528\u200b\u7684\u200b\u5e8f\u5217\u200b\uff0c\u200b\u7136\u540e\u200b\u6700\u540e\u200b\u5236\u9020\u200b\u51fa\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u503c\u200b\u3002</p> <pre><code>produceThree = do putStrLn \"1\"   -- \u200b\u6709\u200b\u526f\u4f5c\u7528\u200b\uff0c\u200b\u5236\u9020\u200b()\uff0c\u200b\u88ab\u200b\u5ffd\u7565\u200b\n                  return    2    -- \u200b\u6ca1\u6709\u200b\u526f\u4f5c\u7528\u200b\uff0c\u200b\u5236\u9020\u200b2\uff0c\u200b\u88ab\u200b\u5ffd\u7565\u200b\n                  getLine        -- \u200b\u6709\u200b\u526f\u4f5c\u7528\u200b\uff0c\u200b\u5236\u9020\u200b\u4e00\u4e2a\u200bString\uff0c\u200b\u88ab\u200b\u5ffd\u7565\u200b\n                  return    3    -- \u200b\u6ca1\u6709\u200b\u526f\u4f5c\u7528\u200b\uff0c\u200b\u5236\u9020\u200b3\uff0c\u200b\u88ab\u200b\u4f20\u9012\u200b\n</code></pre> <p>\u200b\u5728\u200b\u5199\u200b\u67d0\u4e2a\u200b\u5305\u542b\u200b<code>do</code>\u200b\u5757\u200b\u7684\u200b\u51fd\u6570\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u603b\u662f\u200b\u8fd4\u56de\u503c\u200b\u4fdd\u6301\u200b\u548c\u200b\u6700\u540e\u200b\u4e00\u884c\u200b\u7684\u200b\u7c7b\u578b\u200b\u76f8\u540c\u200b\u3002</p>"},{"location":"Archive/Haskell/11.%20IO.html#12","title":"1.2 \u200b\u7b80\u6613\u200b\u4f7f\u7528\u200b\u4f8b\u5b50","text":"<p>\u200b\u5728\u200b\u83b7\u53d6\u200b\u67d0\u4e2a\u200b\u8f93\u5165\u200b\u7684\u200b\u65f6\u5019\u200b\u7ecf\u5e38\u200b\u4f7f\u7528\u200b<code>getLine</code>\uff0c\u200b\u4f7f\u7528\u200b<code>&lt;-</code>\u200b\u64cd\u4f5c\u7b26\u200b\u6765\u200b\u6355\u6349\u200bIO\u200b\u64cd\u4f5c\u200b\u7684\u200b\u7ed3\u679c\u200b\u3002</p> <pre><code>  s &lt;- getLine  \n</code></pre> <p>\u200b\u5982\u679c\u200b\u9700\u8981\u200b\u7ed9\u200b\u64cd\u4f5c\u200b\u67d0\u4e9b\u200b\u53c2\u6570\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5199\u200b\u4e00\u4e2a\u200b\u76f4\u63a5\u200b\u8fd4\u56de\u200b\u8be5\u200b\u64cd\u4f5c\u200b\u7684\u200b\u51fd\u6570\u200b\u3002</p> <pre><code>ask :: String -&gt; IO String -- \u200b\u53c2\u6570\u200b\u4e3a\u200b\u4e00\u4e2a\u200bString\nask question = do\n  putStrLn question\n  getLine -- \u200b\u76f4\u63a5\u200b\u8fd4\u56de\u200bgetLine\n\nPrelude&gt; response &lt;- ask \"Who are you?\"  -- \u200b\u5c06\u200bask\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u547d\u540d\u200b\u4e3a\u200bresponse\nWho are you?                             -- ask\u200b\u4e2d\u200b\u7684\u200bputStrLn\nThe programmer.                          -- \u200b\u7528\u6237\u200b\u8f93\u5165\u200b\nPrelude&gt; response                        -- \u200b\u7528\u6237\u200b\u8f93\u5165\u200b\u7684\u200b\u503c\u200b\n\"The programmer.\"\nPrelude&gt; :t response                     -- response\u200b\u7684\u200b\u7c7b\u578b\u200b\u662f\u200bIO a\u200b\u4e2d\u200b\u7684\u200ba\nresponse :: String\nPrelude&gt; :t ask                          \nask :: String -&gt; IO String\nPrelude&gt; :t ask \"Who are you?\"           -- ask\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u548c\u200bgetLine\u200b\u76f8\u540c\u200b\nask \"Who are you?\" :: IO String\n</code></pre>"},{"location":"Archive/Haskell/11.%20IO.html#2-return","title":"2 \u200b\u5fae\u5999\u200b\u7684\u200b\u8fd4\u56de\u200b(return)","text":"<p><code>return</code>\u200b\u5728\u200b\u5176\u5b83\u200b\u8bed\u8a00\u200b\u91cc\u200b\u662f\u200b\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\uff0c\u200b\u4f46\u662f\u200b\u5728\u200bHaskell\u200b\u91cc\u200b\u662f\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u3002\u200b\u5b83\u200b\u63a5\u6536\u200b\u67d0\u4e2a\u200b\u7c7b\u578b\u200b\u4e3a\u200b<code>a</code>\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u5c06\u200b\u5176\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u503c\u200b\u3002</p> <pre><code>return :: a -&gt; IO a \n\n\nproduceThree :: IO Int  \nproduceThree = return 3 --\u200b\u63a5\u6536\u200bInt\uff0c\u200b\u8fd4\u56de\u200bIO Int \n\nprintThree :: IO ()\nprintThree = do\n  three &lt;- produceThree -- three\u200b\u4e3a\u200b\u8fd4\u56de\u200b\u7684\u200bInt\n  putStrLn (show three) -- putStrLn\u200b\u63a5\u6536\u200bString\n</code></pre> <p>\u200b\u7531\u4e8e\u200b\u8fd9\u4e2a\u200b\u51fd\u6570\u200b\u5236\u9020\u200b\u4e86\u200b\u67d0\u4e2a\u200bIO\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u628a\u200b\u67d0\u4e9b\u200b\u503c\u200b\u76f4\u63a5\u200b\u8fdb\u884c\u200b\u8f93\u51fa\u200b\u3002\u200b\u4f8b\u5982\u200b\u4ee5\u4e0b\u200b\u8fd9\u4e2a\u200b\u4f8b\u5b50\u200b\u5224\u65ad\u200b\u7528\u6237\u200b\u7684\u200b\u8f93\u5165\u200b\u662f\u5426\u662f\u200b\"Y\"\uff0c\u200b\u4e3a\u4e86\u200b\u80fd\u591f\u200b\u6267\u884c\u200b\u67d0\u4e2a\u200b\u8f93\u51fa\u200b\u64cd\u4f5c\u200b\u3002\u200b\u8fd9\u91cc\u200b<code>return</code>\u200b\u64cd\u4f5c\u200b\u8f93\u51fa\u200b\u7684\u200b\u76f4\u63a5\u200b\u662f\u200b\u4e00\u4e2a\u200b<code>Bool</code>\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>yesNoQuestion :: String -&gt; IO Bool\nyesNoQuestion question = do\n  putStrLn question\n  s &lt;- getLine\n  return (s == \"Y\")\n</code></pre> <p>Note</p> <p>\u200b\u548c\u200bC\u200b\u6216\u8005\u200bJava\u200b\u4e0d\u540c\u200b\uff0c<code>return</code>\u200b\u4e0d\u80fd\u200b\u4ee3\u8868\u200b\u7ec8\u6b62\u200b\u67d0\u4e2a\u200b\u51fd\u6570\u200b\u3002\u200b\u5728\u200b<code>do</code>\u200b\u5757\u200b\u4e2d\u200b\uff0c\u200b\u6700\u540e\u200b\u4e00\u884c\u200b\u51b3\u5b9a\u200b\u4e86\u200b\u6700\u540e\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u3002\u200b\u4f8b\u5982\u200b\u4ee5\u4e0b\u200b\u64cd\u4f5c\u200b\u8fd4\u56de\u200b2\u3002 <code>Haskell produceTwo :: IO Int produceTwo = do return 1                 return 2</code> \u200b\u53e6\u5916\u200b\u7531\u4e8e\u200b<code>return</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u603b\u662f\u200b\u8981\u200b\u8bb0\u5f97\u200b\u5199\u4e2a\u200b\u62ec\u53f7\u200b\u3002 <code>Haskell return (f x : xs) -- alternatively: return $ f x : xs</code></p>"},{"location":"Archive/Haskell/11.%20IO.html#3-do","title":"3. <code>do</code>\u200b\u5757\u200b\u548c\u200b\u7c7b\u578b","text":"<p>\u200b\u518d\u200b\u6df1\u5165\u200b\u770b\u200b\u4e00\u4e0b\u200b<code>do</code>\u200b\u5757\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002<code>do</code>\u200b\u5236\u9020\u200b\u4e00\u4e2a\u200b<code>IO a</code>\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6700\u540e\u200b\u4e00\u6761\u200b\u8bed\u53e5\u200b\u5fc5\u987b\u200b\u662f\u200b\u8fd9\u4e2a\u200b<code>IO a</code>\u3002</p> <pre><code>foo :: IO a \nfoo = do\n  ...\n  lastOp  -- IO a\n</code></pre> <p>\u200b\u5982\u679c\u200b\u662f\u200b\u4e00\u4e9b\u200b\u5e26\u6709\u200b\u53c2\u6570\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u6700\u540e\u200b\u4e00\u6761\u200b\u6307\u4ee4\u200b\u7684\u200b\u7c7b\u578b\u200b\u4e3a\u200b<code>b -&gt; IO a</code>\uff0c\u200b\u90a3\u4e48\u200b\u8fd9\u4e2a\u200b\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u5c31\u200b\u8be5\u662f\u200b<code>IO a</code>\u3002</p> <pre><code>foo :: typex -&gt; typey -&gt; IO a\nbar x y = do \n  ...\n  lastOp arg -- b -&gt; IO a, arg::a\n</code></pre> <p>\u200b\u5728\u200b\u4f7f\u7528\u200b<code>return</code>\u200b\u7684\u200b\u65f6\u5019\u200b\u4e5f\u200b\u4e00\u6837\u200b\uff0c\u200b\u548c\u200b\u6700\u540e\u200b\u4e00\u6761\u200b\u64cd\u4f5c\u200b\u7684\u200b\u7c7b\u578b\u200b\u5fc5\u987b\u200b\u76f8\u7b26\u5408\u200b\u3002</p> <pre><code>quux :: typea -&gt; IO a\nquux x = do\n  ...\n  return value  -- IO a,value :: a\n</code></pre> <p>Note</p> <p><code>do</code>\u200b\u7684\u200b\u7f29\u8fdb\u200b\u662f\u200b\u6709\u200b\u70b9\u5b50\u200b\u602a\u200b\u7684\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u91cd\u8981\u200b\u539f\u5219\u200b\u5c31\u662f\u200b <code>do</code>\u200b\u5757\u200b\u91cc\u200b\u7684\u200b\u4e1c\u897f\u200b\u8d77\u59cb\u200b\u5217\u200b\u5e94\u8be5\u200b\u76f8\u540c\u200b\u3002</p>"},{"location":"Archive/Haskell/11.%20IO.html#4","title":"4 \u200b\u63a7\u5236\u7ed3\u6784","text":"<p>\u200b\u4ee5\u4e0b\u200b\u7ed9\u51fa\u200b\u4e24\u4e2a\u200b\u65b0\u200b\u7684\u200b<code>IO</code>\u200b\u51fd\u6570\u200b\u3002</p> <pre><code>print :: Show a =&gt; a -&gt; IO ()   -- \u200b\u4f7f\u7528\u200bshow\u200b\u51fd\u6570\u200b\u8fdb\u884c\u200b\u6253\u5370\u200b\nreadLn :: Read a =&gt; IO a        -- \u200b\u5c06\u200b\u8bfb\u5165\u200b\u5185\u5bb9\u200b\u4f7f\u7528\u200bread\u200b\u8f6c\u6362\u200b\n</code></pre> <p>\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200bguards\u200b\u6216\u8005\u200bif-then-else\u200b\u5757\u200b\u8fdb\u884c\u200b\u7ed3\u6784\u200b\u63a7\u5236\u200b\u3002</p> <pre><code>printDescription :: Int -&gt; IO ()\nprintDescription n\n  | even n    = putStrLn \"even\"\n  | n==3      = putStrLn \"three\"\n  | otherwise = print n\n</code></pre> <p>\u200b\u540c\u6837\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u8fed\u4ee3\u200b\u7ed3\u6784\u200b\uff0c<code>readAndSum</code>\u200b\u8bfb\u5165\u200bn\u200b\u4e2a\u200b\u6570\u5b57\u200b\u6253\u5370\u200b\u4ed6\u4eec\u200b\u7684\u200b\u548c\u200b\u3002</p> <pre><code>readAndSum :: Int -&gt; IO Int\nreadAndSum 0 = return 0\nreadAndSum n = do\n  i &lt;- readLn            -- \u200b\u8bfb\u5165\u200b\u4e00\u4e2a\u200b\u6570\u5b57\u200b\n  s &lt;- readAndSum (n-1)  -- \u200b\u9012\u5f52\u200b:\u200b\u8bfb\u5165\u200b\u5e76\u7b97\u200b\u548c\u200b\n  return (i+s)           -- \u200b\u5236\u9020\u200b\u7ed3\u679c\u200b\n</code></pre> <p>\u200b\u53e6\u5916\u200b\u8fd8\u6709\u200b\u4ee5\u4e0b\u200b\u8fd9\u4e9b\u200bIO\u200b\u51fd\u6570\u200b\u3002</p> <pre><code>when :: Bool -&gt; IO () -&gt; IO () -- \u200b\u5f53\u200bb\u200b\u771f\u65f6\u200b\u6267\u884c\u200bop\nunless :: Bool -&gt; IO () -&gt; IO () -- \u200b\u5f53\u200bb\u200b\u5047\u65f6\u200b\u6267\u884c\u200bop\nreplicateM :: Int -&gt; IO a -&gt; IO [a] --\u200b\u91cd\u590d\u200bn\u200b\u6b21\u200b\uff0c\u200b\u6536\u96c6\u200b\u7ed3\u679c\u200b\nreplicateM_ :: Int -&gt; IO a -&gt; IO () --\u200b\u91cd\u590d\u200bn\u200b\u6b21\u200b\uff0c\u200b\u6254\u6389\u200b\u7ed3\u679c\u200b\nmapM :: (a -&gt; IO b) -&gt; [a] -&gt; IO [b] --\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u5217\u8868\u200b\u5143\u7d20\u200b\u6267\u884c\u200b\u64cd\u4f5c\u200b\nmapM_ :: (a -&gt; IO b) -&gt; [a] -&gt; IO () --\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u5217\u8868\u200b\u5143\u7d20\u200b\u6267\u884c\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u6254\u6389\u200b\u7ed3\u679c\u200b\nforM  :: [a] -&gt; (a -&gt; IO b) -&gt; IO [b] -- \u200b\u548c\u200bmapM\u200b\u4e00\u6837\u200b\uff0c\u200b\u987a\u5e8f\u200b\u6362\u6362\u200b\nforM_ :: [a] -&gt; (a -&gt; IO b) -&gt; IO ()\n</code></pre>"},{"location":"Archive/Haskell/11.%20IO.html#iopure","title":"IO\u200b\u5982\u4f55\u200bpure","text":"<p>\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b <code>putString :: String -&gt; IO()</code>\u200b\u8fd9\u6837\u200b\u8fd4\u56de\u200b\u67d0\u4e2a\u200b\u64cd\u4f5c\u200b\u7684\u200b\u51fd\u6570\u200b\u662f\u200bpure\u200b\u7684\u200b\uff0c\u200b\u6bcf\u5f53\u200b<code>putString x</code>\u200b\u4e2d\u200b\u7684\u200b<code>x</code>\u200b\u76f8\u540c\u200b\u65f6\u200b\uff0c\u200b\u7ed3\u679c\u200b\u603b\u662f\u200b\u76f8\u540c\u200b\u7684\u200b\u3002\u200b\u6362\u8a00\u4e4b\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u64cd\u4f5c\u200b\u5b9e\u9645\u4e0a\u200b\u5c31\u662f\u200b\u4e00\u7cfb\u5217\u200b\u526f\u4f5c\u7528\u200b\u7684\u200bpure\u200b\u63cf\u8ff0\u200b\uff0c\u200b\u800c\u200b\u53ea\u6709\u200b\u6267\u884c\u200b\u64cd\u4f5c\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u8fd9\u4e9b\u200b\u526f\u4f5c\u7528\u200b\u3002\u200b\u5f53\u200b\u4e00\u4e2a\u200bHaskell\u200b\u51fd\u6570\u200b\u5141\u8bb8\u200b\u7684\u200b\u4e4b\u540e\u200b\uff0c\u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\u64cd\u4f5c\u200b\u4f1a\u200b\u88ab\u200b\u6267\u884c\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b<code>main ::IO()</code>\uff0c\u200b\u5176\u4ed6\u200b\u7684\u200b\u64cd\u4f5c\u200b\u90fd\u200b\u662f\u200b\u88ab\u200b\u94fe\u63a5\u200b\u5230\u200b<code>main</code>\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u8fd0\u884c\u200b\u7684\u200b\u3002</p> <p>\u200b\u5728\u200bGHCi\u200b\u4e2d\u200b\uff0c\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u8868\u8fbe\u5f0f\u200b\u4ee3\u8868\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u64cd\u4f5c\u200b\uff0cGHCi\u200b\u5c06\u4f1a\u200b\u4e3b\u52a8\u200b\u6267\u884c\u200b\u8fd9\u4e2a\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u4f8b\u5982\u200b\u4ee5\u4e0b\u200b\u7684\u200b<code>print</code>\u3002</p> <pre><code>Prelude&gt; x = print 1   -- creates operation, doesn't run it\nPrelude&gt; x             -- runs the operation\n1\nPrelude&gt; x             -- runs it again!\n1\n</code></pre> <p>\u200b\u64cd\u4f5c\u200b\u5c31\u662f\u200b\u4e00\u4e2a\u200b\u503c\u200b\uff0c\u200b\u548c\u200b\u4efb\u4f55\u200b\u5176\u4ed6\u200b\u7684\u200b\u6570\u5b57\u200b\u3001\u200b\u5217\u8868\u200b\u3001\u200b\u51fd\u6570\u200b\u4e00\u6837\u200b\u3002\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u7528\u200b\u64cd\u4f5c\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\u3001\u200b\u8fd4\u56de\u503c\u200b\u7b49\u200b\u3002</p> <pre><code>choice :: IO x -&gt; IO x -&gt; IO x\nchoice a b =\n  do putStr \"a or b? \"\n     x &lt;- getLine\n     case x of \"a\" -&gt; a\n               \"b\" -&gt; b\n               _ -&gt; do putStrLn \"Wrong!\"\n                       choice a b\n\nPrelude&gt; choice (putStrLn \"A!!!!\") (putStrLn \"B!!!!\")\na or b? z\nWrong!\na or b? a\nA!!!!                       \n</code></pre>"},{"location":"Archive/Haskell/11.%20IO.html#ioref","title":"IORef","text":"<p>\u200b\u8fd8\u6709\u200b\u4e00\u4ef6\u200bHaskell\u200b\u505a\u200b\u4e0d\u5230\u200b\u7684\u200b\u4e8b\u60c5\u200b\u662f\u200b\u53ef\u53d8\u200b\u72b6\u6001\u200b\uff08mutable\uff09\u3002Pure\u200b\u51fd\u6570\u200b\u4e0d\u80fd\u200b\u8bfb\u53d6\u200b\u90a3\u4e9b\u200b\u53ef\u53d8\u200b\u72b6\u6001\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u8fd9\u6837\u7684\u8bdd\u200b\u4e24\u6b21\u200b\u8c03\u7528\u51fd\u6570\u200b\u5c06\u4f1a\u200b\u5f97\u5230\u200b\u4e0d\u200b\u4e00\u6837\u200b\u7684\u200b\u7ed3\u679c\u200b\u3002</p> <p>\u200b\u5728\u200bData.IORef\u200b\u6a21\u5757\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b<code>IORef</code>\u200b\u7c7b\u578b\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5bf9\u4e8e\u200b\u67d0\u4e2a\u200b\u7c7b\u578b\u200b\u4e3a\u200b<code>a</code>\u200b\u7684\u200b\u53ef\u53d8\u200b\u503c\u200b\u7684\u200b\u5f15\u7528\u200b\u3002</p> <pre><code>newIORef :: a -&gt; IO (IORef a)                -- \u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u503c\u200b\u7684\u200bIORef\nreadIORef :: IORef a -&gt; IO a                 -- \u200b\u5c06\u200b\u4e00\u4e2a\u200b\u5728\u200bIORef\u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\u53d6\u51fa\u200b\nwriteIORef :: IORef a -&gt; a -&gt; IO ()          -- \u200b\u8bbe\u7f6e\u200bIORef\u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\nmodifyIORef :: IORef a -&gt; (a -&gt; a) -&gt; IO ()  -- \u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u7eaf\u51c0\u200b\u7684\u200b\u65b9\u6cd5\u200b\u4fee\u6539\u200b\u5305\u542b\u200b\u5728\u200bIORef\u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\n</code></pre> <p>\u200b\u4ee5\u4e0b\u200b\u5c06\u200b\u7ed9\u51fa\u200b\u4e00\u4e9b\u200b\u4f7f\u7528\u200b<code>IORef</code>\u200b\u7684\u200b\u65b9\u6cd5\u200b</p> <pre><code>Prelude&gt; :m +Data.IORef -- \u200b\u5f15\u5165\u200bIORef\u200b\u6a21\u5757\u200b\nPrelude Data.IORef&gt; myRef &lt;- newIORef \"banana\" --\u200b\u521b\u5efa\u200b\u65b0\u200b\u7684\u200bIORef\uff0c\u200b\u503c\u4e3a\u200bbanana\nPrelude Data.IORef&gt; readIORef myRef  -- \u200b\u8bfb\u53d6\u200bmyRef\u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\n\"banana\"\nPrelude Data.IORef&gt; writeIORef myRef \"apple\" -- \u200b\u5c06\u200bapple\u200b\u5199\u5165\u200b\u5230\u200bmyRef\u200b\u4e2d\u200b\nPrelude Data.IORef&gt; readIORef myRef -- \u200b\u8bfb\u53d6\u200bmyRef\u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\n\"apple\"\nPrelude Data.IORef&gt; modifyIORef myRef reverse -- \u200b\u4fee\u6539\u200bmyRef\u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u4f20\u5165\u200b\u7684\u200b\u4fee\u6539\u200b\u51fd\u6570\u200b\u4e3a\u200b\u5012\u7f6e\u200b\nPrelude Data.IORef&gt; readIORef myRef\n\"elppa\"\n</code></pre> <p>Haskell\u200b\u7a0b\u5e8f\u200b\u8fd8\u662f\u200b\u66f4\u200b\u504f\u5411\u200b\u9012\u5f52\u200b\u3001\u200b\u53c2\u6570\u200b\u548c\u200b\u503c\u200b\u8bed\u4e49\u200b\u7684\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u51e0\u4e4e\u200b\u4e0d\u4f1a\u200b\u7528\u5230\u200b<code>IORef</code>\u3002\u200b\u4f46\u200b\u53ef\u80fd\u200b\u5f88\u200b\u5076\u5c14\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u8fd8\u662f\u200b\u8981\u200b\u7528\u200b\u3002</p>"},{"location":"Archive/Haskell/12.%20Functors.html","title":"Funtors \u200b\u51fd\u5b50","text":""},{"location":"Archive/Haskell/12.%20Functors.html#1","title":"1 \u200b\u51fd\u5b50\u200b\u4ecb\u7ecd","text":""},{"location":"Archive/Haskell/12.%20Functors.html#11","title":"1.1 \u200b\u4fdd\u6301\u200b\u7ed3\u6784","text":"<p>\u200b\u5728\u200bHaskell\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u7c7b\u578b\u200b\u591a\u6001\u200b\u7684\u200b\u51fd\u6570\u200b\u901a\u5e38\u200b\u662f\u200b\u80fd\u591f\u200b\u4fdd\u6301\u200b\u7ed3\u6784\u200b\u7684\u200b\uff0c\u200b\u6211\u4eec\u200b\u4ee5\u200b<code>map</code>\u200b\u6765\u200b\u4e3e\u4f8b\u200b\u3002\u200b\u5b83\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b<code>a</code>\u200b\u5230\u200b\u7c7b\u578b\u200b<code>b</code>\u200b\u7684\u200b\u8f6c\u6362\u200b\u51fd\u6570\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\u4e3a\u200b<code>a</code>\u200b\u7684\u200b\u5217\u8868\u200b\uff0c\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\u4e3a\u200b<code>b</code>\u200b\u7684\u200b\u5217\u8868\u200b\u3002</p> <pre><code>map :: (a -&gt; b) -&gt; [a] -&gt; [b]\nmap _ []     = []\nmap g (x:xs) = g x : map g xs\n</code></pre> <p>\u200b\u6211\u4eec\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u8bf4\u200b<code>map</code>\u200b\u5c06\u200b\u51fd\u6570\u200b<code>g :: a -&gt; b</code>\u200b\u8f6c\u6362\u6210\u200b\u6c49\u7eb3\u6811\u200b<code>map g :: [a] -&gt; [b]</code>\uff0c\u200b\u6362\u8a00\u4e4b\u200b<code>map</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5c06\u200b\u51fd\u6570\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u51fd\u6570\u200b\u7684\u200b\u9ad8\u9636\u200b\u51fd\u6570\u200b\u3002\u200b\u7531\u4e8e\u200b\u5b83\u200b\u63a5\u53d7\u200b\u7684\u200b\u7c7b\u578b\u200b\u662f\u200b\u6cdb\u578b\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5b83\u200b\u672c\u8eab\u200b\u4e0d\u4f1a\u200b\u51b3\u5b9a\u200b\u5b58\u50a8\u200b\u5728\u200b\u5217\u8868\u200b\u4e2d\u200b\u7684\u200b\u4e1c\u897f\u200b\u662f\u200b\u4ec0\u4e48\u200b\u7c7b\u578b\u200b\uff0c\u200b\u8fd9\u200b\u5b8c\u5168\u200b\u7531\u200b<code>g</code>\u200b\u6765\u200b\u51b3\u5b9a\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u7c7b\u578b\u200b\u4e3a\u200b<code>a-&gt;b</code>\u200b\u7684\u200b\u51fd\u6570\u200b\u5728\u200b\u4f7f\u7528\u200b<code>map</code>\u200b\u540e\u200b\u90fd\u200b\u4f1a\u200b\u88ab\u200b\u4ee5\u200b\u5b8c\u5168\u76f8\u540c\u200b\u7684\u200b\u903b\u8f91\u200b\u8f6c\u6362\u200b\u4e3a\u200b<code>[a] -&gt; [b]</code>\u200b\u7684\u200b\u51fd\u6570\u200b\u3002</p> <p>\u200b\u8fd9\u200b\u88ab\u200b\u79f0\u4e3a\u200b\u4fdd\u6301\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u5217\u8868\u200b\u7684\u200b\u7ed3\u6784\u200b\uff0c\u200b\u5217\u8868\u200b\u957f\u5ea6\u200b\u3001\u200b\u5143\u7d20\u200b\u76f8\u5bf9\u200b\u4f4d\u7f6e\u200b\u662f\u200b\u5b8c\u5168\u76f8\u540c\u200b\u7684\u200b\u3002</p>"},{"location":"Archive/Haskell/12.%20Functors.html#12-functor","title":"1.2 Functor \u200b\u7c7b\u65cf","text":"<p>\u200b\u5982\u679c\u200b\u6709\u200b\u4e0d\u540c\u200b\u7684\u200b\u7ed3\u6784\u200b\u4fdd\u6301\u200b\u6620\u5c04\u51fd\u6570\u200b\uff0c\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u7c7b\u65cf\u6765\u200b\u4fdd\u6301\u200b\u4ed6\u4eec\u200b\u7684\u200b\u76f8\u4f3c\u6027\u200b\u5462\u200b\uff1f</p> <pre><code>map      :: (a -&gt; b) -&gt;      [a] -&gt;      [b]\nmapMaybe :: (a -&gt; b) -&gt; Maybe a  -&gt; Maybe b\nmapTree  :: (a -&gt; b) -&gt; Tree  a  -&gt; Tree  b\n</code></pre> <p>\u200b\u4e4b\u524d\u200b\u63d0\u5230\u200b\u7684\u200b\u5e26\u200b\u7c7b\u578b\u200b\u53d8\u91cf\u200b\u7684\u200b\u7c7b\u65cf\u200b\u5f88\u200b\u96be\u200b\u505a\u5230\u200b\u8fd9\u200b\u4e00\u70b9\u200b\u3002\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u8bd5\u56fe\u200b\u5bf9\u200b<code>Maybe c</code>\u200b\u8fdb\u884c\u200b\u62bd\u8c61\u200b\uff0c\u200b\u6211\u4eec\u200b\u4f3c\u4e4e\u200b\u65e0\u6cd5\u200b\u4e3a\u200b<code>map</code>\u200b\u64cd\u4f5c\u200b\u5199\u51fa\u200b\u6b63\u786e\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u80fd\u591f\u200b\u4ee5\u200b\u67d0\u79cd\u200b\u65b9\u5f0f\u200b\u6539\u53d8\u200b\u7c7b\u578b\u200b\u53c2\u6570\u200b<code>c</code>\u3002</p> <pre><code>class Mappable m where\n  mapThing :: (a -&gt; b) -&gt; m -&gt; m\n\ninstance Mappable (Maybe c) where\n  mapThing :: (a -&gt; b) -&gt; Maybe c -&gt; Maybe c\n  mapThing = ...\n</code></pre> <p>\u200b\u597d\u200b\u5728\u200bHaskell\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u7c7b\u578b\u200b\u6784\u9020\u51fd\u6570\u200b\u6765\u200b\u4f5c\u4e3a\u200b\u7c7b\u65cf\u200b\u7684\u200b\u53c2\u6570\u200b\u3002\u200b\u6765\u770b\u200b\u4e00\u4e2a\u200b\u6807\u6ce8\u200b\u5e93\u4e2d\u200b\u7684\u200b\u4f8b\u5b50\u200b<code>Functor f</code>\u3002\u200b\u8fd9\u91cc\u200b\u4e0d\u7528\u200b\u4f20\u5165\u200b\u4e00\u4e2a\u200b<code>(Maybe a)</code>\u200b\u4f5c\u4e3a\u200b\u7c7b\u578b\u200b\u53d8\u91cf\u200b\uff0c\u200b\u800c\u662f\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u6784\u9020\u51fd\u6570\u200b<code>Maybe</code>\uff0c\u200b\u5c31\u200b\u5f97\u5230\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u5408\u9002\u200b\u7684\u200b\u7c7b\u65cf\u200b\uff01</p> <pre><code>class Functor f where\n  fmap :: (a -&gt; b) -&gt; f a -&gt; f b\n\ninstance Functor Maybe where\n  -- In this instance, the type of fmap is:\n  -- fmap :: (a -&gt; b) -&gt; Maybe a -&gt; Maybe b\n  fmap f Nothing = Nothing\n  fmap f (Just x) = Just (f x)\n</code></pre> <p>\u200b\u800c\u200b\u5bf9\u4e8e\u200b<code>map</code>\uff0c\u200b\u76f4\u63a5\u200b\u4f20\u200b\u5217\u8868\u200b\u7684\u200b\u6784\u9020\u51fd\u6570\u200b<code>[]</code>\u3002</p> <pre><code>instance Functor [] where\n  fmap = map\n</code></pre> <p>\u200b\u5982\u679c\u200b\u662f\u200b<code>Tree</code>\u200b\u7684\u8bdd\u200b\u4e5f\u200b\u7c7b\u4f3c\u200b\u7684\u200b\uff0c\u200b\u4f20\u5165\u200b\u6784\u9020\u51fd\u6570\u200b\uff0c\u200b\u7136\u540e\u200b\u5199\u200b<code>mapTree</code>\u200b\u7684\u200b\u903b\u8f91\u200b\u5c31\u884c\u200b\u3002</p> <pre><code>data Tree a = Leaf | Node a (Tree a) (Tree a)\n\ninstance Functor Tree where\n  fmap _ Leaf = Leaf\n  fmap f (Node val left right) = Node (f val) (fmap f left) (fmap f right)\n</code></pre> <p>Note</p> <p>Functor\u200b\u8fd9\u4e2a\u200b\u8bcd\u200b\u662f\u4ece\u200b\u8303\u7574\u200b\u8bba\u200b\uff08\u200b\u4ee5\u200b\u62bd\u8c61\u200b\u7684\u200b\u65b9\u6cd5\u200b\u6765\u200b\u5904\u7406\u200b\u6570\u5b66\u200b\u6982\u5ff5\u200b\uff0c\u200b\u5c06\u200b\u8fd9\u4e9b\u200b\u6982\u5ff5\u200b\u5f62\u5f0f\u200b\u5316\u6210\u200b\u4e00\u7ec4\u7ec4\u200b\u7684\u200b\u201c\u200b\u5bf9\u8c61\u200b\u201d\u200b\u53ca\u200b\u201c\u200b\u6001\u5c04\u200b\u201d\uff09\u200b\u91cc\u200b\u6765\u200b\u7684\u200b\u3002</p> <p>\u200b\u5f53\u6709\u200b\u4e00\u4e2a\u200b\u5b9e\u4f8b\u200b<code>Functor MyFun</code>\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u5c31\u200b\u53ef\u4ee5\u200b     1. \u200b\u5c06\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b<code>X</code>\u200b\u6620\u5c04\u200b\u5230\u200b\u65b0\u200b\u7684\u200b\u7c7b\u578b\u200b<code>MyFun</code>\uff08\u200b\u7531\u4e8e\u200b<code>MyFun</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6784\u9020\u51fd\u6570\u200b\uff09\u3002     2. \u200b\u5c06\u200b\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u4e3a\u200b<code>X</code>\u200b\u7684\u200b\u51fd\u6570\u200b<code>f</code>\u200b\u8f6c\u6362\u6210\u200b\u53c2\u6570\u200b\u4e3a\u200b<code>MyFun X</code>\u200b\u7684\u200b\u51fd\u6570\u200b<code>fmap f</code>\u3002 \u200b\u4e5f\u5c31\u662f\u8bf4\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e0d\u4ec5\u200b\u53ef\u4ee5\u200b\u4ece\u503c\u200b\u7684\u200b\u5c42\u9762\u200b\u4e0a\u200b\u505a\u200b\u6620\u5c04\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u7c7b\u578b\u200b\u7684\u200b\u5c42\u9762\u200b\u4e0a\u200b\u505a\u200b\u6620\u5c04\u200b\u3002</p> <p>Tip</p> <p>\u200b\u5982\u679c\u200b\u7ecf\u5e38\u200b\u4f7f\u7528\u200b<code>fmap</code> \u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4e2d\u7f00\u200b\u8868\u8fbe\u5f0f\u200b<code>&lt;$&gt;</code>\u3002 <code>Haskell (+1) &lt;$&gt; [1,2,3]    ==&gt;  [2,3,4] not &lt;$&gt; Just False  ==&gt;  Just True reverse . tail  $       \"hello\"       ==&gt;  \"olle\" reverse . tail &lt;$&gt; Just \"hello\"       ==&gt;  Just \"olle\" -- which is the same as fmap (reverse . tail) (Just \"hello\")  ==&gt;  Just \"olle\"</code></p>"},{"location":"Archive/Haskell/12.%20Functors.html#2","title":"2 \u200b\u5408\u6cd5\u200b\u5b9e\u4f8b","text":"<p><code>fmap</code>\u200b\u5b9e\u9645\u4e0a\u200b\u4e0d\u662f\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u51fd\u6570\u200b\u90fd\u200b\u80fd\u200b\u4fdd\u6301\u200b\u7ed3\u6784\u200b\u7684\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8981\u200b\u7279\u522b\u200b\u6ce8\u610f\u200b\u4f5c\u7528\u200b\u5728\u200b\u4ec0\u4e48\u200b\u51fd\u6570\u200b\u4e0a\u200b\u3002 \u200b\u4e4b\u524d\u200b\u6240\u8bf4\u200b\u7684\u200b\u201c\u200b\u4fdd\u6301\u200b\u7ed3\u6784\u200b\u201d\u200b\u5176\u5b9e\u200b\u5c31\u662f\u200b\u4ee5\u4e0b\u200b\u8fd9\u200b\u4e24\u6761\u200b\u51fd\u5b50\u200b\u89c4\u5219\u200b     1. <code>fmap id === id</code>     2. <code>fmap (f.g) === fmap f. fmap g</code> \u200b\u7b2c\u4e00\u6761\u200b\u89c4\u5219\u200b\u5c31\u662f\u200b\u51fd\u5b50\u200b\u5c06\u200b<code>id :: a -&gt; a</code>\u200b\u6620\u5c04\u200b\u5230\u200b<code>id :: f a -&gt; f a</code>\u3002\u200b\u4f8b\u5982\u200b\u4ee5\u4e0b\u200b<code>`famp id [1,2,3] = id [1,2,3] = [1,2,3]</code>\u3002\u200b\u6362\u8a00\u4e4b\u200b\uff0c\u200b\u5982\u679c\u200b<code>fmap</code>\u200b\u4f5c\u7528\u200b\u7684\u200b\u51fd\u6570\u200b\u662f\u200b\u6052\u7b49\u200b\uff0c\u200b\u90a3\u4e48\u200b\u7ed3\u679c\u200b\u4e5f\u200b\u662f\u200b\u6052\u7b49\u200b\u3002</p> <pre><code>fmap id [1,2,3] ==&gt; map id [1,2,3]\n                ==&gt; map id (1:[2,3])\n                ==&gt; id 1 : map id [2,3]\n                ==&gt; 1 : map id [2,3]\n                ==&gt; 1 : id 2 : map id [3]\n                ==&gt; 1 : 2 : id 3 : map id []\n                ==&gt; 1 : 2 : 3 : []\n                === [1,2,3]\n</code></pre> <p>\u200b\u800c\u200b\u5bf9\u4e8e\u200b\u7b2c\u4e8c\u6761\u200b\u89c4\u5219\u200b\uff0c\u200b\u8003\u8651\u200b<code>fmap negate.(*2)</code>\uff0c\u200b\u5bf9\u4e8e\u200b<code>(negate.(*2))</code>\u200b\u548c\u200b<code>(fmap negate . fmap (*2))</code>\u200b\u7684\u200b\u7ed3\u679c\u200b\u662f\u200b\u76f8\u540c\u200b\u7684\u200b\u3002\u200b\u7b2c\u4e8c\u6761\u200b\u89c4\u5219\u200b\u5b9e\u9645\u4e0a\u200b\u8bf4\u200b\u7684\u200b\u5c31\u662f\u200b\uff0c\u200b\u5148\u200b\u590d\u5408\u200b\u518d\u200b\u4f5c\u7528\u200b\uff0c\u200b\u548c\u200b\u5206\u522b\u200b\u4f5c\u7528\u200b\u518d\u200b\u7b26\u5408\u200b\u4f1a\u200b\u5f97\u5230\u200b\u76f8\u540c\u200b\u7684\u200b\u7ed3\u679c\u200b\u3002</p> <pre><code>fmap (negate.(*2)) [1,2,3] \n        ==&gt; map (negate.(*2)) [1,2,3]\n        ==&gt; (negate.(*2)) 1 : map (negate.(*2)) [2,3]\n        ==&gt; negate (1 * 2)  : map (negate.(*2)) [2,3]\n        ==&gt; -2 : map (negate.(*2)) [2,3]\n        ==&gt; -2 : (negate.(*2)) 2 : map (negate.(*2)) [3]\n        ==&gt; -2 : -4 : map (negate.(*2)) [3]\n        ==&gt; -2 : -4 : (negate.(*2)) 3 : map (negate.(*2)) []\n        ==&gt; -2 : -4 : -6 : []\n        ==&gt; [-2,-4,-6]\n\n(fmap negate . fmap (*2)) [1,2,3] \n        ==&gt; (map negate . map (*2)) [1,2,3]\n        ==&gt; map negate (map (*2) [1,2,3])\n        ==&gt; map negate [2,4,6]\n        ==&gt; [-2,-4,-6]\n</code></pre> <p>\u200b\u6765\u770b\u200b\u4e00\u4e2a\u200b\u4e0d\u200b\u80fd\u591f\u200b\u4fdd\u6301\u200b\u7ed3\u6784\u200b\u7684\u200b\u4f8b\u5b50\u200b\u3002\u200b\u4ee5\u4e0b\u200b\u7684\u200b<code>badMap</code>\u200b\u4e2d\u200b\uff0c\u200b\u5982\u679c\u200b\u5217\u8868\u200b\u957f\u5ea6\u200b\u957f\u4e8e\u200b2\uff0c\u200b\u5c06\u4f1a\u200b\u820d\u5f03\u200b\u6389\u200b\u7b2c\u4e8c\u4e2a\u200b\u5143\u7d20\u200b\u3002</p> <pre><code>badMap :: (a -&gt; b) -&gt; [a] -&gt; [b]\nbadMap f [] = []\nbadMap f (x:y:xs) = f x : badMap f xs\nbadMap f (x:xs) = f x : badMap f xs\n</code></pre> <p>\u200b\u5bf9\u4e8e\u200b<code>id</code>\u200b\u8fd0\u7b97\u200b\uff0c\u200b\u663e\u7136\u200b\u8fd9\u4e2a\u200b<code>badMap id \\= id</code>\u3002</p> <pre><code>badMap id [1,2,3] ==&gt; badMap id (1:2:[3])\n                  ==&gt; id 1 : badMap id [3]\n                  ==&gt; 1 : badMap id [3]\n                  ==&gt; 1 : badMap id (3:[])\n                  ==&gt; 1 : id 3 : badMap id []\n                  ==&gt; 1 : 3 : []\n                  ==&gt; [1,3]\n</code></pre> <p>Note</p> <p>Haskell\u200b\u7f16\u8bd1\u5668\u200b\u4e0d\u80fd\u200b\u5206\u8fa8\u200b\u51fd\u5b50\u200b\u662f\u5426\u200b\u9075\u5faa\u200b\u4e86\u200b\u4e0a\u9762\u200b\u7684\u200b\u89c4\u5219\u200b\uff01\u200b\u6709\u200b\u5176\u4ed6\u200b\u7684\u200b\u6280\u672f\u200bLiquidHaskell\u200b\u6216\u8005\u200b\u72ec\u7acb\u200b\u7c7b\u578b\u200b\u7684\u200b\u8bed\u8a00\u200b\u53ef\u80fd\u200b\u53ef\u4ee5\u200b\u5f3a\u5236\u200b\u5b9e\u65bd\u200b\u51fd\u5b50\u200b\u89c4\u5219\u200b\uff0c\u200b\u8fd9\u6837\u200b\u4ee5\u540e\u200b\u4e0d\u200b\u5408\u6cd5\u200b\u7684\u200b\u51fd\u5b50\u200b\u5c31\u200b\u4e0d\u4f1a\u200b\u88ab\u200b\u7f16\u8bd1\u200b\u3002</p>"},{"location":"Archive/Haskell/12.%20Functors.html#4-kinds","title":"4 Kinds","text":"<p><code>Functor</code>\u200b\u662f\u200b\u7c7b\u578b\u200b\u6784\u9020\u51fd\u6570\u200b\u7684\u200b\u7c7b\u65cf\u200b\uff0c\u200b\u5982\u679c\u200b\u5c1d\u8bd5\u200b\u7ed9\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\u6765\u200b\u5b9a\u4e49\u200b<code>Functor</code>\u200b\u5b9e\u4f8b\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5219\u200b\u4f1a\u200b\u62a5\u9519\u200b\u3002</p> <pre><code>Prelude&gt; instance Functor Int where\n\n&lt;interactive&gt;:1:18: error:\n    \u2022 Expected kind \u2018* -&gt; *\u2019, but \u2018Int\u2019 has kind \u2018*\u2019\n    \u2022 In the first argument of \u2018Functor\u2019, namely \u2018Int\u2019\n      In the instance declaration for \u2018Functor Int\u2019\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200b\u62a5\u9519\u200b\u6d88\u606f\u200b\u4e2d\u200b\u63d0\u5230\u200b\u4e86\u200bkinds\u3002Kinds\u200b\u5176\u5b9e\u200b\u5c31\u662f\u200b\u201c\u200b\u7c7b\u578b\u200b\u7684\u200b\u7c7b\u578b\u200b\u201d\uff08types of types\uff09\u3002\u200b\u7c7b\u578b\u200b\u662f\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b<code>Int, Bool, Maybe Int</code>\u200b\u8fd9\u6837\u200b\u53ef\u4ee5\u200b\u5305\u542b\u200b\u503c\u200b\u7684\u200b\u4e1c\u897f\u200b\uff0c\u200b\u4ed6\u4eec\u200b\u7684\u200bkind\u200b\u662f\u200b<code>*</code>\u3002\u200b\u800c\u200b\u7c7b\u578b\u200b\u6784\u9020\u51fd\u6570\u200b\u7684\u200bkind\u200b\u770b\u4e0a\u53bb\u200b\u548c\u200b\u51fd\u6570\u200b\u76f8\u540c\u200b\uff0c\u200b\u4f8b\u5982\u200b<code>Maybe</code>\u200b\u7684\u200bkind\u200b\u662f\u200b<code>*-&gt;*</code>\u3002</p> <pre><code>Int :: * -- type \nBool :: *\n() :: *\n[[Int]] :: *\n\n--data \n[] :: * -&gt; *\nMaybe :: * -&gt; *  -- type constructor\nEither :: * -&gt; * -&gt; *\n\n-- class\nNum :: * -&gt; Constraint\nEq :: * -&gt; Constraint\nOrd :: * -&gt; Constraint\nMonoid :: * -&gt; Constraint\nSemigroup :: * -&gt; Constraint\nFunctor :: (* -&gt; *) -&gt; Constraint\nFoldable :: (* -&gt; *) -&gt; Constraint\n</code></pre>"},{"location":"Archive/Haskell/12.%20Functors.html#5-foldable","title":"5 Foldable\u200b\u53ef\u6298\u53e0","text":"<p>\u200b\u5f88\u591a\u200b\u51fd\u6570\u200b\u7b7e\u540d\u200b\u4e2d\u200b\u90fd\u200b\u6709\u200b<code>Foldable</code>,\u200b\u5728\u200b\u4e0a\u9762\u200b\u6211\u4eec\u200b\u4e5f\u200b\u770b\u5230\u200b\u4e86\u200b\u5b83\u200b\u7684\u200bkind\u200b\u548c\u200bFunctor\u200b\u662f\u200b\u7c7b\u4f3c\u200b\u7684\u200b\uff0c\u200b\u63a5\u6536\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u7b7e\u540d\u200b\u3002\u200b\u5e38\u89c1\u200b\u7684\u200b\u6709\u200b<code>List, Map, Array</code>\u200b\u7b49\u200b\u3002</p> <pre><code>length :: Foldable t =&gt; t a -&gt; Int\nsum :: (Foldable t, Num a) =&gt; t a -&gt; a\nminimum :: (Foldable t, Ord a) =&gt; t a -&gt; a\nfoldMap :: (Foldable t, Monoid m) =&gt; (a -&gt; m) -&gt; t a -&gt; m\n</code></pre> <p><code>Foldable</code>\u200b\u7684\u200b\u6838\u5fc3\u200b\u5c31\u662f\u200b\u4e00\u7cfb\u5217\u200b\u53ef\u4ee5\u200b\u6298\u53e0\u200b\u7684\u200b\u7c7b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7b80\u5355\u200b\u5b9a\u4e49\u200b\u5982\u4e0b\u200b\u3002\u200b\u5f53\u200b\u6211\u4eec\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b<code>Foldable</code>\u200b\u7684\u200b\u5b9e\u4f8b\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u5b9a\u4e49\u200b<code>foldr</code>\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4e86\u200b\u3002</p> <pre><code>class Foldable (t :: *-&gt;*) where\n  foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; t a -&gt; b\n</code></pre> <p>\u200b\u53e6\u200b\u4e00\u79cd\u200b\u601d\u8003\u200b<code>Foldable</code>\u200b\u7684\u200b\u65b9\u5f0f\u200b\u662f\u200b\u4ece\u5de6\u5230\u53f3\u200b\u6765\u200b\u5904\u7406\u200b\u5143\u7d20\u200b\u3002\u200b\u6362\u8a00\u4e4b\u200b\uff0c\u200b\u5982\u679c\u200b<code>Functor</code>\u200b\u662f\u200b\u5bb9\u5668\u200b\u7684\u200b\u7c7b\u200b\uff0c<code>Foldable</code>\u200b\u5c31\u662f\u200b\u6709\u5e8f\u200b\u5bb9\u5668\u200b\u7684\u200b\u7c7b\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u7528\u200b\u4e00\u4e2a\u200b<code>Pair</code>\u200b\u7684\u200b\u4f8b\u5b50\u200b\u6765\u200b\u5b9e\u73b0\u200b<code>Foldable</code>\u200b\u548c\u200b<code>Functor</code>\u3002</p> <pre><code>data Pair a = Pair a a\n  deriving Show\n\ninstance Functor Pair where\n  -- fmap f \u200b\u5c06\u200b f \u200b\u5e94\u7528\u200b\u5230\u200b\u6240\u6709\u200b\u503c\u4e0a\u200b\n  fmap f (Pair x y) = Pair (f x) (f y)\n\ninstance Foldable Pair where\n  -- \u200b\u5c31\u200b\u50cf\u662f\u200b\u5c06\u200bfoldr\u200b\u5e94\u7528\u200b\u5230\u200b\u4e00\u4e2a\u200b\u957f\u5ea6\u200b\u4e3a\u200b2\u200b\u7684\u200b\u5217\u8868\u200b\u4e0a\u200b\n  foldr f initialValue (Pair x y) = f x (f y initialValue)\n\n-- \u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u4f7f\u7528\u200b\u5230\u200b\u4e86\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u5b9e\u4f8b\u200b\u7684\u200b\u4f8b\u5b50\u200b\ndoubleAndCount :: (Functor f, Foldable f) =&gt; f Int -&gt; Int\ndoubleAndCount = sum . fmap (*2)\n</code></pre> <p>\u200b\u5728\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u4e4b\u540e\u200b\uff0c\u200b\u51e0\u4e4e\u200b\u4efb\u4f55\u200b<code>list</code>\u200b\u53ef\u4ee5\u200b\u7528\u200b\u7684\u200b\u51fd\u6570\u200b\u5b83\u200b\u90fd\u200b\u80fd\u200b\u7528\u200b\u3002</p> <pre><code>fmap (+1) (Pair 3 6)   ==&gt; Pair 4 7\nfmap (+1) [3,6]        ==&gt; [4,7]\n\nfoldr (*) 1 (Pair 3 6) ==&gt; 18\nfoldr (*) 1 [3,6]      ==&gt; 18\n\nlength (Pair 3 6)      ==&gt; 2\nlength [3,6]           ==&gt; 2\n\nminimum (Pair 3 6)     ==&gt; 3\nminimum [3,6]          ==&gt; 3\n\ndoubleAndCount (Pair 3 6)  ==&gt; 18\ndoubleAndCount [3,6]       ==&gt; 18\n</code></pre>"},{"location":"Archive/Haskell/13.%20Monads.html","title":"Monad","text":"<p><code>Monad</code>\u200b\u548c\u200b<code>Functor</code>\u200b\u4e00\u6837\u200b\u90fd\u200b\u6765\u6e90\u4e8e\u200b\u8303\u7574\u200b\u8bba\u200b\uff0c\u200b\u8fd9\u7ae0\u200b\u4e2d\u5c06\u200b\u4f1a\u200b\u4f7f\u7528\u200b\u4f8b\u5b50\u200b\u7684\u200b\u5f62\u5f0f\u200b\u8fdb\u884c\u200b\u9010\u6b65\u200b\u8bb2\u89e3\u200b\u3002</p>"},{"location":"Archive/Haskell/13.%20Monads.html#1","title":"1 \u200b\u4ece\u200b\u4f8b\u5b50\u200b\u5165\u624b","text":""},{"location":"Archive/Haskell/13.%20Monads.html#11-example-1-maybes","title":"1.1 Example 1: Maybes","text":"<p>\u200b\u5f53\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b<code>Maybe</code>\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u4ee3\u7801\u200b\u6709\u70b9\u200b\u4e71\u7cdf\u7cdf\u200b\u7684\u200b\u3002\u200b\u770b\u200b\u4e00\u4e2a\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u9996\u5148\u200b\u628a\u200b\u67d0\u4e2a\u200b\u51fd\u6570\u200b\u8fd4\u56de\u200b\u7684\u200b<code>Maybe String</code>\u200b\u8054\u5408\u200b\u8d77\u6765\u200b\u3002\u200b\u5f53\u5199\u200b\u5230\u200b\u5806\u53e0\u200b\u7684\u200b<code>case</code>\u200b\u76f8\u5173\u200b\u7684\u200b\u5730\u65b9\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u4ee3\u7801\u200b\u770b\u8d77\u6765\u200b\u5c31\u200b\u5f88\u200b\u7cdf\u7cd5\u200b\u3002</p> <pre><code>-- \u200b\u5c1d\u8bd5\u200b\u901a\u8fc7\u200b\u67d0\u4e2a\u200b\u5bc6\u7801\u200b\u767b\u5f55\u200b\n-- `Just username` \u200b\u4ee3\u8868\u200b\u6210\u529f\u200b, `Nothing` \u200b\u5219\u200b\u662f\u200b\u5931\u8d25\u200b.\nlogin :: String -&gt; Maybe String\nlogin \"f4bulous!\" = Just \"unicorn73\"\nlogin \"swordfish\" = Just \"megahacker\"\nlogin _           = Nothing\n\n-- \u200b\u4ece\u200b\u4e00\u4e2a\u200b\u7528\u6237\u200b\u90a3\u91cc\u200b\u83b7\u5f97\u200b\u76f8\u5173\u8054\u200b\u7684\u200bsecret\n-- \u200b\u4e0d\u662f\u200b\u6240\u6709\u200b\u7684\u200b\u7528\u6237\u200b\u90fd\u200b\u6709\u200bsecret\nsecret :: String -&gt; Maybe String\nsecret \"megahacker\" = Just \"I like roses\"\nsecret _            = Nothing\n\n-- \u200b\u5982\u679c\u200b\u6709\u200b\u80fd\u591f\u200b\u5339\u914d\u200b\u7684\u200b\u5bc6\u7801\u200b\uff0c\u200b\u5219\u200b\u767b\u5f55\u200b\u5e76\u200b\u8fd4\u56de\u200b\u7528\u6237\u200b\u7684\u200bsecret\nstealSecret :: String -&gt; Maybe String\nstealSecret password =\n  case login password of --\u200b\u8fd9\u91cc\u200b\u5c31\u662f\u200b\u975e\u5e38\u200bmessy\u200b\u7684\u200b\u4ee3\u7801\u200b\n    Nothing -&gt; Nothing\n    Just user -&gt; case secret user of\n                   Nothing -&gt; Nothing\n                   Just s -&gt; Just (\"Stole secret: \"++s)\n</code></pre> <p>\u200b\u63a5\u4e0b\u6765\u200b\u6211\u4eec\u200b\u5c1d\u8bd5\u200b\u4fee\u6539\u200b\u4e00\u4e2a\u200b<code>pair</code>\u200b\u5217\u8868\u200b\uff0c\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u8fd4\u56de\u200b<code>Maybe</code>\u200b\u7684\u200b\u5e93\u51fd\u6570\u200b<code>lookup :: (Eq a) =&gt; a -&gt; [(a, b)] -&gt; Maybe b</code>\u3002\u200b\u8be5\u200b\u51fd\u6570\u200b\u6839\u636e\u200b<code>key</code>\u200b\u5bfb\u627e\u200b<code>value</code>\uff0c\u200b\u6210\u529f\u200b\u5219\u200b\u8fd4\u56de\u200b<code>Just value</code>\uff0c\u200b\u5426\u5219\u200b<code>Nothing</code>\u3002\u200b\u8fd9\u91cc\u200b\u4f7f\u7528\u200b<code>case</code>\u200b\u5d4c\u5957\u200b<code>if-then-else</code>\u3002</p> <pre><code>-- \u200b\u5f53\u200bval\u200b\u6bd4\u200b\u73b0\u6709\u200bvalue\u200b\u5927\u200b\u7684\u200b\u65f6\u5019\u200b\u8fdb\u884c\u200b\u91cd\u65b0\u200b\u8bbe\u7f6e\u200b\nincrease :: Eq a =&gt; a -&gt; Int -&gt; [(a,Int)] -&gt; Maybe [(a,Int)]\nincrease key val assocs =\n  case lookup key assocs  -- \u200b\u8fd9\u91cc\u200b\u5f00\u59cb\u200b\u7c7b\u578b\u200b\u5224\u65ad\u200b\u7684\u200b\u8fed\u4ee3\u200b\uff0cmessy\n  of Nothing -&gt; Nothing\n     Just x -&gt; if (val &lt; x)\n                then Nothing\n                else Just ((key,val) : delete (key,x) assocs)\n</code></pre> <p>\u200b\u8fd9\u79cd\u200b\u4ee3\u7801\u200b\u6a21\u5f0f\u200b\u662f\u200b\u5f88\u200b\u5e38\u89c1\u200b\u7684\u200b\uff0c\u200b\u5e76\u4e14\u200b\u91cd\u590d\u200b\u76f8\u4f3c\u200b\u7684\u200b\u903b\u8f91\u200b\uff1a\u200b\u5982\u679c\u200b\u4efb\u4f55\u200b\u5907\u9009\u200b\u7ed3\u679c\u200b\u662f\u200b<code>Nothing</code>\uff0c\u200b\u90a3\u4e48\u200b\u6574\u4e2a\u200b\u7ed3\u679c\u200b\u90fd\u200b\u662f\u200b<code>Nothing</code>\u3002\u200b\u6211\u4eec\u200b\u4ecb\u7ecd\u200b\u4e00\u4e2a\u200b\u6027\u200b\u7684\u200b\u8fd0\u7b97\u7b26\u200b\uff1a\u200b\u7ed1\u5b9a\u200b\u8fd0\u7b97\u7b26\u200b<code>(?&gt;)</code>\u3002<code>(?&gt;)</code>\u200b\u9047\u5230\u200b<code>Nothing</code>\u200b\u5219\u200b\u7ec8\u6b62\u200b\uff0c\u200b\u5426\u5219\u200b\u63a5\u7740\u200b\u8dd1\u200b\u4e0b\u200b\u4e00\u6b65\u200b\u3002</p> <pre><code>(?&gt;) :: Maybe a -&gt; (a -&gt; Maybe b) -&gt; Maybe b\n-- \u200b\u5982\u679c\u200b\u5931\u8d25\u200b\u4e86\u200b\uff0c\u200b\u90a3\u4e48\u200b\u6c38\u8fdc\u200b\u4e0d\u200b\u8fd0\u884c\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u9636\u6bb5\u200b\nNothing ?&gt; _ = Nothing\n-- \u200b\u5426\u5219\u200b\u8dd1\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u9636\u6bb5\u200b\nJust x  ?&gt; f = f x\n</code></pre> <p>\u200b\u7ed1\u5b9a\u200b\u8fd0\u7b97\u7b26\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4f7f\u200b\u4e4b\u524d\u200b\u7684\u200b\u4f8b\u5b50\u200b\u6d41\u7ebf\u200b\u5316\u200b\u3002</p> <pre><code>stealSecret :: String -&gt; Maybe String\nstealSecret password =\n    login password ?&gt; -- login passward\u200b\u662f\u200bJust\u200b\u5417\u200b\uff1f\u200b\u8fd4\u56de\u200b\u7528\u6237\u540d\u200b(String)\n    secret ?&gt;  -- secret username\u200b\u6709\u200b\u5bf9\u5e94\u200b\u5417\u200b\uff1f\u200b\u8fd4\u56de\u200bJust secret(String)\n    decorate   -- \n  where decorate s = Just (\"Stole secret: \"++s)\n</code></pre> <p>Note</p> <p><code>(?&gt;)</code>\u200b\u603b\u662f\u200b\u5411\u200b\u5de6\u200b\u7ed1\u5b9a\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b<code>op ?&gt; f ?&gt; g = (op ?&gt; f) ?&gt; g</code>\uff0c\u200b\u800c\u200b<code>op ?&gt; (f ?&gt; g)</code>\u200b\u751a\u81f3\u200b\u4e0d\u4f1a\u200b\u88ab\u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b\u3002</p>"},{"location":"Archive/Haskell/13.%20Monads.html#12-example-2-logging","title":"1.2 Example 2: Logging","text":"<p>\u200b\u6211\u4eec\u200b\u8fdb\u5165\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u4f8b\u5b50\u200b<code>logging</code>\u3002\u200b\u7c7b\u578b\u200b<code>Logger</code>\u200b\u8868\u793a\u200b\u4e00\u4e2a\u200b\u503c\u200b\u548c\u200b\u4e00\u4e2a\u200blog\u200b\u4fe1\u606f\u200b\u7684\u200b\u5217\u8868\u200b\uff08\u200b\u5b58\u50a8\u200b\u8ba1\u7b97\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u4ea7\u751f\u200b\u7684\u200b\u503c\u200b\uff09\u3002</p> <pre><code>-- Logger = [log] + val\ndata Logger a = Logger [String] a  deriving Show\n\ngetVal :: Logger a -&gt; a \ngetVal (Logger _ a) = a\ngetLog :: Logger a -&gt; [String]\ngetLog (Logger s _) = s\n\n-- \u200b\u521d\u59cb\u5316\u200b\u64cd\u4f5c\u200b:\nnomsg :: a -&gt; Logger a\nnomsg x = Logger [] x        -- \u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\u503c\u200b\uff0c\u200b\u6ca1\u6709\u200bmsg\n\nannotate :: String -&gt; a -&gt; Logger a\nannotate s x = Logger [s] x  -- \u200b\u6709\u200b\u4e00\u4e2a\u200b\u503c\u200b\u548c\u200b\u4e00\u4e2a\u200bmsg\n\nmsg :: String -&gt; Logger ()\nmsg s = Logger [s] ()        -- \u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200bmsg\n</code></pre> <p>\u200b\u73b0\u5728\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b<code>login</code>\u200b\u51fd\u6570\u200b\u6765\u200b\u8bb0\u5f55\u200b\u4e0d\u540c\u200b\u7528\u6237\u540d\u200b\uff0c\u200b\u548c\u200b\u4ed6\u4eec\u200b\u88ab\u200b\u5c1d\u8bd5\u200b\u767b\u5f55\u200b\u7684\u200b\u5bc6\u7801\u200b\u3002</p> <pre><code>-- \u200b\u5224\u65ad\u200b\u7528\u6237\u200b\u662f\u5426\u200b\u5b58\u5728\u200b\uff0c\u200b\u8fd4\u56de\u200bLogger Bool\u200b\u7c7b\u578b\u200b\nvalidateUser :: String -&gt; Logger Bool\nvalidateUser \"paul.atreides\" = annotate \"Valid user\" True\nvalidateUser \"ninja\" = nomsg True\nvalidateUser u = annotate (\"Invalid user: \"++u) False\n\n-- \u200b\u5224\u65ad\u200b\u5bc6\u7801\u200b\u662f\u5426\u200b\u6b63\u786e\u200b\uff0c\u200b\u8fd4\u56de\u200bLogger Bool\u200b\u7c7b\u578b\u200b\ncheckPassword :: String -&gt; String -&gt; Logger Bool\ncheckPassword \"paul.atreides\" \"muad'dib\" = annotate \"Password ok\" True\ncheckPassword \"ninja\"         \"\"         = annotate \"Password ok\" True\ncheckPassword _               pass       = annotate (\"Password wrong: \"++pass) False\n\nlogin :: String -&gt; String -&gt; Logger Bool\nlogin user password =\n  let validation = validateUser user\n  in if (getVal validation) -- \u200b\u901a\u8fc7\u200blogger\u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\u8fdb\u884c\u200b\u5224\u65ad\u200b\n       then let check = checkPassword user password\n            in Logger (getLog validation ++ getLog check) (getVal check) -- \u200b\u589e\u52a0\u200blog\u200b\u8bb0\u5f55\u200b\n       else validation \n</code></pre> <p>\u200b\u62bd\u8c61\u200b\u4e00\u4e0b\u200b\u8fd9\u91cc\u200b\u7684\u200b\u6a21\u5f0f\u200b\uff1a\u200b\u8fd0\u884c\u200b\u4e24\u4e2a\u200b\u51fd\u6570\u200b\u540e\u200b\u5206\u522b\u200b\u5f97\u5230\u200b\u4e24\u4e2a\u200b<code>Logger Bool</code>\u200b\u7c7b\u578b\u200b\uff0c\u200b\u83b7\u53d6\u200b\u4ed6\u4eec\u200b\u4e2d\u200b\u7684\u200b<code>msg</code>\u200b\u8fdb\u884c\u200b\u62fc\u63a5\u200b\uff0c\u200b\u800c\u200b<code>val</code>\u200b\u5219\u200b\u91c7\u7528\u200b\u540e\u9762\u200b\u90a3\u4e2a\u200b\u7684\u200b\u503c\u200b\u3002</p> <pre><code>(#&gt;) :: Logger a -&gt; (a -&gt; Logger b) -&gt; Logger b\nLogger la a #&gt; f = let Logger lb b = f a  -- \u200b\u628a\u200b\u5de6\u8fb9\u200bLogger\u200b\u91cc\u200b\u7684\u200bval\u200b\u76f4\u63a5\u200b\u5582\u7ed9\u200b\u53f3\u8fb9\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u5f97\u5230\u200bLogger lb b\n                   in Logger (la++lb) b   -- \u200b\u5c06\u200b\u4e24\u8fb9\u200b\u7684\u200b\u4fe1\u606f\u200b\u90e8\u5206\u200b\u8fdb\u884c\u200b\u62fc\u63a5\u200b\n</code></pre> <p>\u200b\u90a3\u4e48\u200b\u73b0\u5728\u200b\u6211\u4eec\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>(#&gt;)</code>\u200b\u8fd0\u7b97\u7b26\u200b\u6765\u200b\u4fee\u6539\u200b<code>login</code>\u200b\u51fd\u6570\u200b\u4e86\u200b\u3002</p> <pre><code>login :: String -&gt; String -&gt; Logger Bool\nlogin user password =\n  validateUser user -- \u200b\u5f97\u5230\u200b\u7b2c\u4e00\u4e2a\u200bLogger Bool \n  #&gt;\n  \\valid -&gt; if valid then checkPassword user password\n                     else nomsg False\n  -- \u200b\u4f7f\u7528\u200blambda\u200b\u8868\u8fbe\u5f0f\u200b\uff0cif-then-else\u200b\u548c\u200b\u4e0a\u9762\u200b\u7684\u200b\u51fd\u6570\u200b\u76f8\u5bf9\u200b\u5e94\u200b\u3002\n</code></pre> <p>\u200b\u6211\u4eec\u200b\u518d\u200b\u770b\u200b\u4e00\u70b9\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u5b9a\u4e49\u200b\u4e00\u4e9b\u200b\u8ba1\u7b97\u200b\u51fd\u6570\u200b\u7684\u200b\u6253\u5370\u200b\u65b9\u7a0b\u200b\uff0c\u200b\u7136\u540e\u200b\u5728\u200b<code>compute</code>\u200b\u51fd\u6570\u200b\u4e2d\u200b\u4f7f\u7528\u200b<code>(#&gt;)</code>\u200b\u6765\u200b\u8fdb\u884c\u200b\u7ed1\u5b9a\u200b\u3002</p> <pre><code>-- square a number and log a message about it\nsquare :: Int -&gt; Logger Int\nsquare val = annotate (show val ++ \"^2\") (val^2)\n\n-- add 1 to a number and log a message about it\nadd :: Int -&gt; Logger Int\nadd val = annotate (show val ++ \"+1\") (val+1)\n\n-- double a number and log a message about it\ndouble :: Int -&gt; Logger Int\ndouble val = annotate (show val ++ \"*2\") (val*2)\n\n-- compute the expression 2*(x^2+1) with logging\ncompute :: Int -&gt; Logger Int\ncompute x =\n    square x \n    #&gt; add\n    #&gt; double\ncompute 3\n  ==&gt; Logger [\"3^2\",\"9+1\",\"10*2\"] 20\n</code></pre> <p>\u200b\u90a3\u200b\u5982\u679c\u200b\u8981\u200b\u5728\u200b\u9012\u5f52\u200b\u5217\u8868\u200b\u51fd\u6570\u200b\u4e2d\u200b\u4f7f\u7528\u200b<code>Logger</code>\u200b\u5462\u200b\uff1f\u200b\u6211\u4eec\u200b\u91cd\u65b0\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u8fd0\u7b97\u7b26\u200b\uff0c\u200b\u4ee5\u200b\u4e0d\u540c\u200b\u7684\u200b\u65b9\u5f0f\u200b\u5bf9\u200b<code>Logger</code>\u200b\u8fdb\u884c\u200b\u7ed1\u5b9a\u200b\u3002</p> <pre><code>-- \u200b\u4e0d\u200b\u9700\u8981\u200b\u5de6\u8fb9\u200blogger\u200b\u7684\u200bval\uff0c\u200b\u76f4\u63a5\u200b\u4e22\u6389\u200b\n(##&gt;) :: Logger a -&gt; Logger b -&gt; Logger b\nLogger la _ ##&gt; Logger lb b = Logger (la++lb) b\n</code></pre> <p>\u200b\u73b0\u5728\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b<code>filter</code>\u200b\u51fd\u6570\u200b\u7684\u200b<code>log</code>\u200b\u7248\u672c\u200b\u3002</p> <pre><code>filterLog :: (Eq a, Show a) =&gt; (a -&gt; Bool) -&gt; [a] -&gt; Logger [a]\nfilterLog f [] = nomsg []\nfilterLog f (x:xs)\n    -- \u200b\u6ee1\u8db3\u6761\u4ef6\u200b\u5219\u200b\u8bb0\u5f55\u200bkeeping\uff0c\u200b\u5f80\u200b\u4e0b\u200b\u8fed\u4ee3\u200b\u3002\u200b\u4f7f\u7528\u200b\u4e4b\u524d\u200b\u7684\u200b#&gt;\uff0c\u200b\u4f20\u5165\u200b\u7684\u200b\u8fd9\u4e2a\u200blambda\u200b\u51fd\u6570\u200b\u5904\u7406\u200b\u521d\u59cb\u200b\u7684\u200b[]\u3002\n   | f x       = msg (\"keeping \"++show x) ##&gt; filterLog f xs #&gt; (\\xs' -&gt; nomsg (x:xs'))\n   | otherwise = msg (\"dropping \"++show x) ##&gt; filterLog f xs\n</code></pre>"},{"location":"Archive/Haskell/13.%20Monads.html#13-example-3-keeping-state","title":"1.3 Example 3: Keeping State","text":"<p>\u200b\u6709\u200b\u7684\u200b\u65f6\u5019\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u8ba1\u7b97\u200b\u6765\u200b\u6539\u53d8\u200b\u67d0\u4e9b\u200b\u5171\u4eab\u200b\u7684\u200b\u72b6\u6001\u200b\u3002\u200b\u6765\u770b\u200b\u94f6\u884c\u200b\u8d26\u6237\u200b\u7684\u200b\u4f8b\u5b50\u200b\u3002</p> <pre><code>import qualified Data.Map as Map\n\n-- Bank = (\u200b\u7528\u6237\u540d\u200b -&gt; \u200b\u4f59\u989d\u200b)\u200b\u7684\u200bMap\ndata Bank = Bank (Map.Map String Int)\n  deriving Show\n</code></pre> <p>\u200b\u5982\u679c\u200b\u8981\u200b\u8fdb\u884c\u200b\u5b58\u6b3e\u200b\uff0c\u200b\u5219\u200b\u9996\u5148\u200b\u8f93\u5165\u200b\u7528\u6237\u540d\u200b\u3001\u200b\u5b58\u6b3e\u200b\u6570\u200b\u3002\u200b\u7136\u540e\u200b\u901a\u8fc7\u200b<code>adjust</code>\u200b\u51fd\u6570\u200b\u627e\u5230\u200b\u540d\u5b57\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5b58\u6b3e\u200b\u6570\u200b\uff0c\u200b\u5c06\u200b\u5176\u200b\u4fee\u6539\u200b\u4e3a\u200b<code>(x+amount)</code>\u3002</p> <pre><code>-- \u200b\u5e93\u51fd\u6570\u200b\uff0c\u200b\u5c06\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u5e94\u7528\u200b\u5230\u200bMap\u200b\u4e0a\u200b\u7684\u200b\u67d0\u4e2a\u200bkey\u200b\u5bf9\u5e94\u200b\u7684\u200bval\nMap.adjust :: Ord k =&gt; (a -&gt; a) -&gt; k -&gt; Map.Map k a -&gt; Map.Map k a\n\ndeposit :: String -&gt; Int -&gt; Bank -&gt; Bank\ndeposit accountName amount (Bank accounts) =\n  Bank (Map.adjust (\\x -&gt; x+amount) accountName accounts)\n</code></pre> <p>\u200b\u53d6\u6b3e\u200b\u5c31\u200b\u6bd4\u8f83\u590d\u6742\u200b\u4e00\u70b9\u200b\uff0c\u200b\u9700\u8981\u200b\u5904\u7406\u200b\u7528\u6237\u200b\u4e0d\u200b\u5b58\u5728\u200b\u3001\u200b\u7528\u6237\u200b\u94b1\u200b\u4e0d\u591f\u200b\u7b49\u200b\u60c5\u51b5\u200b\u3002</p> <pre><code>-- \u200b\u5e93\u51fd\u6570\u200b\uff0c\u200b\u5982\u679c\u200bkey\u200b\u4e0d\u200b\u5b58\u5728\u200b\u5219\u200b\u8fd4\u56de\u200b\u9ed8\u8ba4\u503c\u200b\nMap.findWithDefault :: Ord k =&gt; a -&gt; k -&gt; Map.Map k a -&gt; a\n\nwithdraw :: String -&gt; Int -&gt; Bank -&gt; (Int,Bank)\nwithdraw accountName amount (Bank accounts) =\n  let -- \u200b\u5bf9\u4e8e\u200b\u4e0d\u200b\u5b58\u5728\u200b\u7684\u200b\u8d26\u6237\u200b\u4f59\u989d\u200b\u4e3a\u200b0\n      balance = Map.findWithDefault 0 accountName accounts\n      -- \u200b\u4e0d\u80fd\u200b\u8d85\u51fa\u200b\u8d26\u6237\u200b\u4f59\u989d\u200b\n      withdrawal = min amount balance\n      -- \u200b\u8fd9\u91cc\u200b\u548c\u200b\u5b58\u6b3e\u200b\u5dee\u4e0d\u591a\u200b\n      newAccounts = Map.adjust (\\x -&gt; x-withdrawal) accountName accounts\n  in (withdrawal, Bank newAccounts) -- \u200b\u8fd4\u56de\u200b\u53d6\u6b3e\u200b\u503c\u200b\u548c\u200b\u65b0\u200b\u7684\u200bbank\n</code></pre> <p>\u200b\u6700\u540e\u200b\u5199\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u4ece\u200b\u4e00\u4e2a\u200b\u8d26\u6237\u200b\u4e2d\u200b\u53d6\u51fa\u200b\u6700\u200b\u591a\u200b100\u200b\u539f\u200b\uff0c\u200b\u5c06\u200b\u94b1\u200b\u5206\u6210\u200b\u4e24\u534a\u200b\u5b58\u5165\u200b\u4e24\u4e2a\u200b\u8d26\u6237\u200b\u4e2d\u200b\u3002</p> <pre><code>share :: String -&gt; String -&gt; String -&gt; Bank -&gt; Bank\nshare from to1 to2 bank =\n  let (amount,bank1) = withdraw from 100 bank\n      half = div amount 2\n      -- carefully preserve all money, even if amount was an odd number\n      rest = amount-half\n      bank2 = deposit to1 half bank1\n      bank3 = deposit to2 rest bank2\n  in bank3\n</code></pre> <p>\u200b\u5728\u200bHaskell\u200b\u4e2d\u200b\uff0c\u200b\u5f53\u200b\u4f60\u200b\u5bf9\u200b\u4e00\u4e2a\u200b\u503c\u200b\u8fdb\u884c\u200b\u4e32\u884c\u200b\u66f4\u65b0\u200b\u65f6\u200b\uff0c\u200b\u540c\u65f6\u200b\u4e5f\u200b\u5728\u200b\u65c1\u8fb9\u200b\u8fdb\u884c\u200b\u4e00\u4e9b\u200b\u5176\u4ed6\u200b\u7684\u200b\u8ba1\u7b97\u200b\uff0c\u200b\u8fd9\u6837\u200b\u7684\u200b\u4ee3\u7801\u200b\u7ecf\u5e38\u51fa\u73b0\u200b\u3002\u200b\u8ba9\u200b\u6211\u4eec\u200b\u91cd\u5199\u200b<code>share</code>\uff0c\u200b\u8fd9\u6837\u200b\u6211\u4eec\u200b\u5c31\u200b\u4e0d\u200b\u9700\u8981\u200b\u5f15\u7528\u200b\u94f6\u884c\u200b\u672c\u8eab\u200b\u4e86\u200b\u3002\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u518d\u6b21\u200b\u4f7f\u7528\u200b\u76f8\u540c\u200b\u7684\u200b\u94fe\u5f0f\u200b\u601d\u60f3\u200b\u6765\u200b\u5b8c\u6210\u200b\u8fd9\u4e2a\u200b\u4efb\u52a1\u200b\u3002</p> <pre><code>-- BankOp a\u200b\u4f1a\u200b\u5c06\u200bbank\u200b\u91cc\u200b\u7684\u200b\u4e00\u4e2a\u200b\u503c\u200b\u8fdb\u884c\u200b\u8f6c\u6362\u200b\uff0c\u200b\u5e76\u4e14\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\u4e3a\u200ba\u200b\u7684\u200b\u503c\u200b\ndata BankOp a = BankOp (Bank -&gt; (a,Bank))\n\n-- \u200b\u5728\u200b\u4e00\u4e2a\u200bbank\u200b\u4e0a\u200b\u8dd1\u200bbankop\nrunBankOp :: BankOp a -&gt; Bank -&gt; (a,Bank)\nrunBankOp (BankOp f) bank = f bank\n\n-- \u200b\u5728\u200b\u4e00\u4e2a\u200bbankop\u200b\u540e\u9762\u200b\u8dd1\u200b\u53e6\u200b\u4e00\u4e2a\u200bbankop\n(+&gt;&gt;) :: BankOp a -&gt; BankOp b -&gt; BankOp b\nop1 +&gt;&gt; op2 = BankOp combined\n  where combined bank = \n    let (_,bank1) = runBankOp op1 bank -- op1\u200b\u7684\u200b\u7ed3\u679c\u200b\u5728\u200bbank1\u200b\u91cc\u200b\n    in runBankOp op2 bank1 -- \u200b\u76f4\u63a5\u200b\u5f53\u6210\u200b\u65b0\u200b\u7684\u200b\u503c\u200b\u653e\u5230\u200bop2\u200b\u91cc\u200b\u8dd1\u200b\n\n-- \u200b\u8dd1\u200b\u4e00\u4e2a\u200b\u5e26\u200b\u53c2\u6570\u200b\u7684\u200bop\uff0c\u200b\u4f7f\u7528\u200b\u524d\u9762\u200b\u7684\u200bop\u200b\u8fd4\u56de\u200b\u7684\u200b\u7ed3\u679c\u200b\u3002\n(+&gt;) :: BankOp a -&gt; (a -&gt; BankOp b) -&gt; BankOp b\nop +&gt; parameterized = BankOp combined\n  where combined bank = \n    let (a,bank1) = runBankOp op bank -- op1\u200b\u7684\u200b\u7ed3\u679c\u200b\u5728\u200bbank1\u200b\u91cc\u200b\n    in runBankOp (parameterized a) bank1 -- \u200b\u76f4\u63a5\u200b\u5f53\u6210\u200b\u65b0\u200b\u7684\u200b\u503c\u200b\u653e\u5230\u200bop2\u200b\u91cc\u200b\u8dd1\u200b\uff0c\u200b\u5e76\u200b\u4f7f\u7528\u200b\u524d\u9762\u200b\u7684\u200ba\u200b\u4f5c\u4e3a\u200b\u51fd\u6570\u200bparameterized\u200b\u7684\u200b\u53c2\u6570\u200b\n\n-- \u200b\u5b58\u6b3e\u200b\u7684\u200bop\ndepositOp :: String -&gt; Int -&gt; BankOp ()\ndepositOp accountName amount = BankOp depositHelper\n    -- \u200b\u53ea\u662f\u200b\u628a\u200b\u4e4b\u524d\u200b\u7684\u200bdeposit\u200b\u51fd\u6570\u200b\u505a\u200b\u4e86\u200b\u4e00\u4e2a\u200bBankOp\u200b\u7c7b\u200b\u5305\u88f9\u200b\uff0c\u200b\u7531\u4e8e\u200b\u4e0d\u200b\u9700\u8981\u200b\u8fd4\u56de\u503c\u200b\uff0c\u200b\u6240\u4ee5\u200b\u53ea\u200b\u7ed9\u200b\u4e86\u200b\u4e00\u4e2a\u200b()\n  where depositHelper bank = ((), deposit accountName amount bank)\n\n-- \u200b\u53d6\u6b3e\u200b\u7684\u200bop\uff0c\u200b\u5b83\u200b\u672c\u8eab\u200b\u957f\u5f97\u200b\u548c\u200bBankOp\u200b\u5c31\u200b\u5f88\u200b\u50cf\u200b\nwithdrawOp :: String -&gt; Int -&gt; BankOp Int\nwithdrawOp accountName amount = BankOp (withdraw accountName amount)\n</code></pre> <p>\u200b\u8ba9\u200b\u6211\u4eec\u200b\u6765\u200b\u770b\u770b\u200b\u600e\u4e48\u200b\u8ba9\u200b\u8fd9\u4e9b\u200b\u64cd\u4f5c\u200b\u8fdb\u884c\u200b\u94fe\u5f0f\u200b\u5de5\u4f5c\u200b\u3002</p> <pre><code>Prelude&gt; bank = Bank (Map.fromList [(\"edsger\",10),(\"grace\",50)])\n\n-- \u200b\u4f7f\u7528\u200b +&gt;&gt; \n\nPrelude&gt; runBankOp (depositOp \"edsger\" 1) bank\n((),Bank (fromList [(\"edsger\",11),(\"grace\",50)]))\n-- edsger\u200b\u5b58\u6b3e\u200b1 + grace\u200b\u5b58\u6b3e\u200b 1\nPrelude&gt; runBankOp (depositOp \"edsger\" 1 +&gt;&gt; depositOp \"grace\" 1) bank\n((),Bank (fromList [(\"edsger\",11),(\"grace\",51)]))\n-- edsger\u200b\u5b58\u6b3e\u200b1 + grace\u200b\u5b58\u6b3e\u200b 1+edsger\u200b\u53d6\u6b3e\u200b11\nPrelude&gt; runBankOp (depositOp \"edsger\" 1 +&gt;&gt; depositOp \"grace\" 1 +&gt;&gt; withdrawOp \"edsger\" 11) bank\n(11,Bank (fromList [(\"edsger\",0),(\"grace\",51)]))\n\n-- \u200b\u4f7f\u7528\u200b +&gt;\n-- edsger\u200b\u53d6\u6b3e\u200b5 + \u200b\u5b58\u5165\u200bgrace\u200b\u8d26\u6237\u200b\nPrelude&gt; runBankOp (withdrawOp \"edsger\" 5 +&gt; depositOp \"grace\") bank\n((),Bank (fromList [(\"edsger\",5),(\"grace\",55)]))\n-- edsger\u200b\u53d6\u6b3e\u200b100 + \u200b\u5b58\u5165\u200bgrace\u200b\u8d26\u6237\u200b\uff08\u200b\u4f59\u989d\u200b\u4e0d\u591f\u200b\uff09\nPrelude&gt; runBankOp (withdrawOp \"edsger\" 100 +&gt; depositOp \"grace\") bank\n((),Bank (fromList [(\"edsger\",0),(\"grace\",60)]))\n</code></pre> <p>\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\u521d\u59cb\u200b\u9636\u6bb5\u200b\u7684\u200bbank\u200b\u5fc5\u987b\u200b\u5e94\u7528\u200b<code>runBankOp</code>\uff0c\u200b\u56e0\u4e3a\u200b<code>BankOp</code>\u200b\u8f6c\u6362\u200b\u53ef\u80fd\u200b\u662f\u200b\u590d\u5408\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u628a\u200b\u5b9a\u4e49\u200b\u64cd\u4f5c\u200b\u548c\u200b\u6267\u884c\u200b\u64cd\u4f5c\u200b\u5206\u5f00\u200b\u603b\u662f\u200b\u66f4\u597d\u200b\u7684\u200b\u3002</p> <p>\u200b\u518d\u200b\u63a5\u7740\u200b\u5b9a\u4e49\u200b\u4e4b\u524d\u200b\u7684\u200b<code>share</code>\u200b\u64cd\u4f5c\u200b\u3002</p> <pre><code>-- \u200b\u5c06\u200b\u6570\u91cf\u200b\u5747\u5206\u200b\u5230\u200b\u4e24\u4e2a\u200b\u8d26\u6237\u200b\u4e2d\u200b\ndistributeOp :: String -&gt; String -&gt; Int -&gt; BankOp ()\ndistributeOp to1 to2 amount =\n-- \u200b\u94fe\u6761\u200b\u4e24\u4e2a\u200b\u5b58\u6b3e\u200b\u64cd\u4f5c\u200b\n  depositOp to1 half\n  +&gt;&gt;\n  depositOp to2 rest\n  where half = div amount 2\n        rest = amount - half\n\n-- \u200b\u5c06\u200b\u4e00\u4e2a\u200b\u8d26\u6237\u200b\u4e2d\u200b\u7684\u200b\u4e1c\u897f\u200b\u5747\u5206\u200b\nshareOp :: String -&gt; String -&gt; String -&gt; BankOp ()\nshareOp from to1 to2 =\n-- \u200b\u94fe\u6761\u200b\u4e00\u4e2a\u200b\u53d6\u6b3e\u200b\u548c\u200b\u4e00\u4e2a\u200b\u5206\u5e03\u200b\uff0c\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u53c2\u6570\u200b\n  withdrawOp from 100\n  +&gt;\n  distributeOp to1 to2\n</code></pre>"},{"location":"Archive/Haskell/13.%20Monads.html#2-monad","title":"2 Monad \u200b\u4ecb\u7ecd","text":""},{"location":"Archive/Haskell/13.%20Monads.html#21-monad","title":"2.1 \u200b\u62bd\u8c61\u200b\u4e00\u4e2a\u200bMonad","text":"<p>\u200b\u5230\u200b\u73b0\u5728\u200b\u4e3a\u6b62\u200b\uff0c\u200b\u5df2\u7ecf\u200b\u6709\u200b\u4e86\u200b\u4e09\u4e2a\u200b\u4e0d\u540c\u200b\u7684\u200b\u94fe\u5f0f\u200b\u64cd\u4f5c\u200b\u3002</p> <pre><code>(?&gt;) :: Maybe a -&gt; (a -&gt; Maybe b) -&gt; Maybe b\n(#&gt;) :: Logger a -&gt; (a -&gt; Logger b) -&gt; Logger b\n(+&gt;) :: BankOp a -&gt; (a -&gt; BankOp b) -&gt; BankOp b\n</code></pre> <p>\u200b\u5c31\u200b\u548c\u200b<code>map,Functor</code>\u200b\u4e00\u6837\u200b\uff0c\u200b\u4e5f\u200b\u6709\u200b\u4e00\u4e2a\u200b\u7c7b\u65cf\u200b\u5c1d\u8bd5\u200b\u6355\u6349\u200b\u8fd9\u79cd\u200b\u7279\u6027\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u7c7b\u200b\u5c31\u200b<code>Monad</code>\uff0c\u200b\u5b83\u200b\u548c\u200b<code>Functor, Foldable</code>\u200b\u4e00\u6837\u200b\u63a5\u6536\u200b\u4e00\u4e2a\u200bkind\u200b\u4e3a\u200b<code>* -&gt; *</code>\u200b\u7684\u200b\u6784\u9020\u51fd\u6570\u200b\u3002</p> <pre><code>class Monad m where\n  (&gt;&gt;=) :: m a -&gt; (a -&gt; m b) -&gt; m b\n\n  -- \u200b\u5c06\u200b\u4e00\u4e2a\u200b\u666e\u901a\u200b\u503c\u200b\u8f6c\u6362\u200b\u4e3a\u200bmonad\n  return :: a -&gt; m a\n  -- \u200b\u7b80\u5355\u200b\u7684\u200b\u94fe\u6761\u200b\uff08\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\u4e4b\u524d\u200b\u4e0d\u200b\u4f7f\u7528\u200b\u53c2\u6570\u200b\u7684\u200b##&gt;\uff09\n  (&gt;&gt;) :: m a -&gt; m b -&gt; m b\n  a &gt;&gt; b  =  a &gt;&gt;= \\_ -&gt; b     -- \u200b\u8fd9\u4e2a\u200b\u9ed8\u8ba4\u200b\u5b9e\u73b0\u200b\u5176\u5b9e\u200b\u5c31\u662f\u200b\u5ffd\u7565\u200b\u6389\u200b\u53c2\u6570\u200b\n</code></pre>"},{"location":"Archive/Haskell/13.%20Monads.html#22-do","title":"2.2 \u200b\u590d\u6742\u200b\u4e00\u70b9\u200b\u7684\u200b\u94fe\u6761\u200b\uff0c\u200b\u7528\u200bdo","text":"<p>\u200b\u5982\u679c\u200b\u5199\u200b\u4e00\u4e2a\u200b\u590d\u6742\u200b\u4e00\u70b9\u200b\u7684\u200b\u94fe\u6761\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u53d8\u6210\u200b\u8fd9\u200b\u6837\u5b50\u200b</p> <pre><code>f = op1 &gt;&gt;= continue\n  where continue  x   = op2 &gt;&gt; op3 &gt;&gt;= continue2 x\n        continue2 x y = op4 &gt;&gt; op5 x y\n\n-- \u200b\u6216\u8005\u200b\u5199\u200b\u597d\u770b\u200b\u4e00\u70b9\u200b\nf = op1 &gt;&gt;= \\x -&gt;\n    op2 &gt;&gt;\n    op3 &gt;&gt;= \\y -&gt;\n    op4 &gt;&gt;\n    op5 x y\n</code></pre> <p>\u200b\u8fd9\u200b\u5b9e\u5728\u200b\u662f\u200b\u5f88\u200b\u4e0d\u200b\u4f18\u96c5\u200b\uff0c\u200b\u4f46\u662f\u200b\u597d\u200b\u5728\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>do</code>\uff0c\u200b\u8ba9\u200b\u5b83\u200b\u6309\u5e8f\u200b\u64cd\u4f5c\u200b\uff01</p> <pre><code>f = do x &lt;- op1  -- \u200b\u8ba9\u200bx\u200b\u5f97\u5230\u200bop1\u200b\u7684\u200b\u7ed3\u679c\u200b\n       op2\n       y &lt;- op3\n       op4\n       op5 x y\n</code></pre> <p>\u200b\u5982\u4e0b\u200b\u662f\u200b\u5bf9\u5e94\u200b\u89c4\u5219\u200b</p> <pre><code>do x &lt;- op a       ~~~&gt;       op a &gt;&gt;= \\x -&gt; do ...\ndo op a            ~~~&gt;       op a &gt;&gt; do ...\ndo let x = expr    ~~~&gt;       let x = expr in do ...\ndo finalOp         ~~~&gt;       finalOp\n</code></pre>"},{"location":"Archive/Haskell/13.%20Monads.html#23-maybe-monad","title":"2.3 Maybe =&gt; Monad","text":"<p>\u200b\u76f4\u63a5\u200b\u53ef\u4ee5\u200b\u7ed9\u200b<code>Maybe</code>\u200b\u5b9a\u4e49\u200b<code>Monad</code>\u200b\u5b9e\u4f8b\u200b\uff0c\u200b\u4e4b\u524d\u200b\u6240\u6709\u200b\u7684\u200b\u8bb0\u53f7\u200b<code>(?&gt;)</code>\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>(&gt;&gt;=)</code>\u200b\u6765\u200b\u4ee3\u66ff\u200b\u3002</p> <pre><code>instance  Monad Maybe  where\n    (Just x) &gt;&gt;= k      = k x\n    Nothing  &gt;&gt;= _      = Nothing\n\n    return x            = Just x\n\n-- Just \"HELLO\" &gt;&gt;= (\\x -&gt; return (length x)) &gt;&gt;= (\\x -&gt; return (x+1))\n-- ==&gt; Just 6\n-- Just 2 &gt;&gt; Nothing\n--   ==&gt; Nothing\n</code></pre>"},{"location":"Archive/Haskell/13.%20Monads.html#24-logger-monadapplicative","title":"2.4 Logger =&gt; Monad\uff08Applicative\u200b\u9996\u6b21\u200b\u51fa\u73b0\u200b!\uff09","text":"<p>Logger\u200b\u663e\u7136\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u8fd9\u4e48\u200b\u505a\u200b\u3002\u200b\u4f46\u662f\u200b\u56e0\u4e3a\u200bHaskell\u200b\u7684\u200b\u4e00\u4e9b\u200b\u53d8\u5316\u200b\uff0c\u200b\u5fc5\u987b\u200b\u5b9e\u73b0\u200b<code>Functor</code>\u200b\u548c\u200b<code>Applicative</code>\u200b\u624d\u80fd\u200b\u5b9e\u73b0\u200b<code>Monad</code>\u200b\u5b9e\u4f8b\u200b\u3002</p> <pre><code>import Control.Monad\n\ndata Logger a = Logger [String] a  deriving Show\n\nmsg :: String -&gt; Logger ()\nmsg s = Logger [s] ()\n\n-- Functor\u200b\u5b9e\u4f8b\u200b\u7b80\u5355\u200b\u7684\u200b\u5c06\u200b\u51fd\u6570\u200b\u5e94\u7528\u200b\u5230\u503c\u200b\u4e0a\u200b\n  fmap f (Logger log x) = Logger log (f x)\n\n-- \u200b\u8fd9\u200b\u662f\u200b\u4e2a\u200b\u5bf9\u200b\u4efb\u4f55\u200bmonad\u200b\u8d77\u6548\u200b\u7684\u200bApplicative\u200b\u5b9e\u4f8b\u200b\uff0c\u200b\u540e\u9762\u200b\u5728\u200b\u8bb2\u200b\ninstance Applicative Logger where\n  pure = return\n  (&lt;*&gt;) = ap\n\n-- Monad\u200b\u5b9e\u4f8b\u200b\u4e2d\u200b\u7684\u200b\u903b\u8f91\u200b\u5c31\u662f\u200b\u4e0a\u9762\u200b\u7684\u200b#&gt;\ninstance Monad Logger where\n  return x = Logger [] x\n  Logger la a &gt;&gt;= f = Logger (la++lb) b\n    where Logger lb b = f a\n</code></pre> <p>\u200b\u8fd9\u91cc\u200b\u5c31\u200b\u4e0d\u200b\u9700\u8981\u200b\u4e4b\u524d\u200b\u7684\u200b<code>nomsg</code>\u200b\u64cd\u4f5c\u200b\u4e86\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5b83\u200b\u88ab\u200b<code>return</code>\u200b\u4ee3\u66ff\u200b\u4e86\u200b\u3002\u200b\u4e4b\u524d\u200b\u7684\u200b<code>annotate</code>\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>&gt;&gt;</code>\u200b\u5b9e\u73b0\u200b\u3002</p> <pre><code>nomsg :: a -&gt; Logger a\nnomsg x = return x\n\nannotate :: String -&gt; a -&gt; Logger a\nannotate s x = msg s &gt;&gt; return x\n</code></pre> <p>\u200b\u63a5\u4e0b\u6765\u200b\u91cd\u5199\u200b\u4e00\u4e0b\u200b\u4e4b\u524d\u200b\u7684\u200b<code>compute</code>\u200b\u548c\u200b<code>filterLog</code>\u3002\u200b\u6ce8\u610f\u200b\u8fd9\u91cc\u200b\u751a\u81f3\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>do</code>\u200b\u5757\u200b\uff01</p> <pre><code>compute x = do\n  a &lt;- annotate \"^2\" (x*x)\n  b &lt;- annotate \"+1\" (a+1)\n  annotate \"*2\" (b*2)\n\nfilterLog :: (Show a) =&gt; (a -&gt; Bool) -&gt; [a] -&gt; Logger [a]\nfilterLog f [] = return []\nfilterLog f (x:xs)\n   | f x       = do msg (\"keeping \"++show x)\n                    xs' &lt;- filterLog f xs\n                    return (x:xs') -- \u200b\u6f02\u4eae\u200b\u7684\u200breturn\n   | otherwise = do msg (\"dropping \"++show x)\n                    filterLog f xs\n</code></pre>"},{"location":"Archive/Haskell/13.%20Monads.html#bankop-monadstate-monad","title":"BankOp =&gt; Monad(State Monad!)","text":"<p>Haskell\u200b\u4e2d\u200b\u7684\u200b<code>State</code> monad(module Control.Monad.Trans.State of the transformers package)\u200b\u662f\u200b\u5bf9\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b<code>BankOp</code>\u200b\u7c7b\u200b\u7684\u200b\u4e00\u4e2a\u200b\u6cdb\u5316\u200b\u3002\u200b\u5b83\u200b\u6709\u200b\u4e24\u4e2a\u200b\u7c7b\u578b\u200b\u53c2\u6570\u200b<code>s,a</code>\uff08\u200b\u7c7b\u6bd4\u200b\u4e4b\u524d\u200b\u7684\u200b<code>(val,Bank)</code>\uff09\u3002</p> <pre><code>data State s a = State (s -&gt; (a,s))\n\nrunState (State f) s = f s -- \u200b\u6267\u884c\u200b\u64cd\u4f5c\u200b\n\n-- \u200b\u8986\u76d6\u200b\u4e4b\u524d\u200b\u7684\u200bstate\uff0c\u200b\u5e76\u200b\u5236\u9020\u200b()\nput :: s -&gt; State s ()\nput state = State (\\oldState -&gt; ((),state))\n\n-- \u200b\u5236\u9020\u200b\u5f53\u524d\u200bstate\nget :: State s s\nget = State (\\state -&gt; (state,state))\n\n-- \u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u6539\u53d8\u200b\u5f53\u524d\u200bstate\uff0c\u200b\u5236\u9020\u200b()\nmodify :: (s -&gt; s) -&gt; State s ()\nmodify f = State (\\state -&gt; ((), f state))\n\n-- Functor \u200b\u548c\u200b Applicative \u200b\u7684\u200b\u5b9e\u4f8b\u200b\u5148\u200b\u8df3\u200b\u8fc7\u200b\n\ninstance Monad (State s) where \n  return x = State (\\s -&gt; (x,s))\n\n  op &gt;&gt;= f = State h\n    where h state0 = let (val,state1) = runState op state0\n                         op2 = f val\n                     in runState op2 state1\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\u8fd9\u91cc\u200b\u662f\u200b\u5bf9\u200b<code>(State s)</code>\u200b\u58f0\u660e\u200b<code>Monad</code>\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b\u53ea\u200b\u7ed9\u200b\u4e86\u200b<code>State</code>\u200b\u90e8\u5206\u200b\u53c2\u6570\u200b\uff0c\u200b\u8fd9\u6837\u200b\u5b83\u200b\u7684\u200bkind\u200b\u5c31\u662f\u200b\u4e00\u4e2a\u200b<code>* -&gt; *</code>\u3002\uff08<code>Monad</code>\u200b\u53ea\u80fd\u200b\u5bf9\u200b\u63a5\u6536\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\u53c2\u6570\u200b\u7684\u200b\u7c7b\u578b\u200b\u6784\u9020\u51fd\u6570\u200b\u505a\u200b\u5b9a\u4e49\u200b\uff01\uff09\u200b\u53ef\u4ee5\u200b\u7c7b\u6bd4\u200b<code>Maybe</code>\u200b\u7684\u200b\u60c5\u51b5\u200b</p> <pre><code>class Monad m where\n  (&gt;&gt;=) :: m a -&gt; (a -&gt; m b) -&gt; m b\n\ninstance Monad Maybe where\n  (&gt;&gt;=) :: Maybe a -&gt; (a -&gt; Maybe b) -&gt; Maybe b\n\ninstance Monad (State s) where\n  (&gt;&gt;=) :: State s a -&gt; (a -&gt; State s b) -&gt; State s b\n</code></pre> <p>\u200b\u73b0\u5728\u200b\u8ba9\u200b\u6211\u4eec\u200b\u770b\u770b\u200b<code>State</code>\u200b\u7684\u200b\u5de5\u4f5c\u200b\u5b9e\u4f8b\u200b\uff0c\u200b\u8003\u8651\u200b<code>State Int a</code>\u200b\u4f5c\u4e3a\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u7684\u200b\u8ba1\u6570\u5668\u200b\u3002</p> <pre><code>-- \u200b\u5f80\u200b\u5f53\u524d\u200b\u8ba1\u6570\u5668\u200b\u4e0a\u200b+i\nadd :: Int -&gt; State Int ()\nadd i = do old &lt;- get  -- \u200b\u83b7\u5f97\u200b\u5f53\u524d\u200b\u8ba1\u6570\u5668\u200b\n           put (old+i) -- \u200b\u8f93\u51fa\u200b\u65b0\u200b\u7684\u200b\u8ba1\u6570\u5668\u200b\n\nrunState (add 1 &gt;&gt; add 3 &gt;&gt; add 5 &gt;&gt; add 6) 0\n  ==&gt; ((),15)\n\nexample :: State Int Int\nexample = do add 3           -- \u200b\u589e\u52a0\u200b3\n             value &lt;- get    -- \u200b\u83b7\u53d6\u200b\u73b0\u5728\u200b\u7684\u200b\u503c\u200binit+3\n             add 1000        -- \u200b\u589e\u52a0\u200b1000\n             put (value + 1) -- \u200b\u8986\u5199\u200b\u73b0\u5728\u200b\u7684\u200b\u72b6\u6001\u200b\uff0cvalue+1\n             return value    -- \u200b\u5236\u9020\u200b value, \u200b\u8fd9\u91cc\u200b\u662f\u200binit+3\nrunState example 1\n  ==&gt; (4,5)\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\u5230\u200b\u7c7b\u578b\u200b<code>State s a</code>\u200b\u548c\u200b<code>BankOp</code>\u200b\u5f88\u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u8868\u793a\u200b\u4e86\u200b\u67d0\u4e2a\u200b\u72b6\u6001\u200b\u7684\u200b\u8f6c\u6362\u200b\u8fc7\u7a0b\u200b\u3002\u200b\u521d\u59cb\u5316\u200b\u7684\u200b\u72b6\u6001\u200b\u5fc5\u987b\u200b\u7528\u200b<code>runState</code>\u200b\u6765\u200b\u6267\u884c\u200b\u6240\u6709\u200b\u7684\u200b\u64cd\u4f5c\u200b\u3002</p> <p>\u200b\u5728\u200b\u5904\u7406\u200b\u4e00\u4e2a\u200b\u5217\u8868\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u4e00\u4e2a\u200bstate\u200b\u53ef\u4ee5\u200b\u66ff\u4ee3\u200b\u4e00\u4e2a\u200b\u8ba1\u6570\u5668\u200b\u53c2\u6570\u200b\uff0c\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u5982\u4f55\u200b\u7528\u200b<code>state</code>\u200b\u8bb0\u5f55\u200b\u6700\u5927\u503c\u200b\u66f4\u65b0\u200b\u7684\u200b\u4f8b\u5b50\u200b\u3002</p> <pre><code>findLargest :: Ord a =&gt; [a] -&gt; State a ()\nfindLargest [] = return ()\nfindLargest (x:xs) = do\n  modify (\\y -&gt; max x y)  -- \u200b\u5c06\u200b\u5f53\u524d\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\u4e3a\u200b\u6700\u5927\u503c\u200b\n  findLargest xs          -- \u200b\u63a5\u7740\u200b\u5904\u7406\u200b\u5269\u4e0b\u200b\u7684\u200b\u5217\u8868\u200b\n\nrunState (findLargest [1,2,7,3]) 0  ==&gt;  ((),7)\n</code></pre>"},{"location":"Archive/Haskell/13.%20Monads.html#3-monad-io-functor","title":"3 Monad \u200b\u548c\u200b IO / Functor","text":""},{"location":"Archive/Haskell/13.%20Monads.html#31-monad-io","title":"3.1 Monad \u200b\u548c\u200b IO","text":"<p><code>IO</code>\u200b\u7ed3\u6784\u200b\u4e2d\u200b\u7684\u200b\u63a7\u5236\u6d41\u200b\u5168\u90fd\u200b\u662f\u200b<code>monad</code>\uff0c\u200b\u8ba9\u200b\u6211\u4eec\u200b\u91cd\u65b0\u200b\u6765\u770b\u200b\u4e00\u4e0b\u200b\u3002</p> <pre><code>when :: Monad m =&gt; Bool -&gt; m () -&gt; m () -- \u200b\u5f53\u200bb\u200b\u771f\u65f6\u200b\u6267\u884c\u200bop\nunless :: Monad m =&gt; Bool -&gt; m () -&gt; m () -- \u200b\u5f53\u200bb\u200b\u5047\u65f6\u200b\u6267\u884c\u200bop\nreplicateM :: Monad m =&gt; Int -&gt; m a -&gt; m [a] --\u200b\u91cd\u590d\u200bn\u200b\u6b21\u200b\uff0c\u200b\u6536\u96c6\u200b\u7ed3\u679c\u200b\nreplicateM_ :: Monad m =&gt; Int -&gt; m a -&gt; m () --\u200b\u91cd\u590d\u200bn\u200b\u6b21\u200b\uff0c\u200b\u6254\u6389\u200b\u7ed3\u679c\u200b\nmapM :: Monad m =&gt; (a -&gt; m b) -&gt; [a] -&gt; m [b] --\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u5217\u8868\u200b\u5143\u7d20\u200b\u6267\u884c\u200b\u64cd\u4f5c\u200b\nmapM_ :: Monad m =&gt; (a -&gt; m b) -&gt; [a] -&gt; m () --\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u5217\u8868\u200b\u5143\u7d20\u200b\u6267\u884c\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u6254\u6389\u200b\u7ed3\u679c\u200b\nforM  :: Monad m =&gt; [a] -&gt; (a -&gt; m b) -&gt; m [b] -- \u200b\u548c\u200bmapM\u200b\u4e00\u6837\u200b\uff0c\u200b\u987a\u5e8f\u200b\u6362\u6362\u200b\nforM_ :: Monad m =&gt; [a] -&gt; (a -&gt; m b) -&gt; m ()\n</code></pre> <p>\u200b\u6b63\u5982\u200b\u4f60\u200b\u770b\u5230\u200b\u7684\u200b\uff0c\u200b\u6211\u4eec\u200b\u73b0\u5728\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>mapM</code>\u200b\u6765\u200b\u5bf9\u200b\u6240\u6709\u200b\u7684\u200bmonads\u200b\u8fdb\u884c\u200b\u64cd\u4f5c\u200b\u3002</p> <pre><code>mapM (\\x -&gt; if (x&gt;0) then Just (x-1) else Nothing) [1,2,3]  ==&gt;  Just [0,1,2]\nmapM (\\x -&gt; if (x&gt;0) then Just (x-1) else Nothing) [1,0,3]  ==&gt;  Nothing\n\nmapM (\\x -&gt; msg \"increment\" &gt;&gt; msg (show x) &gt;&gt; return (x+1)) [1,2,3]\n  ==&gt; Logger [\"increment\",\"1\",\"increment\",\"2\",\"increment\",\"3\"] [2,3,4]\n\nrunState (mapM (\\x -&gt; modify (x+) &gt;&gt; return (x+1)) [1,2,3]) 0\n  ==&gt; ([2,3,4],6)\n</code></pre> <p><code>instance Monad IO</code>\u200b\u662f\u200b\u7f16\u8bd1\u5668\u200b\u5185\u7f6e\u200b\uff0c\u200b\u4e0d\u80fd\u81ea\u5df1\u200b\u5b9e\u73b0\u200b\u3002\u200b\u771f\u6b63\u200b\u7684\u200b\u526f\u4f5c\u7528\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u5d4c\u5165\u200b<code>monads</code>\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b\u64cd\u4f5c\u200b\u7684\u200bpure\u200b\u5b9a\u4e49\u200b\u548c\u200b\u6267\u884c\u200b\u64cd\u4f5c\u200b\u5206\u5f00\u200b\u6765\u200b\u4e86\u200b\u3002<code>monad</code>\u200b\u7684\u200b\u64cd\u4f5c\u7b26\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u548c\u200b<code>IO</code>\u200b\u5f88\u200b\u597d\u200b\u7684\u200b\u5339\u914d\u200b\u3002</p> <pre><code>printTwoThings :: IO ()\nprintTwoThings = putStrLn \"One!\" &gt;&gt; print 2\n\necho :: IO ()\necho = getLine &gt;&gt;= putStrLn\n\nconfirm :: String -&gt; IO Bool\nconfirm question = putStrLn question &gt;&gt; fmap interpret getLine\n    where interpret \"Y\" = True\n          interpret _ = False\n</code></pre>"},{"location":"Archive/Haskell/13.%20Monads.html#32-monads-functor","title":"3.2 Monads \u200b\u662f\u200b\u4e00\u79cd\u200bFunctor","text":"<p><code>Monad</code>\u200b\u4e2d\u200b\u8fd8\u6709\u200b\u4e00\u4e2a\u200b\u6709\u7528\u200b\u7684\u200b\u64cd\u4f5c\u200b<code>liftM</code>\u3002</p> <pre><code>-- \u200b\u76f4\u63a5\u200b\u628a\u200b\u64cd\u4f5c\u200b\u5e94\u7528\u200b\u5230\u503c\u200b\u4e0a\u200b\n-- \u200b\u8054\u60f3\u200b\u4e00\u4e0b\u200bfmap?\nliftM :: Monad m =&gt; (a-&gt;b) -&gt; m a -&gt; m b\nliftM f op = do x &lt;- op\n                return (f x)\n\nliftM negate (Just 3)\n  ==&gt; Just (-3)\n</code></pre> <p>\u200b\u6240\u4ee5\u200b\u5b9a\u4e49\u200b<code>Functor</code>\u200b\u5b9e\u4f8b\u200b\u975e\u5e38\u5bb9\u6613\u200b\uff0c\u200b\u5c31\u662f\u200b<code>fmap = liftM</code>\u200b\u7531\u4e8e\u200b\u6bcf\u4e2a\u200b<code>Monad</code>\u200b\u90fd\u200b\u9700\u8981\u200b\u662f\u200b\u4e00\u4e2a\u200b<code>Functor</code>\uff0c\u200b\u56e0\u6b64\u200b\u73b0\u4ee3\u200bHaskell\u200b\u504f\u597d\u200b\u4f7f\u7528\u200b<code>fmap</code>\u200b\u6765\u200b\u66ff\u4ee3\u200b<code>liftM</code>\u3002</p>"},{"location":"Archive/Haskell/13.%20Monads.html#4-monad","title":"4 \u200b\u5176\u4ed6\u200b\u8bed\u8a00\u200b\u4e2d\u200b\u7684\u200bmonad","text":""},{"location":"Archive/Haskell/13.%20Monads.html#41-maybe-option","title":"4.1 Maybe\u200b\u7684\u200b\u5bf9\u5e94\u200b =&gt; Option","text":"<p>C++\u200b\u4e2d\u200b\u7684\u200b<code>std::optional&lt;T&gt;</code>\u200b\u548c\u200b<code>Maybe</code>\u200b\u7c7b\u4f3c\u200b\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;optional&gt;\nusing namespace std;\n\nint main()\n{\n  std::optional&lt;int&gt; pp = 1; // \u200b\u7c7b\u578b\u200b\u4e3a\u200bint\n  if (pp) {\n      cout &lt;&lt; *pp &lt;&lt; endl; // 1\n  }\n\n  pp = nullopt; // \u200b\u5982\u679c\u200b\u4e3a\u7a7a\u200b\uff0c\u200b\u540d\u5b57\u200b\u4e3a\u200bnullopt\n  if (pp) {\n      cout &lt;&lt; *pp &lt;&lt; endl; // \u200b\u4e0d\u200b\u8f93\u51fa\u200b\n  }\n}\n</code></pre> <p>\u200b\u6765\u770b\u200b\u4e00\u4e2a\u200b\u5bf9\u200b<code>Some</code>\u200b\u7684\u200b<code>vector</code>\u200b\u8fdb\u884c\u200b\u64cd\u4f5c\u200b\u7684\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u4f7f\u7528\u200b\u8fed\u4ee3\u200b\u5668\u200b\u627e\u200b\u5bb9\u5668\u200b\u5185\u90e8\u200b\u548c\u200b\u6307\u5b9a\u200b\u503c\u200b\u76f8\u540c\u200b\u7684\u200b\u5143\u7d20\u200b\u3002\u200b\u6ce8\u610f\u200b\u8fd9\u91cc\u200b\u4e0d\u200b\u9700\u8981\u200b\u5bf9\u200b<code>Some</code>\u200b\u8fdb\u884c\u200b\u4e00\u4e2a\u200b\u7279\u6b8a\u200b\u63d0\u53d6\u200b\uff0c\u200b\u76f4\u63a5\u200b\u548c\u200b\u6307\u9488\u200b\u7684\u200b\u65b9\u5f0f\u200b\u662f\u200b\u76f8\u540c\u200b\u7684\u200b\u3002\u200b\u5982\u679c\u200b\u4e3a\u7a7a\u200b\u7684\u8bdd\u200b\uff0c\u200b\u5b83\u200b\u6307\u5411\u200b\u7684\u200b\u662f\u200b\u7a7a\u200b\u6307\u9488\u200b\uff0c\u200b\u6bd4\u8f83\u200b\u5c31\u200b\u4e0d\u4f1a\u200b\u6210\u529f\u200b\u3002</p> <pre><code>optional&lt;Some&gt; getSome(const std::vector&lt;Some&gt;&amp; svec, int i)\n{\n  auto iter = std::find_if(svec.begin(), svec.end(), [i](const Some&amp; s) {\n      return s.some_i_ == i;\n  });\n\n  if (iter != svec.end()) {\n      return *iter;\n  }\n\n  return nullopt;\n}\n</code></pre> <p>\u200b\u6362\u8a00\u4e4b\u200b\uff0c\u200b\u5728\u200b\u4ece\u200bC++\u200b\u4e2d\u200b\u5bf9\u200b\u4e00\u4e2a\u200b<code>optional</code>\u200b\u7c7b\u578b\u200b\u505a\u200b\u64cd\u4f5c\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u64cd\u4f5c\u7b26\u200b\u90fd\u200b\u88ab\u200b\u91cd\u8f7d\u200b\u4e86\u200b\uff0c\u200b\u76f4\u63a5\u200b\u5e94\u7528\u200b\u5728\u200b\u5185\u90e8\u200b\u7684\u200b\u503c\u200b\u4e0a\u200b\u3002</p> <p>Rust\u200b\u7684\u200b<code>option</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u679a\u4e3e\u200b\uff0c\u200b\u679a\u4e3e\u200b\u4e2d\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u53ef\u4ee5\u200b\u5b58\u653e\u200b\u5bf9\u8c61\u200b\u6216\u8005\u200b\u4e0d\u200b\u5b58\u653e\u200b\u3002</p> <pre><code>enum Option&lt;T&gt; {\n  Some(T),\n  None,\n} \n//getSome\u200b\u5982\u679c\u200b\u6ee1\u8db3\u6761\u4ef6\u200b\u8fd4\u56de\u200bSome,\u200b\u4e0d\u200b\u6ee1\u8db3\u200b\u8fd4\u56de\u200bNone\u3002\nfn getSome(b: bool) -&gt; Option&lt;i32&gt; {\n    if b {\n        return Some(3);\n    }\n    return None;\n}\n\nfn main() {\n    let b = false;\n    if let Some(s) = getSome(b) {\n        println!(\"hello.. {}\", s);\n    }\n    else {\n        println!(\"hello.. null\");\n    }\n}\n</code></pre> <p>\u200b\u5176\u4ed6\u200b\u4e00\u4e9b\u200b\u51fd\u6570\u200b\u7684\u200b\u5bf9\u5e94\u200b</p> <pre><code>pub fn unwrap(self) -&gt; T // \u200b\u8c03\u7528\u200b\u5185\u90e8\u200b\u503c\u200b\uff0cNone\u200b\u5219\u200bpanics\npub fn unwrap_or(self, default: T) -&gt; T // None\u200b\u8fd4\u56de\u200b\u9ed8\u8ba4\u200b\npub fn unwrap_or_else&lt;F&gt;(self, f: F) -&gt; T// \u200b\u8f93\u51fa\u200b\u5167\u90e8\u503c\u200b\u7684\u200b\u67d0\u4e2a\u200b\u51fd\u6570\u200b\u7ed3\u679c\u200b\n</code></pre>"},{"location":"Archive/Haskell/13.%20Monads.html#42-liftm","title":"4.2 liftM\u200b\u7684\u200b\u5bf9\u5e94","text":"<p>C++\u200b\u4e2d\u200b\u597d\u50cf\u200b\u6ca1\u6709\u200b\u4e00\u4e2a\u200b\u5185\u7f6e\u200b\u7684\u200b\u5bf9\u5e94\u200b\u51fd\u6570\u200b\u3002</p> <p><code>liftM</code>\u200b\u5728\u200bRust\u200b\u4e2d\u200b\u5b8c\u5168\u200b\u7b49\u4e8e\u200b\u4ee5\u4e0b\u200b\u51fd\u6570\u200b\u3002</p> <pre><code>pub fn map&lt;U, F&gt;(self, f: F) -&gt; Option&lt;U&gt;\nwhere\n    F: FnOnce(T) -&gt; U,\n</code></pre>"},{"location":"Archive/Haskell/13.%20Monads.html#43-stream","title":"4.3 Stream \u200b\u6d41","text":"<p>C++\u200b\u7684\u200b<code>optional</code>\u200b\u7c7b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200bMonadic\u200b\u64cd\u4f5c\u200b\u6709\u200b</p> <pre><code>and_then(C++23)  \u200b\u5982\u679c\u200boptional\u200b\u6709\u503c\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b\u7ed9\u5b9a\u200b\u51fd\u6570\u200b\u7684\u200b\u7ed3\u679c\u200b\uff0c\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b\u7a7a\u200boptional (\u200b\u516c\u5171\u200b\u6210\u5458\u200b\u51fd\u6570\u200b)\n==&gt; &gt;&gt;= \n\ntransform(C++23) \u200b\u5982\u679c\u200boptional\u200b\u6709\u503c\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b\u5305\u542b\u200b\u8f6c\u6362\u200b\u7684\u200b\u503c\u200b\u7684\u200boptinal\uff0c\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b\u7a7a\u200boptional (\u200b\u516c\u5171\u200b\u6210\u5458\u200b\u51fd\u6570\u200b)\n==&gt;  &gt;&gt; \n\nor_else(C++23)  \u200b\u5982\u679c\u200boptional\u200b\u6709\u503c\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b\u5b83\u200b\u672c\u8eab\u200b\uff0c\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b\u7ed9\u5b9a\u200b\u51fd\u6570\u200b\u7684\u200b\u7ed3\u679c\u200b (\u200b\u516c\u5171\u200b\u6210\u5458\u200b\u51fd\u6570\u200b)\n</code></pre> <p>\u200b\u8fd9\u4e9b\u200b\u548c\u200bRust\u200b\u4e2d\u200b\u7ed9\u51fa\u200b\u7684\u200b\u5e94\u8be5\u200b\u8bf4\u200b\u662f\u200b\u5b8c\u5168\u76f8\u540c\u200b\u3002</p> <pre><code>///////////////////////////////////////////////////////////////////\npub fn and_then&lt;U, F&gt;(self, f: F) -&gt; Option&lt;U&gt;\nwhere\n    F: FnOnce(T) -&gt; Option&lt;U&gt;, // (&gt;&gt;=) :: Monad m =&gt; m a -&gt; (a -&gt; m b) -&gt; m b\n///////////////////////////////////////////////////////////////////\n\nfn sq_then_to_string(x: u32) -&gt; Option&lt;String&gt; {\n    x.checked_mul(x).map(|sq| sq.to_string())\n}\n\nassert_eq!(Some(2).and_then(sq_then_to_string), Some(4.to_string()));  // \u200b\u6709\u503c\u200b\uff0c\u200b\u5bf9\u200b\u8be5\u503c\u200b\u8c03\u7528\u51fd\u6570\u200b\uff0c\u200b\u5f97\u5230\u200b\u5e73\u65b9\u200b\nassert_eq!(Some(1_000_000).and_then(sq_then_to_string), None); // \u200b\u6709\u503c\u200b\uff0c\u200b\u5bf9\u200b\u8be5\u503c\u200b\u8c03\u7528\u51fd\u6570\u200b\uff0c\u200b\u8d85\u51fa\u8303\u56f4\u200bchecked_mul\u200b\u5931\u8d25\u200b\uff0c\u200b\u8fd4\u56de\u200bNone\nassert_eq!(None.and_then(sq_then_to_string), None); // \u200b\u6ca1\u6709\u200b\u503c\u200b\uff0c\u200b\u4e0d\u200b\u8c03\u7528\u200b\n\n///////////////////////////////////////////////////////////////////\npub fn or_else&lt;F&gt;(self, f: F) -&gt; Option&lt;T&gt;\nwhere\n    F: FnOnce() -&gt; Option&lt;T&gt;, \n///////////////////////////////////////////////////////////////////\n\nfn nobody() -&gt; Option&lt;&amp;'static str&gt; { None }\nfn vikings() -&gt; Option&lt;&amp;'static str&gt; { Some(\"vikings\") }\n\nassert_eq!(Some(\"barbarians\").or_else(vikings), Some(\"barbarians\")); // Some(\"barbarians\")\u200b\u6709\u503c\u200b\uff0c\u200b\u4e0d\u200b\u88ab\u200b\u6539\u53d8\u200b\nassert_eq!(None.or_else(vikings), Some(\"vikings\")); // None\u200b\u6ca1\u6709\u200b\u503c\u200b\uff0c\u200b\u8c03\u7528\u200bvikings\uff0c\u200b\u53d8\u6210\u200bvikings\nassert_eq!(None.or_else(nobody), None);  // None\u200b\u6ca1\u6709\u200b\u503c\u200b\uff0c\u200b\u8c03\u7528\u200bnobody\uff0c\u200b\u8fd8\u662f\u200bNone\n</code></pre> method self function input function result output and_then None (not   provided) (not   evaluated) None and_then Some(x) x None None and_then Some(x) x Some(y) Some(y) or_else None (not   provided) None None or_else None (not   provided) Some(y) Some(y) or_else Some(x) (not   provided) (not   evaluated) Some(x) <p><code>and_then</code>\u200b\u5c31\u200b\u5f88\u200b\u7c7b\u4f3c\u200b<code>&gt;&gt;=</code>\uff0c\u200b\u53ef\u4ee5\u200b\u53cd\u590d\u200b\u4f7f\u7528\u200b\u5411\u200b\u540e\u200b\u7ed1\u5b9a\u200b\u3002</p>"},{"location":"Archive/Haskell/13.%20Monads.html#43","title":"4.3","text":""},{"location":"Archive/Haskell/14.%20%E5%B8%B8%E7%94%A8%E5%BA%93.html","title":"\u5e38\u7528\u200b\u5e93","text":""},{"location":"Archive/Haskell/14.%20%E5%B8%B8%E7%94%A8%E5%BA%93.html#1-textbytestring","title":"1 Text\u200b\u5e93\u200b\u548c\u200bByteString\u200b\u5e93","text":"<p>\u200b\u4e4b\u524d\u200b\u6240\u5b66\u200b\u7684\u200b<code>String</code>\u200b\u5176\u5b9e\u200b\u662f\u200b<code>Char</code>\u200b\u7684\u200b\u522b\u540d\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b\u5b57\u7b26\u200b\u7684\u200b\u4e00\u4e2a\u200b\u94fe\u8868\u200b\u3002\u200b\u5b9e\u9645\u200b\u4f7f\u7528\u200b\u8d77\u6765\u200b\u5176\u5b9e\u200b\u662f\u200b\u975e\u5e38\u200b\u4f4e\u6548\u200b\u7684\u200b\uff0c\u200b\u66f4\u200b\u9ad8\u6548\u200b\u7684\u200b\u5e93\u200b\u6709\u200b:     - <code>Data.Text</code>\uff0c\u200b\u8868\u793a\u200b\u4e00\u7cfb\u5217\u200bUnicode\u200b\u5b57\u7b26\u200b\uff0c\u200b\u64cd\u4f5c\u200b\u548c\u200b<code>String</code>\u200b\u57fa\u672c\u76f8\u540c\u200b\uff0c\u200b\u53ea\u662f\u200b\u66f4\u52a0\u200b\u9ad8\u6548\u200b\u3002\u200b\u901a\u5e38\u200b\u7528\u6765\u200b\u5904\u7406\u200b\u6587\u672c\u200b\u3002     - <code>Data.ByteString</code>\uff0c\u200b\u7528\u6765\u200b\u8868\u793a\u200b\u4e00\u7cfb\u5217\u200b\u5b57\u8282\u200b\uff0c\u200b\u901a\u5e38\u200b\u7528\u6765\u200b\u5904\u7406\u200b\u4e8c\u8fdb\u5236\u200b\u6570\u636e\u200b\u3002</p> <p>\u200b\u53e6\u5916\u200b\uff0c\u200b\u4e24\u79cd\u200b\u7c7b\u578b\u200b\u90fd\u200b\u6709\u200b\u666e\u901a\u200b\u7248\u672c\u200b-&gt;strict\uff08\u200b\u8981\u6c42\u200b\u6574\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u4e00\u6b21\u200b\u88c5\u5165\u200b\u5185\u5b58\u200b\uff09\u200b\u548c\u200blazy\uff08\u200b\u80fd\u591f\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u5c0f\u200b\u7684\u200b\u5185\u5b58\u7a7a\u95f4\u200b\u6765\u200b\u6d41\u4f20\u200b\u5927\u4e8e\u200b\u5185\u5b58\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\uff09\u200b\u548c\u200b\u4e24\u79cd\u200b\u3002\u200b\u5bfc\u5165\u200b\u5206\u522b\u200b\u662f\u200b<code>import qualified Data.Text</code>\u200b\u548c\u200b<code>import qualified Data.Text.Lazy</code>\u3002\u200b\u6240\u6709\u200b\u6a21\u5757\u200b\u7684\u200bAPI\u200b\u51e0\u4e4e\u200b\u76f8\u540c\u200b\u3002</p>"},{"location":"Archive/Haskell/14.%20%E5%B8%B8%E7%94%A8%E5%BA%93.html#11-datatext","title":"1.1 <code>Data.Text</code>\u200b\u4f8b\u5b50","text":"<ol> <li> <p>\u200b\u4f7f\u7528\u200b<code>pack</code>\u200b\u51fd\u6570\u200b\u5c06\u200b\u666e\u901a\u200bString\u200b\u8f6c\u6362\u6210\u200bText\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>Prelude&gt; import qualified Data.Text as T\nPrelude T&gt; :t T.pack \nT.pack :: String -&gt; T.Text\nPrelude T&gt; phrase = T.pack \"brevity is the soul of wit\"\nPrelude T&gt; :t phrase\nphrase :: T.Text\nPrelude T&gt; phrase\n\"brevity is the soul of wit\"\n</code></pre> </li> <li> <p>\u200b\u4f7f\u7528\u200b<code>Data.Text</code>\u200b\u4e2d\u200b\u7684\u200b\u4e0d\u540c\u200b\u51fd\u6570\u200b</p> <pre><code>Prelude T&gt; :t T.length -- \u200b\u957f\u5ea6\u200b\nT.length :: T.Text -&gt; Int\nPrelude T&gt; T.length phrase \n26\nPrelude T&gt; T.head phrase -- \u200b\u53d6\u9996\u200b\n'b'\nPrelude T&gt; T.take 4 phrase -- \u200b\u4ece\u200b\u5934\u90e8\u200b\u53d6\u200b4\u200b\u957f\u200b\n\"brev\"\nPrelude T&gt; :t T.words -- \u200b\u6309\u200b\u7a7a\u683c\u200b\u62c6\u5206\u200b\nT.words :: T.Text -&gt; [T.Text]\nPrelude T&gt; T.words phrase\n[\"brevity\",\"is\",\"the\",\"soul\",\"of\",\"wit\"]\nPrelude T&gt; :t T.map -- \u200b\u5b57\u7b26\u200b\u66ff\u6362\u200b\nT.map :: (Char -&gt; Char) -&gt; T.Text -&gt; T.Text\nPrelude T&gt; T.map (\\c -&gt; if c=='o' then '0' else c) phrase\n\"brevity is the s0ul 0f wit\"\n</code></pre> </li> <li> <p><code>Text</code>\u200b\u7684\u200b<code>Monoid</code>\u200b\u5b9e\u4f8b\u200b\uff08\u200b\u62fc\u63a5\u200b\u64cd\u4f5c\u200b\uff09</p> <pre><code>Prelude T&gt; phrase &lt;&gt; phrase\n\"brevity is the soul of witbrevity is the soul of wit\"\nPrelude T&gt; T.append phrase phrase -- T.append :: T.Text -&gt; T.Text -&gt; T.Text\n\"brevity is the soul of witbrevity is the soul of wit\"\nPrelude T&gt; T.concat [phrase,phrase,phrase] -- T.concat :: [T.Text] -&gt; T.Text\n\"brevity is the soul of witbrevity is the soul of witbrevity is the soul of wit\"\n</code></pre> </li> <li> <p>\u200b\u9012\u5f52\u200b\u4e2d\u200b\u5bf9\u200b<code>Text</code>\u200b\u5bf9\u8c61\u200b\u8fdb\u884c\u200b\u6a21\u5f0f\u5339\u914d\u200b     \u200b\u4f7f\u7528\u200b\u51fd\u6570\u200b<code>T.uncons :: T.Text -&gt; Maybe (Char, T.Text)</code>\uff0c\u200b\u5c06\u200b\u4e00\u4e2a\u200b<code>Text</code>\u200b\u51fd\u6570\u200b\u5206\u4e3a\u200b\u5934\u200b\u5b57\u7b26\u200b\u3001\u200b\u5c3e\u4e32\u200b\u3002</p> </li> </ol> <pre><code> countLetter :: Char -&gt; T.Text -&gt; Int\n countLetter c t =\n case T.uncons t of\n     Nothing -&gt; 0\n     Just (x,rest) -&gt; (if x == c then 1 else 0) + countLetter c rest\n</code></pre> <ol> <li> <p>\u200b\u4f7f\u7528\u200b<code>Text</code>\u200b\u7684\u200blazy\u200b\u548c\u200bstrict\u200b\u53d8\u79cd\u200b</p> <p><code>Strict</code>\u200b\u7c7b\u578b\u200b\u4e0d\u80fd\u200b\u5b58\u50a8\u200b\u65e0\u9650\u200b\u957f\u200b\u5b57\u7b26\u200b\u3002</p> <pre><code>Prelude T&gt; T.head (T.pack (repeat 'x'))\n-- \u200b\u4f7f\u7528\u200bStrict\u200b\u7248\u672c\u200b\u7684\u200bText\u200b\u6c38\u4e0d\u200b\u8fd4\u56de\u200b\nPrelude T&gt; import qualified Data.Text.Lazy as TL\nPrelude T TL&gt; TL.head (TL.pack (repeat 'x'))\n'x'\n-- \u200b\u800c\u200b\u4f7f\u7528\u200blazy\u200b\u7248\u672c\u200b\u7684\u200b\u53ef\u4ee5\u200b\n</code></pre> <p>\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u5b9e\u9645\u200b\u95ee\u9898\u200b\u662f\u200b\uff0c\u200b\u5728\u200b\u4f7f\u7528\u200b\u5e93\u65f6\u200b\uff0c\u200b\u53ef\u80fd\u200b\u4f1a\u8bef\u200b\u5339\u914d\u200bstrict\u200b\u548c\u200blazy\u200b\u7684\u200b<code>Text</code>\u3002\u200b\u901a\u8fc7\u200btoStrict\u200b\u6216\u200bfromStrict\u200b\u53ef\u4ee5\u200b\u5728\u200b\u4e8c\u8005\u200b\u95f4\u200b\u8fdb\u884c\u200b\u8f6c\u6362\u200b\u3002</p> </li> </ol>"},{"location":"Archive/Haskell/14.%20%E5%B8%B8%E7%94%A8%E5%BA%93.html#12-bytestring","title":"1.2 <code>ByteString</code>\u200b\u4f8b\u5b50","text":"<p><code>ByteString</code>\u200b\u548c\u200b<code>Text</code>\u200b\u63d0\u4f9b\u200b\u7684\u200bAPI\u200b\u51e0\u4e4e\u200b\u76f8\u540c\u200b\u3002\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\u7684\u200b\u662f\u200b<code>ByteString</code>\u200b\u662f\u200b\u7531\u200b<code>Word8</code>\u200b\u7684\u200b\u503c\u6765\u200b\u6784\u5efa\u200b\u7684\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b<code>Char</code>\u200b\u503c\u200b\u3002<code>Word8</code>\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b0~255\u200b\u4e4b\u95f4\u200b\u7684\u200b\u503c\u6765\u200b\u8868\u793a\u200b\u4e00\u4e2a\u200b\u5b57\u8282\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u67d0\u4e2a\u200b\u5177\u4f53\u200b\u5b57\u7b26\u200b\u3002</p> <pre><code>Prelude Data.Word&gt; import qualified Data.ByteString as B\nPrelude Data.Word B&gt; binary = B.pack [99,111,102,102,101,101]\nPrelude Data.Word B&gt; binary\n\"coffee\"\nghci&gt; binary = B.pack [99,111,102,102,101,253]\nghci&gt; binary\n\"coffe\\253\"\n</code></pre> <p>\u200b\u8fd9\u91cc\u200b\u503c\u5f97\u6ce8\u610f\u200b\u7684\u200b\u70b9\u200b\u662f\u200b\uff0c<code>ByteString</code>\u200b\u5bf9\u8c61\u200b\u4e5f\u200b\u662f\u200b\u4ee5\u200b<code>String</code>\u200b\u7684\u200b\u65b9\u5f0f\u200b\u6253\u5370\u200b\u51fa\u6765\u200b\uff0c\u200b\u4e0d\u662f\u200b\u672c\u6765\u200b\u5b58\u50a8\u200b\u7684\u200b\u5b57\u7b26\u200b\u6d41\u200b\u3002</p> <p>!!! Note <code>Text</code>\u200b\u548c\u200b<code>ByteString</code>\u200b\u7684\u200b\u533a\u522b\u200b     - \u200b\u5f53\u200b\u6211\u4eec\u200b\u5bf9\u200b<code>Text</code>\u200b\u8fdb\u884c\u200b\u64cd\u4f5c\u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u9010\u4e2a\u200b\u5b57\u7b26\u200b\u8fdb\u884c\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u4e0d\u7ba1\u200b\u8fd9\u4e9b\u200b\u5b57\u7b26\u200b\u662f\u200b\u4ec0\u4e48\u200b\uff0c\u200b\u4e5f\u200b\u4e0d\u7ba1\u200b\u5b83\u4eec\u200b\u662f\u200b\u5982\u4f55\u200b\u7f16\u7801\u200b\u7684\u200b\u3002\u200b\u5f53\u200b\u6211\u4eec\u200b\u5bf9\u200b<code>ByteString</code>\u200b\u8fdb\u884c\u200b\u64cd\u4f5c\u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u5bf9\u200b\u5b57\u8282\u200b\u8fdb\u884c\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u800c\u200b\u4e0d\u7ba1\u200b\u8fd9\u4e9b\u200b\u5b57\u8282\u200b\u4ee3\u8868\u200b\u4ec0\u4e48\u200b\u3002\u200b\u5176\u200b\u672c\u8d28\u533a\u522b\u200b\u5728\u4e8e\u200b\u5b57\u8282\u200b\u7684\u200b\u5206\u7ec4\u200b\u548c\u200b\u89e3\u91ca\u200b\u65b9\u5f0f\u200b\u3002     - \u200b\u4f7f\u7528\u200b\u51fd\u6570\u200b<code>Data.Text.Encoding.encodeUtf8 :: Text -&gt; ByteString</code> \u200b\u53ef\u4ee5\u200b\u5c06\u200b<code>Text</code>\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u7684\u200b\u5b57\u7b26\u200b\u8f6c\u6362\u6210\u200bUTF-8\u200b\u7f16\u7801\u200b\u7684\u200b<code>ByteString</code>\u200b\u5bf9\u8c61\u200b\u3002     - \u200b\u5904\u7406\u200bASCII\u200b\u6587\u672c\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5b57\u7b26\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u7ffb\u8bd1\u6210\u200b\u5355\u4e2a\u200b\u5b57\u8282\u200b\uff0c\u200b\u90a3\u4e48\u200b\u4f7f\u7528\u200b\u8fd9\u200b\u4e24\u79cd\u200b\u7c7b\u578b\u200b\u662f\u200b\u5b8c\u5168\u200b\u7b49\u4ef7\u200b\u7684\u200b\u3002\u200b\u5728\u200b<code>Data.ByteString.Char8</code> \u200b\u548c\u200b <code>Data.ByteString.Lazy.Char8</code>\u200b\u4e2d\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u80fd\u591f\u200b\u5728\u200b<code>ByteStrings</code>\u200b\u4e2d\u200b\u4f7f\u7528\u200b<code>Char</code>\u200b\u503c\u200b\u800c\u200b\u4e0d\u662f\u200b<code>Word8</code>\u200b\u503c\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002\uff08\u200b\u4e00\u5b9a\u200b\u8981\u662f\u200bASCII!!\uff09</p>"},{"location":"Archive/Haskell/14.%20%E5%B8%B8%E7%94%A8%E5%BA%93.html#2-network","title":"2 Network\u200b\u5e93","text":"<p>\u200b\u5728\u200bHaskell\u200b\u4e2d\u200b\u5173\u4e8e\u200b\u7f51\u7edc\u200b\u7684\u200b\u6807\u51c6\u200b\u4f4e\u7ea7\u200b\u7ec4\u4ef6\u200b\u88ab\u200b\u79f0\u4e3a\u200b<code>WAI</code>\u200b\u548c\u200b<code>Warp</code>\u3002</p> <ul> <li><code>WAI</code>\uff0c\u200b\u5373\u200bWeb\u200b\u5e94\u7528\u200b\u63a5\u53e3\u200b(Web Application Interface)\uff0c\u200b\u4e3a\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u79cd\u200b\u5b9a\u4e49\u200b\u5982\u4f55\u200b\u5904\u7406\u200bHTTP\u200b\u8bf7\u6c42\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002</li> <li><code>Warp</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u7684\u200bHTTP\u200b\u670d\u52a1\u5668\u200b\uff0c\u200b\u8fd0\u884c\u200b\u6211\u4eec\u200b\u7528\u200bWAI\u200b\u5b9a\u4e49\u200b\u7684\u200b\u903b\u8f91\u200b\u3002</li> </ul>"},{"location":"Archive/Haskell/14.%20%E5%B8%B8%E7%94%A8%E5%BA%93.html#21-http","title":"2.1 \u200b\u7b80\u5355\u200b\u7684\u200bHTTP\u200b\u670d\u52a1\u5668\u200b\u4f8b\u5b50","text":"<pre><code>module Examples.HelloServer where\n\nimport qualified Data.ByteString.Lazy.Char8 as BL\nimport Network.HTTP.Types.Status (status200)\nimport Network.Wai (Application, responseLBS)\nimport Network.Wai.Handler.Warp (run)\n\nport :: Int\nport = 3421\n\nmain :: IO ()\nmain = run port application\n\n-- type Application = Request -&gt; (Response -&gt; IO ResponseReceived) -&gt; IO ResponseReceived\napplication :: Application\napplication request respond =\n  respond (responseLBS status200 [] (BL.pack \"Hello World!\"))\n</code></pre> <p><code>Application</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\u522b\u540d\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5b9e\u73b0\u200b\u7f51\u7edc\u200b\u670d\u52a1\u5668\u200b\u7684\u200b\u903b\u8f91\u200b\u3002<code>Warp</code>\u200b\u7684\u200b<code>run</code>\u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u8fd0\u884c\u200b<code>Application</code>\u3002</p> <pre><code>run :: Port -&gt; Application -&gt; IO ()\ntype Application = Request -&gt; (Response -&gt; IO ResponseReceived) -&gt; IO ResponseReceived\n</code></pre> <p><code>Application</code>\u200b\u662f\u200b\u4e00\u4e2a\u200bIO\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u5b83\u200b\u7684\u200b\u53c2\u6570\u200b\u662f\u200b\u4e00\u4e2a\u200b<code>Request</code>\u200b\u7c7b\u578b\u200b\u7684\u200b\u8bf7\u6c42\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u4e00\u4e2a\u200b<code>IO</code>\u200b\u64cd\u4f5c\u200b<code>reply :: Response -&gt; IO ResponseReceived</code>\uff08\u200b\u4e00\u4e2a\u200b\u56de\u8c03\u200b\u51fd\u6570\u200b\uff0c\u200b\u5141\u8bb8\u200b\u6211\u4eec\u200b\u56de\u8c03\u200b\u5230\u200b\u8c03\u7528\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u7684\u200b\u5e93\u200b\u4e2d\u200b\uff09\u3002<code>Application</code>\u200b\u64cd\u4f5c\u200b\u5fc5\u987b\u200b\u4ea7\u751f\u200b\u4e0e\u200b<code>reply</code>\u200b\u76f8\u540c\u200b\u7684\u200b\u7279\u6b8a\u200b<code>ResponseReceived</code>\u200b\u7c7b\u200b\u3002</p> <p>\u200b\u4ee5\u4e0a\u200b\u4f8b\u5b50\u200b\u4e2d\u200b\u7684\u200bServer\u200b\u5176\u5b9e\u200b\u5c31\u662f\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b<code>Request</code> \u200b\u548c\u200b\u4e00\u4e2a\u200b<code>Response</code>\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\u7684\u200b<code>Application</code>\u3002</p> <p>\u200b\u5728\u200b<code>WAI</code>\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u5f88\u591a\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b<code>Port</code>\uff08<code>Int</code>\u200b\u7684\u200b\u522b\u540d\u200b\uff09, <code>Request</code>, <code>Response</code>, <code>Status</code>\u200b\u8fd9\u6837\u200b\u7684\u200b\u7c7b\u578b\u200b\u6765\u200b\u8868\u793a\u200bHTTP\u200b\u4e2d\u200b\u7684\u200b\u6982\u5ff5\u200b\u3002\u200b\u6bd4\u5982\u200b<code>responseLBS</code>\u200b\u51fd\u6570\u200b\u7684\u200b\u5b9a\u4e49\u200b\uff1a</p> <pre><code>responseLBS :: Status -&gt; ResponseHeaders -&gt; ByteString -&gt; Response\n\n-- Status\u200b\u5728\u200b`Network.HTTP.Types.Status`\u200b\u5b9a\u4e49\u200b\n-- ResponseHeaders\u200b\u662f\u200b[Header]\u200b\u7684\u200b\u522b\u540d\u200b\n-- ByteString\u200b\u662f\u200blazy\u200b\u7684\u200b\n-- Respnse\u200b\u5728\u200bNetwok.WAI\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\n</code></pre> <p>\u200b\u4f7f\u7528\u200b<code>pathInfo :: Request -&gt; [Text]</code>\u200b\u80fd\u200b\u6309\u7167\u200b'/'\u200b\u5b57\u7b26\u200b\u5206\u5272\u200b\u51fa\u200b\u8def\u5f84\u200b\u3002</p>"},{"location":"Archive/Haskell/14.%20%E5%B8%B8%E7%94%A8%E5%BA%93.html#3-database-sqlite-simple","title":"3 Database\u200b\u5e93\u200b: sqlite-simple","text":"<p>\u200b\u6240\u6709\u200b\u7684\u200b\u51fd\u6570\u200b\u90fd\u200b\u5728\u200bDatabase.SQLite.Simple\u200b\u4e2d\u200b\u3002\u200b\u4f7f\u7528\u200b<code>open</code>\u200b\u51fd\u6570\u200b\u80fd\u591f\u200b\u6253\u5f00\u200b\u4e00\u4e2a\u200b\u6570\u636e\u5e93\u200b\u6587\u4ef6\u200b\uff0c\u200b\u5b83\u200b\u5b9e\u9645\u4e0a\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5236\u9020\u200b\u4e86\u200b\u4e00\u4e2a\u200b<code>Connection</code>\u200b\u7684\u200b<code>IO</code>\u200b\u64cd\u4f5c\u200b\u3002</p> <pre><code>Prelude&gt; import Database.SQLite.Simple\nPrelude Database.SQLite.Simple&gt; :t open\nopen :: String -&gt; IO Connection\nPrelude Database.SQLite.Simple&gt; db &lt;- open \"example.sqlite\"\n</code></pre> <p>\u200b\u8981\u200b\u8fd0\u884c\u200b\u4e00\u4e2a\u200bSQL\u200b\u67e5\u8be2\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200bIO\u200b\u64cd\u4f5c\u200b<code>query_</code>\uff0c\u200b\u5b83\u200b\u63a5\u6536\u200b\u4e00\u4e2a\u200b<code>Connection</code>\u200b\u548c\u200b\u4e00\u4e2a\u200b<code>Query</code>(<code>Text</code>\u200b\u522b\u540d\u200b)\uff0c\u200b\u5e76\u200b\u4ea7\u751f\u200b\u4e00\u4e2a\u200b<code>Result</code>\u200b\u5217\u8868\u200b\u3002<code>query_</code>\u200b\u7684\u200b\u7ed3\u679c\u200b\u7c7b\u578b\u200b\u662f\u200b\u591a\u6001\u200b\u7684\u200b\uff1a\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u6570\u636e\u5e93\u200b\u4e2d\u200b\u8bfb\u53d6\u200b\u6ee1\u8db3\u200b<code>FromRow</code>\u200b\u7c7b\u578b\u200b\u7684\u200b\u4efb\u4f55\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>Prelude Database.SQLite.Simple&gt; :t query_\nquery_ :: FromRow r =&gt; Connection -&gt; Query -&gt; IO [r]\nPrelude Database.SQLite.Simple&gt; :info Query\nnewtype Query = Query {fromQuery :: Data.Text.Internal.Text}\n    -- Defined in \u2018Database.SQLite.Simple.Types\u2019\n    -- ... rest of output omitted\nPrelude Database.SQLite.Simple&gt; import qualified Data.Text as T\n-- \u200b\u8bfb\u5165\u200b\u4e00\u4e2a\u200bSQL\u200b\u8be2\u95ee\u200b\u5b57\u7b26\u4e32\u200b\nPrelude Database.SQLite.Simple T&gt; q = Query (T.pack \"SELECT 1;\")\n-- \u200b\u6307\u660e\u200b\u8bfb\u5165\u200b\u4e00\u4e2a\u200bInt\uff0c\u200b\u6ca1\u6709\u200b\u7684\u8bdd\u200b\u662f\u200b\u4f1a\u200b\u62a5\u9519\u200b\u7684\u200b\nPrelude Database.SQLite.Simple T&gt; res &lt;- query_ db q :: IO [[Int]]\nPrelude Database.SQLite.Simple T&gt; res\n[[1]]\n</code></pre> <p>sqlite-simole \u200b\u5b9a\u4e49\u200b\u4e86\u200b\u4e24\u79cd\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5206\u522b\u200b\u662f\u200b<code>FromField</code>\u200b\u548c\u200b<code>FromRow</code>\uff0c\u200b\u4ee5\u53ca\u200b\u4ee5\u4e0b\u200b\u4e00\u7cfb\u5217\u200b\u5b9e\u4f8b\u200b\uff1a</p> <pre><code>instance FromField Int\ninstance FromField Bool\ninstance FromField String\ninstance FromField Text\ninstance FromField a =&gt; FromRow [a]\ninstance (FromField a, FromField b) =&gt; FromRow (a,b)\ninstance (FromField a, FromField b, FromField c) =&gt; FromRow (a,b,c)\n\nPrelude Database.SQLite.Simple T&gt; q = Query (T.pack \"SELECT 1, true, 'string';\")\nPrelude Database.SQLite.Simple T&gt; query_ db q :: IO [(Int,Bool,String)]\n[(1,True,\"string\")]\n</code></pre> <p>\u200b\u4e0e\u200b<code>FromField,FromRow</code>\u200b\u76f8\u5bf9\u200b\u5e94\u200b\u7684\u200b\u662f\u200b<code>ToField,ToRow</code>\u3002</p> <pre><code>Prelude Database.SQLite.Simple T&gt; input = (1,\"hello\") :: (Int,String)\nPrelude Database.SQLite.Simple T&gt; parameterized = Query (T.pack \"SELECT ?+1, true, ?;\")\nPrelude Database.SQLite.Simple T&gt; query db parameterized input :: IO [(Int,Bool,String)]\n[(2,True,\"hello\")]\n</code></pre>"},{"location":"Archive/Haskell/2.%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html","title":"\u57fa\u672c\u200b\u6570\u636e\u7c7b\u578b\u200b\u548c\u200b\u8fd0\u7b97\u7b26","text":"<ul> <li>\u200b\u57fa\u672c\u200b\u6570\u636e\u7c7b\u578b\u200b\u548c\u200b\u8fd0\u7b97\u7b26\u200b</li> <li>1 \u200b\u57fa\u7840\u200b\u6570\u636e\u7c7b\u578b\u200b<ul> <li>1.1 Int, Integer, Double, Bool, String</li> <li>1.2 Maybe</li> <li>1.3 Either</li> </ul> </li> <li>2 \u200b\u6570\u636e\u7ed3\u6784\u200b\u7c7b\u578b\u200b<ul> <li>2.1 List</li> <li>2.2 Tuple</li> <li>2.3 Map</li> <li>2.4 Array</li> </ul> </li> <li>3 \u200b\u8fd0\u7b97\u7b26\u200b</li> </ul>"},{"location":"Archive/Haskell/2.%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html#1","title":"1 \u200b\u57fa\u7840\u200b\u6570\u636e\u7c7b\u578b","text":""},{"location":"Archive/Haskell/2.%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html#11-int-integer-double-bool-string","title":"1.1 Int, Integer, Double, Bool, String","text":"<p>Haskell\u200b\u4e2d\u200b\u7684\u200b\u7c7b\u578b\u200b\u4ee5\u200b\u5927\u5199\u5b57\u6bcd\u200b\u5f00\u5934\u200b\uff0c\u200b\u53d8\u91cf\u200b\u548c\u200b\u51fd\u6570\u200b\u4ee5\u200b\u5c0f\u5199\u5b57\u6bcd\u200b\u5f00\u5934\u200b\u3002</p> \u200b\u7c7b\u578b\u200b \u200b\u5b57\u200b\u9762\u503c\u200b \u200b\u7528\u9014\u200b \u200b\u64cd\u4f5c\u200b <code>Int</code> 1, 2, -3 \u200b\u6570\u5b57\u200b\u7c7b\u578b\u200b (\u200b\u6709\u200b\u7b26\u53f7\u200b, 64bit) <code>+, -, *, div, mod</code> <code>Integer</code> 1, -2, 900000000000000000 \u200b\u65e0\u9650\u200b\u6570\u5b57\u200b\u7c7b\u578b\u200b <code>+, -, *, div, mod</code> <code>Double</code> 0.1, 1.2e5 \u200b\u6d6e\u70b9\u6570\u200b\u7c7b\u578b\u200b <code>+, -, *, /, sqrt</code> <code>Bool</code> True, False \u200b\u771f\u503c\u200b <code>&amp;&amp;,                |  | , not</code> <code>String</code> aka <code>[Char]</code> \"abcd\", \"\" \u200b\u5b57\u7b26\u4e32\u200b <code>reverse, ++</code> <p>\u200b\u7279\u6b8a\u200b\u8bf4\u660e\u200b:     - <code>(^)</code> \u200b\u5e42\u200b\u8fd0\u7b97\u7b26\u200b,\u200b\u5bf9\u5e94\u200bPython\u200b\u4e2d\u200b\u7684\u200b<code>**</code>.     - <code>div</code>,\u200b\u6c42\u5546\u200b\u8fd0\u7b97\u7b26\u200b,\u200b\u9700\u8981\u200b\u4e24\u4e2a\u200b\u6574\u6570\u200b\u7c7b\u200b\u53c2\u6570\u200b. \u200b\u4f7f\u7528\u200b\u65b9\u5f0f\u200b\u4e3a\u200b<code>div 13 5</code>\u200b\u6216\u200b<code>13`div`5</code>.     - <code>mod</code>,\u200b\u53d6\u6a21\u200b\u8fd0\u7b97\u7b26\u200b,\u200b\u9700\u8981\u200b\u4e24\u4e2a\u200b\u6574\u6570\u200b\u7c7b\u200b\u53c2\u6570\u200b. \u200b\u4f7f\u7528\u200b\u65b9\u5f0f\u200b\u4e3a\u200b<code>mod 13 5</code>\u200b\u6216\u200b<code>13`mod`5</code>.     - <code>(++)</code>,\u200b\u5b57\u7b26\u4e32\u200b\u62fc\u63a5\u200b\u8fd0\u7b97\u7b26\u200b,<code>\"ab\" ++ \"cd\" = \"abcd\"</code>.</p>"},{"location":"Archive/Haskell/2.%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html#12-maybe","title":"1.2 Maybe","text":""},{"location":"Archive/Haskell/2.%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html#13-either","title":"1.3 Either","text":""},{"location":"Archive/Haskell/2.%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html#2","title":"2 \u200b\u6570\u636e\u7ed3\u6784\u200b\u7c7b\u578b","text":""},{"location":"Archive/Haskell/2.%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html#21-list","title":"2.1 List","text":"<p>Haskell\u200b\u4e2d\u200b\u7684\u200b<code>List</code>\u200b\u5c31\u662f\u200b\u4e00\u7cfb\u5217\u200b\u76f8\u540c\u200b\u6570\u636e\u200b\u7684\u200b\u96c6\u5408\u200b\uff0c\u200b\u5176\u200b\u7c7b\u578b\u200b\u8868\u793a\u200b\u4e3a\u200b<code>[type]</code>\uff0c\u200b\u4f8b\u5982\u200b</p> <pre><code>[True\uff0cTrue\uff0cFalse] :: [Bool]\n[\"Moi\"\uff0c\"Hei\"] :: [String]\n[] :: [a]                   -- more about this later\n[[1,2]\uff0c[3,4]] :: [[Int]]    -- \u200b\u5143\u7d20\u200b\u4e3a\u200b\u5217\u8868\u200b\u7684\u200b\u5217\u8868\u200b\n[1..7] :: [Int]             -- range \u200b\u8bed\u6cd5\u200b\uff0c\u200b\u503c\u4e3a\u200b [1\uff0c2\uff0c3\uff0c4\uff0c5\uff0c6\uff0c7]\n</code></pre> <p><code>String</code>\u200b\u7c7b\u578b\u200b\u662f\u200b<code>[Char]</code>\u200b\u7684\u200b\u522b\u540d\u200b\u3002</p> <p>Haskell\u200b\u5e93\u5185\u200b\u7f6e\u200b\u7684\u200b\u5bf9\u200b<code>List</code>\u200b\u7684\u200b\u64cd\u4f5c\u200b\u622a\u65ad\u200b\u3001\u200b\u62fc\u63a5\u200b\u5982\u4e0b\u200b</p> <pre><code>head :: [a] -&gt; a            -- \u200b\u8fd4\u56de\u200b\u7b2c\u4e00\u4e2a\u200b\u5143\u7d20\u200b\ntail :: [a] -&gt; [a]          -- \u200b\u8fd4\u56de\u200b\u9664\u200b\u7b2c\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u5176\u4ed6\u200b\u5143\u7d20\u200b\ninit :: [a] -&gt; [a]          -- \u200b\u8fd4\u56de\u200b\u9664\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u5176\u4ed6\u200b\u5143\u7d20\u200b\ntake :: Int -&gt; [a] -&gt; [a]   -- \u200b\u8fd4\u56de\u200b\u524d\u200bn\u200b\u4e2a\u200b\u5143\u7d20\u200b\ndrop :: Int -&gt; [a] -&gt; [a]   -- \u200b\u8fd4\u56de\u200b\u9664\u4e86\u200b\u524d\u200bn\u200b\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u5176\u4ed6\u200b\u5143\u7d20\u200b\n(!!) :: [a] -&gt; Int -&gt; a     -- \u200b\u8fd4\u56de\u200b\u4e0b\u6807\u200b\u4e3a\u200bn\u200b\u7684\u200b\u5143\u7d20\u200b\n(++) :: [a] -&gt; [a] -&gt; [a]   -- \u200b\u62fc\u63a5\u200b\u5217\u8868\u200b\n(:)  :: a -&gt; [a] -&gt; [a]     -- \u200b\u62fc\u63a5\u200b\u5355\u4e2a\u200b\u5143\u7d20\u200b\u5230\u200b\u5217\u8868\u200b\u524d\u200b([x] ++ xs)\n</code></pre> <p>\u200b\u540c\u65f6\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u5bf9\u200b\u5217\u8868\u200b\u505a\u200b\u4e00\u4e9b\u200b\u57fa\u672c\u200b\u5224\u65ad\u200b</p> <pre><code>(==) :: [a] -&gt; [a] -&gt; Bool  -- \u200b\u5224\u65ad\u200b\u4e24\u200b\u5217\u8868\u200b\u662f\u5426\u200b\u76f8\u7b49\u200b\nelem :: a -&gt; [a] -&gt; Bool    -- \u200b\u5224\u65ad\u200b\u67d0\u4e2a\u200b\u503c\u200b\u662f\u5426\u200b\u5728\u200b\u5217\u8868\u200b\u4e2d\u200b\nnull :: [a] -&gt; Bool         -- \u200b\u5224\u65ad\u200b\u5217\u8868\u200b\u662f\u5426\u200b\u4e3a\u7a7a\u200b\nlength :: [a] -&gt; Int        -- \u200b\u8fd4\u56de\u200b\u5217\u8868\u200b\u957f\u5ea6\u200b\n</code></pre>"},{"location":"Archive/Haskell/2.%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html#22-tuple","title":"2.2 Tuple","text":"<p><code>Tuple</code>\u200b\u53ef\u4ee5\u200b\u628a\u200b\u591a\u4e2a\u200b\u4e0d\u540c\u200b\u7684\u200b\u503c\u200b\u7ed1\u5b9a\u200b\u5728\u200b\u4e00\u8d77\u200b,\u200b\u548c\u200b<code>list</code>\u200b\u4e0d\u540c\u200b\u7684\u200b\u662f\u200b,<code>Tuple</code>\u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\u53ef\u4ee5\u200b\u662f\u200b\u4e0d\u540c\u200b\u7684\u200b\u7c7b\u578b\u200b.\u200b\u4f8b\u5982\u200b</p> <pre><code>(String,String) (\"Hello\",\"World!\")\n(Int,Bool)      (1,True)\n(Int,Int,Int)   (4,0,3)\n</code></pre> <p>\u200b\u5bf9\u4e8e\u200b\u4e8c\u5143\u200b\u7ec4\u200b\u6765\u8bf4\u200b,\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>fst</code>\u200b\u548c\u200b<code>snd</code>\u200b\u6765\u200b\u83b7\u5f97\u200b\u5176\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b. \u200b\u5bf9\u4e8e\u200b\u66f4\u200b\u5927\u578b\u200b\u7684\u200b\u5143\u7ec4\u200b\u6765\u8bf4\u200b,\u200b\u6700\u200b\u65b9\u4fbf\u200b\u7684\u200b\u65b9\u5f0f\u200b\u662f\u200b\u4f7f\u7528\u200b\u6a21\u5f0f\u5339\u914d\u200b</p> <pre><code>fst :: (a, b) -&gt; a\nsnd :: (a, b) -&gt; b\n</code></pre> <p>\u200b\u4f7f\u7528\u200b <code>zip,unzip,partition</code>\u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u8ba9\u200b <code>Tuple</code> \u200b\u548c\u200b <code>List</code>\u200b\u8fdb\u884c\u200b\u7ed3\u5408\u200b</p> <pre><code>zip :: [a] -&gt; [b] -&gt; [(a, b)]    -- \u200b\u4e24\u4e2a\u200b\u5217\u8868\u200b\u5408\u6210\u200b\u4e00\u4e2a\u4e8c\u5143\u200b\u7ec4\u200b\u5217\u8868\u200b\nunzip :: [(a, b)] -&gt; ([a], [b])  -- \u200b\u4e8c\u5143\u200b\u7ec4\u200b\u5217\u8868\u200b\u62c6\u200b\u5206\u6210\u200b\u4e24\u4e2a\u200b\u5217\u8868\u200b\npartition :: (a -&gt; Bool) -&gt; [a] -&gt; ([a], [a])    -- \u200b\u6839\u636e\u200b\u5224\u65ad\u200b\u6761\u4ef6\u200b,\u200b\u5c06\u200b\u4e00\u4e2a\u200b\u5217\u8868\u200b\u5206\u6210\u200b\u6ee1\u8db3\u200b/\u200b\u4e0d\u200b\u6ee1\u8db3\u200b\u4e24\u4e2a\u200b\u5217\u8868\u200b,\u200b\u5408\u6210\u200b\u4e00\u4e2a\u200b\u5143\u7ec4\u200b\n\n-- zip [1,2,3] [True,False,True]\n--   ==&gt; [(1,True),(2,False),(3,True)]\n-- unzip [(\"Fred\",1), (\"Jack\",10), (\"Helen\",13)]\n--   ==&gt; ([\"Fred\",\"Jack\",\"Helen\"],[1,10,13])\n-- partition (&gt;0) [-1,1,-4,3,2,0]\n--   ==&gt; ([1,3,2],[-1,-4,0])\n</code></pre>"},{"location":"Archive/Haskell/2.%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html#23-map","title":"2.3 Map","text":"<p>\u200b\u548c\u200bPython\u200b\u4e2d\u200b\u7684\u200b<code>dict</code>\u200b\u7c7b\u4f3c\u200b,<code>Map</code>\u200b\u662f\u200b\u952e\u503c\u200b\u5bf9\u200b\u7684\u200b\u641c\u7d22\u200b\u6811\u200b. \u200b\u9700\u8981\u200b\u901a\u8fc7\u200b<code>import qualified Data.Map as Map</code>\u200b\u6a21\u5757\u200b\u5bfc\u5165\u200b.</p> <p><code>Map</code>\u200b\u4e2d\u200b\u7684\u200b\u51e0\u4e2a\u200b\u91cd\u8981\u200b\u51fd\u6570\u200b\u5982\u4e0b\u200b(\u200b\u5176\u4e2d\u200b\u7684\u200b<code>Ord k =&gt;</code>\u200b\u7684\u200b\u542b\u4e49\u200b\u5728\u200b\u7b2c\u200b5\u200b\u7ae0\u200b class\u200b\u4ecb\u7ecd\u200b,\u200b\u662f\u200b\u5bf9\u4e8e\u200b\u8f93\u5165\u200b\u53c2\u6570\u200b\u7684\u200b\u4e00\u79cd\u200b\u9650\u5b9a\u200b)</p> <pre><code>-- \u200b\u4ece\u200b\u5143\u7ec4\u200b\u5217\u8868\u200b\u4e2d\u200b\u521b\u5efa\u200b\u952e\u503c\u200b\u5bf9\u200b\nMap.fromList :: Ord k =&gt; [(k, a)] -&gt; Map.Map k a\n\n-- \u200b\u63d2\u5165\u200b\u4e00\u4e2a\u200b\u952e\u503c\u200b\u5bf9\u200b (x::k, y::a), \u200b\u8fd4\u56de\u200b\u65b0\u200bMap, \u200b\u539f\u200bMap\u200b\u4e0d\u200b\u4fee\u6539\u200b\n-- Returns a new map. Does not mutate the given map.\nMap.insert :: Ord k =&gt; k -&gt; a -&gt; Map.Map k a -&gt; Map.Map k a\n\n-- \u200b\u6839\u636e\u200b\u952e\u6765\u200b\u5bfb\u627e\u200bMap\u200b\u4e2d\u200b\u7684\u200b\u5bf9\u5e94\u200b\u503c\u200b,\u200b\u6ca1\u6709\u200b\u5219\u200b\u8fd4\u56de\u200bNothing\nMap.lookup :: Ord k =&gt; k -&gt; Map.Map k a -&gt; Maybe a\n\n-- \u200b\u521b\u5efa\u200b\u7a7a\u200bMap\nMap.empty :: Map.Map k a\n</code></pre>"},{"location":"Archive/Haskell/2.%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html#24-array","title":"2.4 Array","text":"<p><code>Array</code>\u200b\u901a\u8fc7\u200b <code>import Data.Array</code>\u200b\u8fdb\u884c\u200b\u5bfc\u5165\u200b,\u200b\u5176\u503c\u200b\u4e0d\u53ef\u200b\u66f4\u6539\u200b, \u200b\u5176\u200b\u5b9a\u4e49\u200b\u5982\u4e0b\u200b:</p> <pre><code>array :: Ix i =&gt; (i, i) -&gt; [(i, e)] -&gt; Array i e\n</code></pre> <p><code>i</code>\u200b\u548c\u200b<code>e</code>\u200b\u5206\u522b\u200b\u4ee3\u8868\u200b\u4e86\u200bindex\u200b\u548c\u200belement\u200b\u7684\u200b\u7c7b\u578b\u200b. \u200b\u5728\u200bHaskell\u200b\u7684\u200b<code>Array</code>\u200b\u4e2d\u200b,index\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u662f\u200b\u6574\u6570\u200b,\u200b\u5b83\u200b\u7684\u200b\u7c7b\u578b\u200b\u9650\u5b9a\u200b\u662f\u200b<code>Ix i =&gt;</code>(\u200b\u542b\u4e49\u200b\u5728\u200b\u7b2c\u200b5\u200b\u7ae0\u200b class\u200b\u4ecb\u7ecd\u200b), \u200b\u53ef\u4ee5\u200b\u662f\u200b<code>Char,Bool,Int</code>\u200b\u7b49\u200b\u591a\u79cd\u7c7b\u578b\u200b.</p> <ul> <li>\u200b\u7b2c\u4e00\u4e2a\u200b\u53c2\u6570\u200b<code>(i,i)</code>\u200b\u5206\u522b\u200b\u6307\u5b9a\u200b<code>Array</code>\u200b\u4e2d\u200b\u7684\u200bindex\u200b\u6700\u5c0f\u200b\\\u200b\u6700\u5927\u503c\u200b, \u200b\u4e5f\u200b\u5c31\u662f\u200b\u4e0b\u6807\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u6307\u5b9a\u200b\u503c\u200b\u5f00\u59cb\u200b.</li> <li>\u200b\u7b2c\u4e8c\u4e2a\u200b\u53c2\u6570\u200b<code>[(i,e)]</code>\u200b\u662f\u200b\u7ed9\u5b9a\u200b\u7684\u200b\u952e\u503c\u200b\u5bf9\u200bList.</li> </ul> <p>\u200b\u4f8b\u5b50\u200b:</p> <pre><code>myArray :: Array Int String\nmyArray = array (7,11) [(7,\"seven\"), (8,\"eight\"), (9,\"nine\"), (10,\"ten\"), (11,\"ELEVEN\")]\n</code></pre> <p>\u200b\u8fd9\u6837\u200b\u5217\u51fa\u200b\u6240\u6709\u200b\u7684\u200bindex\u200b\u548c\u200b\u53ef\u80fd\u200b\u6709\u70b9\u200b\u9ebb\u70e6\u200b,\u200b\u8fd8\u6709\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u6784\u9020\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u5217\u200b\u5143\u7d20\u200b.</p> <pre><code>listArray :: Ix i =&gt; (i, i) -&gt; [e] -&gt; Array i e\n\nmyArray :: Array Int String\nmyArray = listArray (7,11) [\"seven\", \"eight\", \"nine\", \"ten\", \"ELEVEN\"]\n</code></pre> <p><code>Array</code> \u200b\u7c7b\u578b\u200b\u7684\u200b\u64cd\u4f5c\u7b26\u200b\u6709\u200b</p> <pre><code>-- \u200b\u67e5\u627e\u200b\n(!) :: Ix i =&gt; Array i e -&gt; i -&gt; e\n-- \u200b\u66f4\u65b0\u200b,\u200b\u8f93\u5165\u200b\u4e3a\u200barray\u200b\u7c7b\u200b\u548c\u200b\u5305\u542b\u200b\u952e\u503c\u200b\u5bf9\u200b\u5143\u7ec4\u200b\u7684\u200b\u5217\u8868\u200b\n(//) :: Ix i =&gt; Array i e -&gt; [(i, e)] -&gt; Array i e\n</code></pre> <p>\u200b\u7531\u4e8e\u200b <code>Array</code> \u200b\u4e0d\u53ef\u200b\u66f4\u6539\u200b,\u200b\u56e0\u6b64\u200b<code>(//)</code>\u200b\u8fd0\u7b97\u7b26\u200b\u4f1a\u200b\u62f7\u8d1d\u200b\u6574\u4e2a\u200b\u6570\u7ec4\u200b.\u200b\u5982\u679c\u200b\u8981\u200b\u66f4\u65b0\u200b\u6570\u636e\u200b,\u200b\u6700\u597d\u200b\u4f7f\u7528\u200b<code>List</code>\u200b\u6216\u8005\u200b<code>Map</code>.</p>"},{"location":"Archive/Haskell/2.%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html#3","title":"3 \u200b\u8fd0\u7b97\u7b26","text":"Operator Description Header Title Paragraph Text"},{"location":"Archive/Haskell/3.%20List.html","title":"List \u200b\u5217\u8868\u200b\u7c7b\u578b","text":""},{"location":"Archive/Haskell/3.%20List.html#list_1","title":"List\u200b\u57fa\u7840","text":"<p>Haskell\u200b\u4e2d\u200b\u7684\u200b<code>List</code>\u200b\u5c31\u662f\u200b\u4e00\u7cfb\u5217\u200b\u76f8\u540c\u200b\u6570\u636e\u200b\u7684\u200b\u96c6\u5408\u200b\uff0c\u200b\u5176\u200b\u7c7b\u578b\u200b\u8868\u793a\u200b\u4e3a\u200b<code>[type]</code>\uff0c\u200b\u4f8b\u5982\u200b</p> <pre><code>[True\uff0cTrue\uff0cFalse] :: [Bool]\n[\"Moi\"\uff0c\"Hei\"] :: [String]\n[] :: [a]                   -- more about this later\n[[1\uff0c2]\uff0c[3\uff0c4]] :: [[Int]]    -- a list of lists\n[1\u3002\u30027] :: [Int]             -- range syntax\uff0cvalue [1\uff0c2\uff0c3\uff0c4\uff0c5\uff0c6\uff0c7]\n</code></pre> <p><code>String</code>\u200b\u7c7b\u578b\u200b\u662f\u200b<code>[Char]</code>\u200b\u7684\u200b\u522b\u540d\u200b\u3002</p>"},{"location":"Archive/Haskell/3.%20List.html#list_2","title":"List\u200b\u64cd\u4f5c","text":"<p>Haskell\u200b\u5e93\u5185\u200b\u7f6e\u200b\u7684\u200b\u5bf9\u200b<code>List</code>\u200b\u7684\u200b\u64cd\u4f5c\u200b\u622a\u65ad\u200b\u3001\u200b\u62fc\u63a5\u200b\u5982\u4e0b\u200b</p> <pre><code>head :: [a] -&gt; a            -- \u200b\u8fd4\u56de\u200b\u7b2c\u4e00\u4e2a\u200b\u5143\u7d20\u200b\ntail :: [a] -&gt; [a]          -- \u200b\u8fd4\u56de\u200b\u9664\u200b\u7b2c\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u5176\u4ed6\u200b\u5143\u7d20\u200b\ninit :: [a] -&gt; [a]          -- \u200b\u8fd4\u56de\u200b\u9664\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u5176\u4ed6\u200b\u5143\u7d20\u200b\ntake :: Int -&gt; [a] -&gt; [a]   -- \u200b\u8fd4\u56de\u200b\u524d\u200bn\u200b\u4e2a\u200b\u5143\u7d20\u200b\ndrop :: Int -&gt; [a] -&gt; [a]   -- \u200b\u8fd4\u56de\u200b\u9664\u4e86\u200b\u524d\u200bn\u200b\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u5176\u4ed6\u200b\u5143\u7d20\u200b\n(!!) :: [a] -&gt; Int -&gt; a     -- \u200b\u8fd4\u56de\u200b\u4e0b\u6807\u200b\u4e3a\u200bn\u200b\u7684\u200b\u5143\u7d20\u200b\n(++) :: [a] -&gt; [a] -&gt; [a]   -- \u200b\u62fc\u63a5\u200b\u5217\u8868\u200b\n(:)  :: a -&gt; [a] -&gt; [a]     -- \u200b\u62fc\u63a5\u200b\u5355\u4e2a\u200b\u5143\u7d20\u200b\u5230\u200b\u5217\u8868\u200b\u524d\u200b([x] ++ xs)\n</code></pre> <p>\u200b\u540c\u65f6\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u5bf9\u200b\u5217\u8868\u200b\u505a\u200b\u4e00\u4e9b\u200b\u57fa\u672c\u200b\u5224\u65ad\u200b</p> <pre><code>(==) :: [a] -&gt; [a] -&gt; Bool  -- \u200b\u5224\u65ad\u200b\u4e24\u200b\u5217\u8868\u200b\u662f\u5426\u200b\u76f8\u7b49\u200b\nelem :: a -&gt; [a] -&gt; Bool    -- \u200b\u5224\u65ad\u200b\u67d0\u4e2a\u200b\u503c\u200b\u662f\u5426\u200b\u5728\u200b\u5217\u8868\u200b\u4e2d\u200b\nnull :: [a] -&gt; Bool         -- \u200b\u5224\u65ad\u200b\u5217\u8868\u200b\u662f\u5426\u200b\u4e3a\u7a7a\u200b\nlength :: [a] -&gt; Int        -- \u200b\u8fd4\u56de\u200b\u5217\u8868\u200b\u957f\u5ea6\u200b\n</code></pre> <p>\u200b\u5176\u4ed6\u200b\u5bf9\u200b\u5217\u8868\u200b\u7684\u200b\u51fd\u6570\u200b\u8fd8\u6709\u200b</p> <pre><code>reverse :: [a] -&gt; [a]       -- \u200b\u5217\u8868\u200b\u5012\u7f6e\u200b\ntakeWhile :: (a -&gt; Bool) -&gt; [a] -&gt; [a]   -- \u200b\u8fd4\u56de\u200b\u6ee1\u8db3\u200b\u5224\u65ad\u200b\u6761\u4ef6\u200b\u5217\u8868\u200b\u524d\u7f00\u200b\ndropWhile :: (a -&gt; Bool) -&gt; [a] -&gt; [a]   -- \u200b\u8fd4\u56de\u200b\u9664\u200b\u6ee1\u8db3\u200b\u5224\u65ad\u200b\u6761\u4ef6\u200b\u5217\u8868\u200b\u524d\u7f00\u200b\u7684\u200b\u5269\u4e0b\u200b\u5b57\u7b26\u4e32\u200b\n</code></pre>"},{"location":"Archive/Haskell/3.%20List.html#_1","title":"\u5217\u8868\u200b\u8fed\u4ee3","text":"<ol> <li> <p>\u200b\u4f7f\u7528\u200b\u9012\u5f52\u51fd\u6570\u200b\u6765\u200b\u6784\u5efa\u200b\u4e00\u4e2a\u200b\u5217\u8868\u200b\uff0c\u200b\u4f8b\u5982\u200b\u4ee5\u4e0b\u200b\u6784\u5efa\u200b\u4e00\u4e2a\u200b\u4ece\u200b<code>n</code>\u200b\u9010\u4e00\u200b\u9012\u51cf\u200b\u7684\u200b\u5217\u8868\u200b\u3002</p> <pre><code>descend 0 = []\ndescend n = n : descend (n-1)\n-- descend 4 ==&gt; [4\uff0c3\uff0c2\uff0c1]\n</code></pre> </li> <li> <p>\u200b\u4f7f\u7528\u200b<code>iterate :: (a -&gt; a) -&gt; a -&gt; [a]</code> \u200b\u6765\u200b\u6784\u5efa\u200b\u4e00\u4e2a\u200b\u5217\u8868\u200b\u3002\u200b\u7b2c\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u4e3a\u200b\u5bf9\u200b\u5bf9\u8c61\u200b\u8fdb\u884c\u200b\u8fed\u4ee3\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u7b2c\u4e8c\u4e2a\u200b\u53c2\u6570\u200b\u4e3a\u200b\u8fed\u4ee3\u200b\u6b21\u6570\u200b\u3002\u200b\u8fd4\u56de\u503c\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u5217\u8868\u200b\u3002</p> <pre><code>iterate f 0 x = [x]\niterate f n x = x : iterate f (n-1) (f x)\n\n-- iterate (*2) 4 3 ==&gt; [3\uff0c6\uff0c12\uff0c24\uff0c48]\n-- \u200b\u8fed\u4ee3\u200b4\u200b\u6b21\u200b\uff0c\u200b\u521d\u59cb\u503c\u200b\u4e3a\u200b3\uff0c\u200b\u6bcf\u6b21\u200b*2\n\n-- let xs = \"terve\"\n-- in iterate tail (length xs) xs\n--  ==&gt; [\"terve\"\uff0c\"erve\"\uff0c\"rve\"\uff0c\"ve\"\uff0c\"e\"\uff0c\"\"]\n-- \u200b\u8fed\u4ee3\u200b\u6b21\u6570\u200b\u4e3a\u200b\u5b57\u7b26\u4e32\u200b\u957f\u5ea6\u200b\uff0c\u200b\u521d\u59cb\u503c\u200b\u4e3a\u539f\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u5220\u53bb\u200b\u7b2c\u4e00\u4e2a\u200b\u5143\u7d20\u200b\n</code></pre> </li> </ol>"},{"location":"Archive/Haskell/3.%20List.html#_2","title":"\u5217\u8868\u200b\u6a21\u5f0f\u5339\u914d","text":"<p>\u200b\u6784\u9020\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u7528\u6765\u200b\u8fdb\u884c\u200b\u6a21\u5f0f\u5339\u914d\u200b\uff0c\u200b\u5bf9\u4e8e\u200b<code>List</code>\u200b\u6765\u8bf4\u200b\uff0c\u200b\u5b83\u200b\u7684\u200b\u6784\u9020\u51fd\u6570\u200b\u662f\u200b<code>:</code>\u200b\u548c\u200b<code>[]</code>\u3002\u200b\u4ee5\u4e0b\u200b\u4ee3\u7801\u200b\u4e2d\u200b\u7684\u200b<code>[]</code>\u200b\u5339\u914d\u200b\u5230\u200b\u7a7a\u200b\u5b57\u7b26\u4e32\u200b\uff0c<code>(first:rest)</code>\u200b\u7684\u200b\u7c7b\u578b\u200b\u5206\u522b\u200b\u4e3a\u200b<code>Int</code>\u200b\u548c\u200b<code>[Int]</code>(\u200b\u5373\u200b\u7b2c\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u548c\u200b\u5269\u4f59\u200b\u5217\u8868\u200b)\u3002</p> <pre><code>myhead :: [Int] -&gt; Int\nmyhead [] = -1\nmyhead (first:rest) = first\n\nmytail :: [Int] -&gt; [Int]\nmytail [] = []\nmytail (first:rest) = rest\n</code></pre> <p>\u200b\u540c\u65f6\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u591a\u4e2a\u200b<code>:</code>\u200b\u6765\u200b\u5339\u914d\u200b\u66f4\u200b\u591a\u200b\u7684\u200b\u5143\u7d20\u200b\u3002\u200b\u4ee5\u4e0b\u200b\u4ee3\u7801\u200b\u4e2d\u200b\u901a\u8fc7\u200b<code>(a:b:_)</code>\u200b\u6765\u200b\u63d0\u53d6\u200b\u524d\u200b\u4e24\u4e2a\u200b\u5143\u7d20\u200b</p> <pre><code>sumFirstTwo :: [Integer] -&gt; Integer\nsumFirstTwo (a:b:_) = a+b  -- \u200b\u9700\u8981\u200b\u957f\u5ea6\u200b\u81f3\u5c11\u200b\u4e3a\u200b2\u200b\u7684\u200b\u5217\u8868\u200b\nsumFirstTwo _       = 0  -- \u200b\u9ed8\u8ba4\u200b\u5904\u7406\u200b\u6240\u6709\u200b\u957f\u5ea6\u200b\u4e0d\u200b\u5408\u89c4\u200b\u7684\u200b\u60c5\u51b5\u200b\n</code></pre> <p>\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u4e00\u4e9b\u200b\u5e38\u7528\u200b\u7684\u200b\u63cf\u8ff0\u200b\u4e0d\u540c\u200b\u5217\u8868\u200b\u60c5\u51b5\u200b\u7684\u200b\u5339\u914d\u200b\u5f0f\u200b</p> <pre><code>describeList :: [Int] -&gt; String\ndescribeList []         = \u200b\u7a7a\u200b\u5217\u8868\u200b\ndescribeList [x]     = \u200b\u542b\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u5217\u8868\u200b\ndescribeList [x\uff0cy]   = \u200b\u542b\u200b\u4e24\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u5217\u8868\u200b\ndescribeList (x:y:z:xs) = \u200b\u542b\u200b\u81f3\u5c11\u200b\u4e09\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u5217\u8868\u200b\n</code></pre> <p>\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5bf9\u200b\u5217\u8868\u200b\u4e2d\u200b\u5143\u7d20\u200b\u7684\u200b\u503c\u200b\u8fdb\u884c\u200b\u7cbe\u786e\u200b\u5339\u914d\u200b\uff0c\u200b\u4f8b\u5982\u200b</p> <pre><code>startsWithZero :: [Integer] -&gt; Bool\nstartsWithZero (0:xs) = True  -- \u200b\u7b2c\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u4e3a\u200b0\nstartsWithZero (x:xs) = False\nstartsWithZero []     = False\n</code></pre>"},{"location":"Archive/Haskell/3.%20List.html#_3","title":"\u5217\u8868\u200b\u8868\u8fbe\u5f0f","text":"<p>\u200b\u5217\u8868\u200b\u8868\u8fbe\u5f0f\u200b\u5b9e\u9645\u4e0a\u200b\u5c31\u662f\u200b\u901a\u8fc7\u200b<code>map</code>\u200b\u548c\u200b<code>filter</code>\u200b\u6765\u200b\u751f\u6210\u200b\u5217\u8868\u200b\uff0c\u200b\u53ea\u662f\u200b\u7528\u200b\u4e86\u200b\u4e00\u79cd\u200b\u4e0d\u200b\u4e00\u6837\u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\u3002\u200b\u8bed\u6cd5\u200b\u5982\u4e0b\u200b:</p> <pre><code>[f x | x &lt;- lis\uff0cp x]\nmap f (filter p lis)\n\n-- [2*i | i&lt;-[1\uff0c2\uff0c3]]\n--  ==&gt; [2\uff0c4\uff0c6]\n</code></pre> <p>\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5728\u200b\u591a\u4e2a\u200b\u5217\u8868\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u8fed\u4ee3\u200b\uff0c\u200b\u4f8b\u5982\u200b\u4ee5\u4e0b\u200b\u7684\u200b\u4ee3\u7801\u200b\u4e2d\u200b\u5206\u522b\u200b\u4ece\u200b\u4e24\u4e2a\u200b\u5217\u8868\u200b\u4e2d\u53d6\u200b\u5143\u7d20\u200b\u5e76\u200b\u62fc\u63a5\u200b\u3002</p> <pre><code>[ first ++ \" \" ++ last | first &lt;- [\"John\"\uff0c\"Mary\"]\uff0clast &lt;- [\"Smith\"\uff0c\"Cooper\"] ]\n  ==&gt; [\"John Smith\"\uff0c\"John Cooper\"\uff0c\"Mary Smith\"\uff0c\"Mary Cooper\"]\n</code></pre> <p>\u200b\u540c\u6837\u200b\u7684\u200b\u5217\u8868\u200b\u8868\u8fbe\u5f0f\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u505a\u200b\u4e00\u4e9b\u200b\u672c\u5730\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u4ee5\u4e0b\u200b\u4ee3\u7801\u200b\u4e2d\u5c06\u200b<code>reversed</code>\u200b\u5b9a\u4e49\u200b\u4e3a\u200b<code>reverse word</code>.</p> <pre><code>[ reversed | word &lt;- [\"this\",\"is\",\"a\",\"string\"], let reversed = reverse word ]\n  ==&gt; [\"siht\",\"si\",\"a\",\"gnirts\"]\n</code></pre> <p>\u200b\u6216\u8005\u200b\u5728\u200b\u5217\u8868\u200b\u8868\u8fbe\u5f0f\u200b\u4e2d\u200b\u8fdb\u884c\u200b\u6a21\u5f0f\u5339\u914d\u200b:</p> <pre><code>firstLetters string = [ char | (char:_) &lt;- words string ]\n-- firstLetters \"Hello World!\"\n--  ==&gt; \"HW\"\n</code></pre>"},{"location":"Archive/Haskell/3.%20List.html#snippet","title":"\u5b9e\u7528\u200b\u5217\u8868\u200b\u64cd\u4f5c\u200bsnippet","text":""},{"location":"Archive/Haskell/3.%20List.html#split","title":"split","text":"<p>split\u200b\u51fd\u6570\u200b\u8f93\u5165\u200b<code>c::Char</code>\u200b\u4f5c\u4e3a\u200b\u5206\u5272\u200b\u7b26\u200b\uff0c\u200b\u5c06\u200b<code>xs::String</code>\u200b\u5206\u5272\u200b\u4e3a\u200b\u4e0d\u200b\u542b\u200b<code>c</code>\u200b\u7684\u200b\u5217\u8868\u200b<code>[string]</code>\u3002\u200b\u8fd4\u56de\u503c\u200b\u4e2d\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u662f\u200b<code>xs</code>\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5b50\u4e32\u200b\uff0c\u200b\u5982\u679c\u200b\u5b57\u7b26\u4e32\u200b\u6709\u200b\u591a\u4e2a\u200b<code>c</code>\u200b\u76f8\u90bb\u200b\uff0c\u200b\u5219\u200b\u4e00\u4e32\u200b<code>c\u3002\u3002\u3002c</code>\u200b\u4f1a\u200b\u751f\u6210\u200b\u4e00\u4e2a\u200b\u7a7a\u200b\u5b57\u7b26\u4e32\u200b\u3002</p> <pre><code>split :: Char -&gt; String -&gt; [String]\nsplit c [] = []  -- \u200b\u7a7a\u200b\u5217\u8868\u200b\u76f4\u63a5\u200b\u8fd4\u56de\u200b\nsplit c xs = start : split c (drop 1 rest) \n  where start = takeWhile (/=c) xs   --\u200b\u8fd4\u56de\u200b\u4e0d\u200b\u542b\u200bc\u200b\u7684\u200b\u6700\u5927\u200b\u524d\u7f00\u200b\n        rest = dropWhile (/=c) xs    -- \u200b\u8fd4\u56de\u200b\u5269\u4f59\u200b\u5b57\u7b26\u4e32\u200b\n\n-- split 'x' \"fooxxbarxquux\"   ==&gt;   [\"foo\"\uff0c\"\"\uff0c\"bar\"\uff0c\"quu\"]\n</code></pre> <p>\u200b\u6bcf\u6b21\u200b\u5207\u5206\u200b\u51fa\u200b\u7684\u200b<code>start</code>\u200b\u5c31\u662f\u200b\u4e00\u4e2a\u200b\u4e0d\u200b\u542b\u200b\u5206\u9694\u7b26\u200b\u7684\u200b\u6700\u957f\u200b\u524d\u7f00\u200b\u5b50\u4e32\u200b\uff0c\u200b\u7136\u540e\u200b\u5bf9\u200b\u5269\u4f59\u200b\u5b50\u4e32\u200b\u8fdb\u884c\u200b\u8fed\u4ee3\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u4f7f\u7528\u200b<code>:</code>\u200b\u8fd0\u7b97\u7b26\u200b\u5bf9\u200b\u7ed3\u679c\u200b\u8fdb\u884c\u200b\u62fc\u63a5\u200b\u3002</p>"},{"location":"Archive/Haskell/4.%20%E5%87%BD%E6%95%B0.html","title":"\u7ec4\u6210\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u7ec4\u4ef6","text":"<p>Haskell\u200b\u4e2d\u200b\u6ca1\u6709\u200b\u5faa\u73af\u200b\u3001\u200b\u8d4b\u503c\u200b\u3001\u200b\u8bed\u53e5\u200b\uff0c\u200b\u6240\u6709\u200b\u7684\u200b\u7a0b\u5e8f\u200b\u90fd\u200b\u7531\u200b\u4ee5\u4e0b\u200b\u7684\u200b\u4e00\u4e9b\u200b\u7ec4\u4ef6\u200b\u6784\u6210\u200b\u3002</p>"},{"location":"Archive/Haskell/4.%20%E5%87%BD%E6%95%B0.html#conditionals","title":"Conditionals \u200b\u6761\u4ef6","text":"<p><code>if</code>\u200b\u5728\u200bHaskell\u200b\u4e2d\u200b\u4e0d\u662f\u200b\u4e00\u4e2a\u200b\u8bed\u53e5\u200b\uff0c\u200b\u800c\u662f\u200b\u4e00\u4e2a\u200b\u8868\u8fbe\u5f0f\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u200b\u610f\u5473\u7740\u200b\u5b83\u200b\u6709\u200b\u4e00\u4e2a\u200b\u503c\u200b\u548c\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\u3002\u200b\u5b9e\u9645\u4e0a\u200b\u5b83\u200b\u5bf9\u5e94\u200bC\u200b\u4e2d\u200b\u7684\u200b<code>?:</code>\u200b\u8fd0\u7b97\u7b26\u200b\u3002 \u200b\u4ee5\u4e0b\u200b\u8bed\u53e5\u200b\u4e2d\u200b\u5224\u65ad\u200b<code>product == \"milk\"</code>\u200b\u5e76\u200b\u8fdb\u884c\u200b\u8d4b\u503c\u200b\u3002</p> <pre><code>ghci&gt; product = \"milk\"\nghci&gt; price = if product == \"milk\" then 1 else 2\nghci&gt; price\n1\n\nghci&gt; product = \"bread\"\nghci&gt; price = if product == \"milk\" then 1 else 2\nghci&gt; price\n2\n</code></pre> <p>\u200b\u5982\u679c\u200b\u5355\u72ec\u200b\u89c2\u5bdf\u200b<code>if</code>\u200b\u8bed\u53e5\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5219\u200b\u80fd\u591f\u200b\u770b\u5230\u200b\u5b83\u200b\u7684\u200b\u7c7b\u578b\u200b\u4e3a\u200b<code>Num a</code>\uff1b\u200b\u800c\u200b\u5982\u679c\u200b\u5c06\u200b<code>then</code>\u200b\u548c\u200b<code>else</code>\u200b\u540e\u200b\u7684\u200b\u503c\u200b\u6539\u4e3a\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5219\u200b\u62a5\u9519\u200b\u5e76\u200b\u63d0\u793a\u200b\u7c7b\u578b\u200b\u4e0d\u540c\u200b\u3002</p> <pre><code>ghci&gt; :t  if product == \"milk\" then 1 else 2\nif product == \"milk\" then 1 else 2 :: Num a =&gt; a\n\nghci&gt; :t  if product == \"milk\" then 1 else \"a\"\n&lt;interactive&gt;:1:27: error:\n    ? No instance for (Num String) arising from the literal \u20181\u2019\n    ? In the expression: 1\n      In the expression: if product == \"milk\" then 1 else \"a\"\n</code></pre> <p>Note</p> <ol> <li>\u200b\u7531\u4e8e\u200b<code>if</code>\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u503c\u200b\uff0c\u200b\u56e0\u6b64\u200b<code>else</code>\u200b\u662f\u200b\u5fc5\u987b\u200b\u7684\u200b\u3002</li> <li>\u200b\u6240\u6709\u200b<code>Bool</code>\u200b\u503c\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u5224\u65ad\u200b\uff0c\u200b\u4f8b\u5982\u200b<code>==,&gt;=,&lt;</code>\u200b\u7b49\u200b\u3002\u200b\u7279\u522b\u200b\u6ce8\u610f\u200b\u4e0d\u7b49\u5f0f\u200b\u7528\u200b<code>/=</code>\u200b\u8868\u793a\u200b\u3002</li> </ol>"},{"location":"Archive/Haskell/4.%20%E5%87%BD%E6%95%B0.html#local-definitions","title":"Local definitions \u200b\u672c\u5730\u200b\u5b9a\u4e49","text":"<p>\u200b\u5728\u200b\u5b9a\u4e49\u200b\u4e2d\u200b\u5982\u679c\u200b\u8fd8\u200b\u60f3\u52a0\u200b\u672c\u5730\u200b\u5b9a\u4e49\u200b\uff08\u200b\u7c7b\u6bd4\u200b\u5176\u4ed6\u200b\u8bed\u8a00\u200b\u4e2d\u200b\u51fd\u6570\u200b\u4f5c\u7528\u57df\u200b\u4e2d\u200b\u7684\u200b\u5d4c\u5957\u200b\u51fd\u6570\u200b\uff09\uff0c\u200b\u6709\u200b\u4e24\u79cd\u200b\u65b9\u5f0f\u200b\u3002\u200b\u6ce8\u610f\u200b\u6dfb\u52a0\u200b\u7684\u200b\u672c\u5730\u200b\u5b9a\u4e49\u200b\u65e2\u200b\u53ef\u4ee5\u200b\u662f\u200b\u53d8\u91cf\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u662f\u200b\u51fd\u6570\u200b\u3002</p>"},{"location":"Archive/Haskell/4.%20%E5%87%BD%E6%95%B0.html#where","title":"<code>where</code>","text":"<p><code>where</code>\u200b\u52a0\u8f7d\u200b\u67d0\u4e2a\u200b\u5b9a\u4e49\u200b\u4e2d\u200b\uff0c\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5f80\u200b\u4e0b\u200b\u7ee7\u7eed\u200b\u6dfb\u52a0\u200b\u672c\u5730\u200b\u5b9a\u4e49\u200b\u3002</p> <pre><code>circleArea :: Double -&gt; Double\ncircleArea r = pi * rsquare\n    where pi = 3.1415926 -- \u200b\u672c\u5730\u200b\u5b9a\u4e49\u200bpi\n          rsquare = r * r  -- \u200b\u672c\u5730\u200b\u5b9a\u4e49\u200brsquare\n          square x = x * x  -- \u200b\u672c\u5730\u200b\u5b9a\u4e49\u200b\u51fd\u6570\u200b\n</code></pre>"},{"location":"Archive/Haskell/4.%20%E5%87%BD%E6%95%B0.html#letin","title":"<code>let...in</code>","text":"<p><code>let...in</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u8868\u8fbe\u5f0f\u200b\u3002\u200b\u548c\u200b<code>where</code>\u200b\u6bd4\u200b\u8d77\u6765\u200b\uff0c\u200b\u5b83\u200b\u662f\u200b\u4e00\u6b21\u6027\u200b\u7684\u200b\uff0c\u200b\u5728\u200b\u4f30\u5b8c\u200b<code>pi * rsquare</code>\u200b\u4e4b\u540e\u200b\u5c31\u200b\u4f1a\u200b\u88ab\u200b\u4e22\u5f03\u200b\uff0c\u200b\u5728\u200b\u5b9a\u4e49\u200b\u5185\u90e8\u200b\u7684\u200b\u5176\u4ed6\u200b\u4f4d\u7f6e\u200b\u4e0d\u4f1a\u200b\u518d\u6b21\u200b\u4f7f\u7528\u200b\u3002</p> <pre><code>circleArea r = let pi = 3.1415926\n                   rsquare = r * r\n                   square x = x * x\n               in pi * rsquare\n</code></pre> <p>\u200b\u672c\u5730\u200b\u5b9a\u4e49\u200b\u4e0d\u80fd\u200b\u8d77\u5230\u200b\u7c7b\u4f3c\u200bC\u200b\u4e2d\u200b\u5faa\u73af\u200b\u548c\u200b\u8bed\u53e5\u200b\u7684\u200b\u4f5c\u7528\u200b\uff0c\u200b\u4f8b\u5982\u200b\u5982\u4e0b\u200b\u8868\u8fbe\u5f0f\u200b\u60f3\u8981\u200b\u4ee4\u200b<code>a=x+1</code>\u200b\u8fdb\u884c\u200b\u9012\u589e\u200b\uff0c\u200b\u7136\u540e\u200b\u66f4\u65b0\u200b\u5b83\u200b\uff0c\u200b\u8ba9\u200b\u5176\u200b\u4e58\u200b2\u3002\u200b\u4f46\u200b\u5176\u5b9e\u200b\u8fd9\u662f\u200b\u4e24\u4e2a\u200b\u5bf9\u200b<code>a</code>\u200b\u7684\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u4ea7\u751f\u200b\u4e86\u200b\u51b2\u7a81\u200b\u3002</p> <pre><code>compute x = let a = x+1\n                a = a*2\n            in a\nerror:\n    Conflicting definitions for \u2018a\u2019\n    Bound at: &lt;interactive&gt;:14:17\n              &lt;interactive&gt;:15:17\n</code></pre> <p>\u200b\u5982\u679c\u200b\u672c\u5730\u200b\u5b9a\u4e49\u200b\u548c\u200b\u51fd\u6570\u53c2\u6570\u200b\u6709\u7740\u200b\u76f8\u540c\u200b\u7684\u200b\u540d\u5b57\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5c06\u4f1a\u200b\u906e\u853d\u200b\uff08shadow\uff09\u200b\u6389\u200b\u5916\u90e8\u200b\u53d8\u91cf\u200b\u7684\u200b\u540d\u5b57\u200b\uff0c\u200b\u4e0d\u4f1a\u200b\u4ea7\u751f\u200b\u526f\u4f5c\u7528\u200b\u3002</p> <pre><code>ghci&gt; h x = x + 3 where x = 6 -- \u200b\u672c\u5730\u200b\u5b9a\u4e49\u200bx\u200b\u548c\u200b\u53c2\u6570\u200bx\u200b\u91cd\u540d\u200b\nghci&gt; x = 10   -- \u200b\u53d8\u91cf\u200bx = 10\nghci&gt; h 10     -- \u200b\u8f93\u5165\u200b10\u200b\u4f5c\u4e3a\u200bh\u200b\u53c2\u6570\u200b\uff0c\u200b\u7ed3\u679c\u200b\u4e3a\u200b9(6+3)\n9\nghci&gt; h x      -- \u200b\u8f93\u5165\u200bx \u200b\u4f5c\u4e3a\u200bh\u200b\u53c2\u6570\u200b\uff0c\u200b\u7ed3\u679c\u200b\u4e3a\u200b9(6+3)\n9\nghci&gt; x        -- x\u200b\u7684\u200b\u503c\u200b\u4e0d\u200b\u88ab\u200b\u6539\u53d8\u200b\n10\n</code></pre>"},{"location":"Archive/Haskell/4.%20%E5%87%BD%E6%95%B0.html#pattern-matching","title":"Pattern matching \u200b\u6a21\u5f0f\u5339\u914d","text":"<p>\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u7684\u200b\u5b9a\u4e49\u200b\u53ef\u80fd\u200b\u5305\u542b\u200b\u591a\u4e2a\u200b\u7b49\u5f0f\u200b\uff0c\u200b\u5206\u522b\u200b\u6839\u636e\u200b\u53c2\u6570\u200b\u7684\u200b\u4e0d\u540c\u200b\u6765\u200b\u8fdb\u884c\u200b\u5339\u914d\u200b\u3002\u200b\u4f8b\u5982\u200b<code>greet</code>\u200b\u51fd\u6570\u200b\u4e2d\u200b\u60f3\u8981\u200b\u6839\u636e\u200b\u7b2c\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u5bf9\u200b\u8f93\u51fa\u200b\u8fdb\u884c\u200b\u53d8\u5316\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u5728\u200b\u5199\u200b\u53c2\u6570\u200b\u7684\u200b\u65f6\u5019\u200b\u663e\u793a\u200b\u6307\u5b9a\u200b\u60f3\u8981\u200b\u5339\u914d\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u800c\u200b<code>_</code>\u200b\u5219\u200b\u662f\u200b\u6240\u6709\u200b\u4e0d\u200b\u5339\u914d\u200b\u7684\u200b\u9ed8\u8ba4\u200b\u8f93\u51fa\u200b\u3002</p> <pre><code>greet :: String -&gt; String -&gt; String\ngreet \"Finland\" name = \"Hei, \" ++ name\ngreet \"Italy\"   name = \"Ciao, \" ++ name\ngreet \"England\" name = \"How do you do, \" ++ name\ngreet _         name = \"Hello, \" ++ name\n</code></pre> <p>Note</p> <p>\u200b\u6a21\u5f0f\u5339\u914d\u200b\u662f\u200b\u6839\u636e\u200b\u987a\u5e8f\u200b\u7684\u200b\uff0c\u200b\u56e0\u6b64\u200b\u9ed8\u8ba4\u200b\u5e94\u8be5\u200b\u603b\u662f\u200b\u653e\u5728\u200b\u6700\u540e\u200b\u4e00\u4f4d\u200b\u3002</p>"},{"location":"Archive/Haskell/4.%20%E5%87%BD%E6%95%B0.html#recursion","title":"Recursion \u200b\u9012\u5f52","text":"<p>\u200b\u5728\u200bHaskell\u200b\u4e2d\u200b\uff0c\u200b\u5404\u79cd\u200b\u5faa\u73af\u200b\u90fd\u200b\u662f\u200b\u7528\u200b\u9012\u5f52\u200b\u6765\u200b\u5b9e\u73b0\u200b\u7684\u200b\u3002\u200b\u51fd\u6570\u8c03\u7528\u200b\u662f\u200b\u975e\u5e38\u200b\u6709\u6548\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u4e0d\u200b\u9700\u8981\u200b\u62c5\u5fc3\u200b\u6027\u80fd\u200b\u95ee\u9898\u200b\u3002\u200b\u4f8b\u5982\u200b\u7d2f\u4e58\u200b\u53ef\u4ee5\u200b\u5982\u4e0b\u200b\u5b9e\u73b0\u200b</p> <pre><code>factorial :: Int -&gt; Int\nfactorial 1 = 1\nfactorial n = n * factorial (n-1)\n\n-- factorial 3\n--   ==&gt; 3 * factorial (3-1)\n--   ==&gt; 3 * factorial 2\n--   ==&gt; 3 * 2 * factorial 1\n--   ==&gt; 3 * 2 * 1\n--   ==&gt; 6\n</code></pre>"},{"location":"Archive/Haskell/4.%20%E5%87%BD%E6%95%B0.html#helper","title":"\u9012\u5f52\u200bHelper\u200b\u51fd\u6570","text":"<p>\u200b\u8fdb\u884c\u200b\u9012\u5f52\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u5f88\u591a\u200b\u65f6\u5019\u200b\u9700\u8981\u200b\u8ffd\u8e2a\u200b\u6b21\u6570\u200b\u6216\u8005\u200b\u5176\u4ed6\u200b\u72b6\u6001\u200b\uff0c\u200b\u6240\u6709\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5199\u200b\u4e00\u4e2a\u200b\u9012\u5f52\u200bHelper\u200b\u51fd\u6570\u200b\uff0c\u200b\u5e26\u6709\u200b\u66f4\u200b\u591a\u200b\u7684\u200b\u53c2\u6570\u200b\u3002</p> <p>\u200b\u8003\u8651\u200b\u4ee5\u4e0b\u200bPython\u200b\u4ee3\u7801\u200b</p> <pre><code>def repeatString(n, str):\n    result = \"\"\n    while n&gt;0:\n        result = result+str\n        n = n-1\n    return result\n</code></pre> <p>\u200b\u7b49\u4ef7\u200b\u7684\u200bHaskell\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\u3002\u200b\u7531\u4e8e\u200b\u4e0d\u80fd\u200b\u76f4\u63a5\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u7a7a\u5b57\u7b26\u200b\uff0c\u200b\u5e76\u200b\u8fdb\u884c\u200b\u8fed\u4ee3\u200b\uff0c\u200b\u56e0\u6b64\u200b\u9700\u8981\u200b\u4e00\u4e2a\u200bHelper\u200b\u51fd\u6570\u200b\uff0c\u200b\u4f7f\u7528\u200b\u7a7a\u200b\u5b57\u7b26\u4e32\u200b\u4f5c\u4e3a\u200b\u4e00\u4e2a\u200b\u8f93\u5165\u200b\u53c2\u6570\u200b\u3002</p> <pre><code>repeatString n str = repeatHelper n str \"\"\n\nrepeatHelper 0 _   result = result\nrepeatHelper n str result = repeatHelper (n-1) str (result++str)\n</code></pre> <p>Note</p> <p>Haskell\u200b\u7a0b\u5e8f\u200b\u7ecf\u5e38\u200b\u4f7f\u7528\u200b<code>Function'</code>\uff08\u200b\u5ff5\u4f5c\u200bFunction prime\uff09\u200b\u6765\u200b\u547d\u540d\u200b<code>Function</code>\u200b\u51fd\u6570\u200b\u7684\u200bHelper\u200b\u51fd\u6570\u200b\u3002</p>"},{"location":"Archive/Haskell/4.%20%E5%87%BD%E6%95%B0.html#_2","title":"\u5c3e\u90e8\u200b\u9012\u5f52","text":"<p>Abstract</p> <p>\u200b\u5c3d\u91cf\u200b\u4f7f\u7528\u200b\u76f4\u63a5\u200b\u8fed\u4ee3\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u5c3e\u90e8\u200b\u8fed\u4ee3\u200b\u3002</p> <p>\u200b\u5c3e\u90e8\u200b\u9012\u5f52\u200b\u6307\u200b\u7684\u200b\u662f\u200b\u9012\u5f52\u51fd\u6570\u200b\u4e2d\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u8fed\u4ee3\u200b\u7684\u200b\u884c\u4e3a\u200b\u662f\u200b\u540c\u4e00\u200b\u51fd\u6570\u200b+\u200b\u4e0d\u540c\u200b\u53c2\u6570\u200b\u3002\u200b\u5c3e\u90e8\u200b\u9012\u5f52\u200b\u7684\u200b\u901a\u5e38\u200b\u53ef\u4ee5\u200b\u8868\u793a\u200b\u67d0\u79cd\u200b\u5faa\u73af\u200b\uff0c\u200b\u56e0\u6b64\u200b\u7ecf\u5e38\u200b\u5f88\u5feb\u200b\uff08\u200b\u7f16\u8bd1\u5668\u200b\u5728\u200b\u770b\u5230\u200b\u5c3e\u90e8\u200b\u9012\u5f52\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u751f\u6210\u200b\u4ee3\u8868\u200b\u5faa\u73af\u200b\u7684\u200b\u673a\u5668\u7801\u200b\uff09\u3002 \u200b\u7528\u200b\u4e00\u4e2a\u200b\u5177\u4f53\u200b\u4f8b\u5b50\u200b\u8fdb\u884c\u200b\u8bf4\u660e\u200b\uff0c\u200b\u5728\u200b\u4ee5\u4e0b\u200b\u4ee3\u7801\u200b\u4e2d\u4e3a\u200b<code>sumNumbers</code>\u200b\u7684\u200b\u4e24\u79cd\u200b\u7248\u672c\u200b\u3002</p> <ul> <li>\u200b\u975e\u200b\u5c3e\u90e8\u200b\u8fed\u4ee3\u200b\u7248\u672c\u200b\u4e2d\u200b\uff0c\u200b\u9012\u5f52\u200b\u8bed\u53e5\u200b\u4e3a\u200b <code>sumNumbers (x:xs) = x + sumNumbers xs</code>\uff0c\u200b\u5728\u200b\u9012\u5f52\u200b\u8c03\u7528\u200b\u7684\u200b\u65f6\u5019\u200b<code>sumNumbers</code>\u200b\u662f\u200b\u8fd0\u7b97\u7b26\u200b<code>+</code>\u200b\u7684\u200b\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u3002</li> </ul> <p><code>Haskell     -- \u200b\u975e\u200b\u5c3e\u90e8\u200b\u8fed\u4ee3\u200b     sumNumbers :: [Int] -&gt; Int     sumNumbers [] = 0     sumNumbers (x:xs) = x + sumNumbers xs</code></p> <ul> <li> <p>\u200b\u5c3e\u90e8\u200b\u8fed\u4ee3\u200b\u7684\u200b\u7248\u672c\u200b\u4e2d\u200b\uff0c\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u5e2e\u52a9\u200b\u51fd\u6570\u200b<code>go</code>\uff0c\u200b\u9012\u5f52\u200b\u8bed\u53e5\u200b\u4e3a\u200b<code>go sum (x:xs) = go (sum+x) xs</code> \uff0c\u200b\u8fed\u4ee3\u200b\u7684\u200b\u884c\u4e3a\u200b\u662f\u200b\u540c\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u5bf9\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u8fdb\u884c\u200b\u64cd\u4f5c\u200b\u3002\u200b\u6b64\u65f6\u200b\u8fd0\u7b97\u7b26\u200b<code>+</code>\u200b\u662f\u200b<code>go</code>\u200b\u7684\u200b\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u3002</p> <pre><code>-- \u200b\u5c3e\u90e8\u200b\u8fed\u4ee3\u200b\nsumNumbers :: [Int] -&gt; Int\nsumNumbers xs = go 0 xs\nwhere go sum [] = sum\n        go sum (x:xs) = go (sum+x) xs\n</code></pre> </li> </ul> <p>\u200b\u7c7b\u4f3c\u200b<code>sumNumbers</code>\u200b\u8fd9\u6837\u200b\u6bcf\u6b21\u200b\u53ea\u200b\u5904\u7406\u200b\u5355\u4e2a\u200b\u503c\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u53ef\u80fd\u6027\u200b\u80fd\u200b\u4e0a\u200b\u5dee\u522b\u200b\u4e0d\u592a\u5927\u200b\u3002\u200b\u4f46\u662f\u200b\u5982\u679c\u200b\u8fd4\u56de\u503c\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5217\u8868\u200b\u7684\u8bdd\u200b\uff0c\u200b\u60c5\u51b5\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u6839\u636e\u200b\u64cd\u4f5c\u7b26\u200b\u5927\u5927\u200b\u4e0d\u540c\u200b\u3002\u200b\u4f8b\u5982\u200b\u4ee5\u4e0b\u200b\u4ee3\u7801\u200b\u4e2d\u200b\uff0c\u200b\u975e\u200b\u5c3e\u90e8\u200b\u8fed\u4ee3\u200b\u4f7f\u7528\u200b\u4e86\u200b<code>(:)</code>(\u200b\u5e38\u6570\u200b\u65f6\u95f4\u200b)\uff0c\u200b\u5c3e\u90e8\u200b\u8fed\u4ee3\u200b\u4f7f\u7528\u200b\u4e86\u200b<code>(++)</code>(\u200b\u904d\u5386\u200b\u5217\u8868\u200b\uff0c\u200b\u7ebf\u6027\u200b\u65f6\u95f4\u200b)\u3002\u200b\u56e0\u6b64\u200b\u975e\u200b\u5c3e\u90e8\u200b\u8fed\u4ee3\u200b\u7684\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(O(n)\\)\uff0c\u200b\u800c\u200b\u5c3e\u90e8\u200b\u8fed\u4ee3\u200b\u7684\u200b\u5219\u200b\u662f\u200b\\(O(n^2)\\)\u3002</p> <pre><code>-- \u200b\u975e\u200b\u5c3e\u90e8\u200b\u8fed\u4ee3\u200b\ndoubleList :: [Int] -&gt; [Int]\ndoubleList [] = []\ndoubleList (x:xs) = 2*x : doubleList xs\n\n-- \u200b\u5c3e\u90e8\u200b\u8fed\u4ee3\u200b\ndoubleList :: [Int] -&gt; [Int]\ndoubleList xs = go [] xs\n    where go result [] = result\n          go result (x:xs) = go (result++[2*x]) xs\n</code></pre>"},{"location":"Archive/Haskell/4.%20%E5%87%BD%E6%95%B0.html#_3","title":"\u5176\u4ed6\u200b\u8bed\u6cd5\u200b\u788e\u7247","text":""},{"location":"Archive/Haskell/4.%20%E5%87%BD%E6%95%B0.html#guards","title":"Guards \u200b\u6761\u4ef6\u200b\u4e0b\u5b9a\u4e49","text":"<p>\u200b\u4f7f\u7528\u200b<code>if else then</code>\u200b\u6709\u200b\u7684\u200b\u65f6\u5019\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u6709\u70b9\u70e6\u200b\u4eba\u200b\uff0c\u200b\u7279\u522b\u200b\u662f\u200b\u60c5\u51b5\u200b\u6bd4\u8f83\u200b\u591a\u200b\u7684\u200b\u65f6\u5019\u200b\uff1b\u200b\u4f7f\u7528\u200b\u6a21\u5f0f\u5339\u914d\u200b\u7684\u8bdd\u200b\u53ea\u80fd\u200b\u5bf9\u200b\u53c2\u6570\u200b\u8fdb\u884c\u200b\u5339\u914d\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u8fdb\u884c\u200b\u5176\u4ed6\u200b\u6761\u4ef6\u200b\u5224\u65ad\u200b\u3002</p> <p>\u200b\u4e00\u79cd\u200b\u53ef\u4ee5\u200b\u66ff\u4ee3\u200b\u7684\u200b\u8bed\u6cd5\u200b\u53eb\u200b\u6761\u4ef6\u200b\u4e0b\u5b9a\u4e49\u200b(conditional definition)\u200b\u6216\u8005\u200b\u88ab\u200b\u4fdd\u62a4\u200b\u7684\u200b\u5b9a\u4e49\u200b\uff08guarded definition\uff09\u3002</p> <pre><code>f x y z\n  | condition1 = something\n  | condition2 = other\n  | otherwise  = somethingother\n</code></pre> <p>\u200b\u5176\u4e2d\u200b\u6bcf\u4e2a\u200b<code>condition</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b<code>Bool</code>\uff0c\u200b\u800c\u200b<code>otherwise</code>\u200b\u5339\u914d\u200b\u5176\u4ed6\u200b\u6240\u6709\u200b\u60c5\u51b5\u200b\u3002\u200b\u5b9e\u9645\u4e0a\u200b<code>otherwise</code>\u200b\u53ea\u662f\u200b<code>True</code>\u200b\u7684\u200b\u4e00\u4e2a\u200b\u522b\u540d\u200b\u7f62\u4e86\u200b\uff0c\u200b\u800c\u200b\u7531\u4e8e\u200b\u662f\u200b\u6309\u200b\u987a\u5e8f\u200b\u5224\u65ad\u200b\u7684\u200b\uff0c\u200b\u5230\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u5c31\u200b\u7ba1\u7406\u200b\u4e86\u200b\u6240\u6709\u200b\u6ca1\u200b\u663e\u793a\u200b\u58f0\u660e\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002</p> <p>\u200b\u4e00\u4e2a\u200b\u6590\u6ce2\u200b\u90a3\u5951\u200b\u7684\u200b\u4f8b\u5b50\u200b\uff1a</p> <pre><code>factorial n\n  | n&lt;0       = -1\n  | n==0      = 1\n  | otherwise = n * factorial (n-1)\n</code></pre>"},{"location":"Archive/Haskell/5.%20Class%E5%92%8CTypeclasses.html","title":"Class \u200b\u7c7b","text":""},{"location":"Archive/Haskell/5.%20Class%E5%92%8CTypeclasses.html#folding","title":"Folding \u200b\u6298\u53e0\u200b\u6570\u636e","text":"<p>\u200b\u5bf9\u4e8e\u200b\u53ef\u6298\u53e0\u200b(Foldable)\u200b\u7684\u200b\u6570\u636e\u7c7b\u578b\u200b,\u200b\u6709\u200b\u7684\u200b\u51fd\u6570\u200b\u5904\u7406\u200b\u6574\u4e2a\u200b\u6570\u636e\u7ed3\u6784\u200b\u5e76\u200b\u5f97\u5230\u200b\u4e00\u4e2a\u200b\u503c\u200b(\u200b\u4f8b\u5982\u200b <code>count,max</code>). \u200b\u6b64\u65f6\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200bprelude\u200b\u4e2d\u200b\u7684\u200b\u51fd\u6570\u200b<code>foldr</code>. \u200b\u7b2c\u4e8c\u4e2a\u200b\u53c2\u6570\u200b\u4e3a\u200b\u9ed8\u8ba4\u503c\u200b,\u200b\u5f53\u200b\u7b2c\u4e09\u4e2a\u200b\u53c2\u6570\u200b<code>[a]</code>\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u7a7a\u200b\u5217\u8868\u200b\u7684\u200b\u65f6\u5019\u200b\u8f93\u51fa\u200b\u8be5\u503c\u200b. \u200b\u5982\u679c\u200b\u975e\u7a7a\u200b, \u200b\u5219\u200b\u4f7f\u7528\u200b<code>f</code>\u200b\u51fd\u6570\u200b\u9012\u5f52\u200b\u5bf9\u200b\u5217\u8868\u200b\u8fdb\u884c\u200b\u5904\u7406\u200b.</p> <pre><code>foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b\nfoldr f y []     = y\nfoldr f y (x:xs) = f x (foldr f y xs)\n\n-- foldr (+) 0 [1,2,3] ==&gt; foldr (+) 0 (1:2:3:[])\n--                     ==&gt; 1 + (foldr (+) 0 (2:3:[]))\n--                     ==&gt; 1 + (2 + (foldr (+) 0 (3:[])))\n--                     ==&gt; 1 + (2 + (3 + (foldr (+) 0 [])))\n--                     ==&gt; 1 + (2 + (3 + 0))****\n</code></pre>"},{"location":"Archive/Haskell/5.%20Class%E5%92%8CTypeclasses.html#typeclasses","title":"Typeclasses \u200b\u7c7b\u578b\u200b\u7c7b","text":"<p>Typeclasses\u200b\u6307\u200b\u7684\u200b\u67d0\u4e9b\u200b\u5177\u6709\u200b\u76f8\u4f3c\u200b\u64cd\u4f5c\u200b\u7684\u200b\u7c7b\u200b\u5f62\u6210\u200b\u7684\u200b\u4e00\u4e2a\u7ec4\u200b(\u200b\u548c\u200b\u9762\u5411\u5bf9\u8c61\u200b\u4e2d\u200b\u7684\u200bclass\u200b\u4e0d\u662f\u200b\u4e00\u4e2a\u200b\u4e1c\u897f\u200b)\u3002\u200b\u53ef\u4ee5\u200b\u628a\u200b\u5b83\u200b\u60f3\u6210\u200b\u5176\u4ed6\u200b\u8bed\u8a00\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u63a5\u53e3\u200b\u3002</p> <p>\u200b\u5728\u200bHaskell\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>==</code>\u200b\u6765\u200b\u6bd4\u8f83\u200b\u4e24\u4e2a\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u5143\u7d20\u200b(\u200b\u4f8b\u5982\u200b<code>Int</code>\u200b\u548c\u200b<code>Double</code>), \u200b\u80fd\u8fc7\u200b\u505a\u5230\u200b\u8fd9\u200b\u4e00\u70b9\u200b\u7684\u200b\u539f\u56e0\u200b\u662f\u200bHaskell\u200b\u4e2d\u200b\u7684\u200bTypeclasses. \u200b\u4ee5\u4e0b\u200b\u662f\u200b<code>(==)</code>\u200b\u548c\u200b<code>(+)</code>\u200b\u64cd\u4f5c\u7b26\u200b\u7684\u200b\u5b9a\u4e49\u200b</p> <pre><code>(==) :: (Eq a) =&gt; a -&gt; a -&gt; Bool\n(+) :: (Num a) =&gt; a -&gt; a -&gt; a\n</code></pre> <p>\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u5b9a\u4e49\u200b\u7684\u200b\u542b\u4e49\u200b\u5982\u4e0b\u200b: \u200b\u5bf9\u4e8e\u200b\u6240\u6709\u200b\u7c7b\u578b\u200b<code>a</code>\u200b\u5c5e\u4e8e\u200bTypeclasses <code>Eq/Num</code>, \u200b\u8be5\u200b\u51fd\u6570\u200b\u7684\u200b\u7c7b\u578b\u200b\u662f\u200b<code>a -&gt; a -&gt; Bool/a</code>. <code>=&gt;</code> \u200b\u524d\u200b\u5185\u5bb9\u200b\u6307\u660e\u200b\u4e86\u200b\u6240\u5c5e\u200b\u7684\u200bTypeclasses.</p> <p>\u200b\u4e4b\u524d\u200b\u6709\u200b\u63d0\u5230\u200b\u8fc7\u200b\u53c2\u6570\u200b\u591a\u6001\u200b(parametric polymorphism, eg:<code>[a]</code>\u200b\u53ef\u4ee5\u200b\u5bf9\u5e94\u200b\u591a\u79cd\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u5217\u8868\u200b, c++\u200b\u91cc\u200b\u7684\u200b<code>template &lt;typename T&gt;</code>). \u200b\u8fd9\u91cc\u200b\u5bf9\u4e8e\u200b<code>(==)</code>\u200b\u7684\u200b\u884c\u4e3a\u200b\u6210\u4e3a\u200b\u7279\u8bbe\u200b\u591a\u6001\u200b(ad-hoc polymorphisms ),\u200b\u662f\u200b\u6307\u200b\u4e0d\u540c\u200b\u7684\u200b\u7c7b\u578b\u200b\u8868\u73b0\u200b\u51fa\u200b\u4e0d\u540c\u200b\u7684\u200b\u884c\u4e3a\u200b(\u200b\u4f8b\u5982\u200b\u5bf9\u200b<code>Int</code>\u200b\u548c\u200b<code>String</code>\u200b\u7684\u200b\u6bd4\u8f83\u200b\u65b9\u6cd5\u200b\u662f\u200b\u4e0d\u540c\u200b\u7684\u200b).</p>"},{"location":"Archive/Haskell/5.%20Class%E5%92%8CTypeclasses.html#type-constraints","title":"Type Constraints \u200b\u7c7b\u578b\u200b\u9650\u5236","text":"<p>\u200b\u7c7b\u578b\u200b\u9650\u5236\u200b\u5c31\u662f\u200b\u4e0a\u9762\u200b\u7684\u200b<code>(Type a) =&gt;</code>. \u200b\u5982\u679c\u200b\u7528\u200b\u4e86\u200b\u7c7b\u4f3c\u200b<code>==</code>\u200b\u7684\u200b\u64cd\u4f5c\u7b26\u200b,\u200b\u4f46\u662f\u200b\u6ca1\u6709\u200b\u52a0\u4e0a\u200b\u9650\u5236\u200b, \u200b\u7c7b\u578b\u200b\u63a8\u65ad\u200b\u4f1a\u200b\u81ea\u5df1\u200b\u63d0\u4f9b\u200b\u9650\u5236\u200b.</p> <pre><code>Prelude&gt; f g x = x == g x\nPrelude&gt; :type f\nf :: (Eq a) =&gt; (a -&gt; a) -&gt; a -&gt; Bool\n</code></pre>"},{"location":"Archive/Haskell/5.%20Class%E5%92%8CTypeclasses.html#typeclasses_1","title":"\u6807\u51c6\u200b\u5e93\u200bTypeclasses","text":""},{"location":"Archive/Haskell/5.%20Class%E5%92%8CTypeclasses.html#eq","title":"Eq","text":"<p>\u200b\u63d0\u4f9b\u200b\u76f8\u7b49\u200b\u6bd4\u8f83\u200b\u64cd\u4f5c\u200b</p> <pre><code>(==) :: Eq a =&gt; a -&gt; a -&gt; Bool\n(/=) :: Eq a =&gt; a -&gt; a -&gt; Bool\n</code></pre>"},{"location":"Archive/Haskell/5.%20Class%E5%92%8CTypeclasses.html#ord","title":"Ord","text":"<p>\u200b\u63d0\u4f9b\u200b\u5927\u5c0f\u200b\u6bd4\u8f83\u200b\u64cd\u4f5c\u200b</p> <pre><code>compare :: Ord a =&gt; a -&gt; a -&gt; Ordering\n(&lt;) :: Ord a =&gt; a -&gt; a -&gt; Bool\n(&gt;) :: Ord a =&gt; a -&gt; a -&gt; Bool\n(&gt;=) :: Ord a =&gt; a -&gt; a -&gt; Bool\n(&lt;=) :: Ord a =&gt; a -&gt; a -&gt; Bool\nmax :: Ord a =&gt; a -&gt; a -&gt; a\nmin :: Ord a =&gt; a -&gt; a -&gt; a\n</code></pre>"},{"location":"Archive/Haskell/5.%20Class%E5%92%8CTypeclasses.html#num-integral-fractional-floating","title":"Num, Integral, Fractional, Floating","text":"<p><code>Num</code>\u200b\u7c7b\u4e2d\u200b\u5305\u542b\u200b\u6574\u6570\u200b\u8fd0\u7b97\u200b\u64cd\u4f5c\u200b</p> <pre><code>(+) :: Num a =&gt; a -&gt; a -&gt; a\n(-) :: Num a =&gt; a -&gt; a -&gt; a\n(*) :: Num a =&gt; a -&gt; a -&gt; a\nnegate :: Num a =&gt; a -&gt; a    -- \u200b\u8d1f\u503c\u200b\nabs :: Num a =&gt; a -&gt; a       -- \u200b\u7edd\u5bf9\u503c\u200b\nsignum :: Num a =&gt; a -&gt; a    -- \u200b\u7b26\u53f7\u200b\u503c\u200b(-1/0/1)\nfromInteger :: Num a =&gt; Integer -&gt; a\n</code></pre> <p><code>Integral</code>\u200b\u7c7b\u4e2d\u200b\u5305\u542b\u200b\u5168\u90e8\u200b\u7684\u200b\u6570\u5b57\u200b,\u200b\u5305\u62ec\u200b<code>Int</code>\u200b\u548c\u200b<code>Integer</code>, \u200b\u6240\u6709\u200b\u5c5e\u4e8e\u200b<code>Integral</code>\u200b\u7c7b\u578b\u200b\u7684\u200b\u90fd\u200b\u5c5e\u4e8e\u200b<code>Num</code>. \u200b\u5b83\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u6c42\u5546\u200b\u548c\u200b\u53d6\u6a21\u200b\u8fd0\u7b97\u200b</p> <pre><code>div :: Integral a =&gt; a -&gt; a -&gt; a\nmod :: Integral a =&gt; a -&gt; a -&gt; a\n</code></pre> <p><code>Fractional</code>\u200b\u7c7b\u4e2d\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u9664\u6cd5\u200b\u8fd0\u7b97\u200b,\u200b\u6240\u6709\u200b\u5c5e\u4e8e\u200b<code>Fractional</code>\u200b\u7c7b\u578b\u200b\u7684\u200b\u90fd\u200b\u5c5e\u4e8e\u200b<code>Num</code>.</p> <pre><code>(/) :: Fractional a =&gt; a -&gt; a -&gt; a\n</code></pre> <p><code>Floating</code>\u200b\u7c7b\u4e2d\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u90a3\u4e9b\u200b\u53ea\u200b\u5bf9\u200b\u6d6e\u70b9\u6570\u200b\u8d77\u6548\u200b\u7684\u200b\u64cd\u4f5c\u200b,\u200b\u4f8b\u5982\u200b\u5f00\u200b\u6839\u53f7\u200b\\\u200b\u6c42\u200bSin\u200b\u7b49\u200b,\u200b\u6240\u6709\u200b\u5c5e\u4e8e\u200b<code>Floating</code>\u200b\u7c7b\u578b\u200b\u7684\u200b\u90fd\u200b\u5c5e\u4e8e\u200b<code>Fractional</code>(\u200b\u5f53\u7136\u200b\u4e5f\u200b\u5c5e\u4e8e\u200b<code>Num</code>).</p> <pre><code>sqrt :: Floating a =&gt; a -&gt; a\nsin :: Floating a =&gt; a -&gt; a\n</code></pre>"},{"location":"Archive/Haskell/5.%20Class%E5%92%8CTypeclasses.html#read-show","title":"Read, Show","text":"<p><code>Read</code>\u200b\u7c7b\u578b\u200b\u7684\u200b\u64cd\u4f5c\u200b\u4e3a\u200b\u51fd\u6570\u200b<code>Read</code>,\u200b\u5c06\u200b<code>String</code>\u200b\u4e2d\u200b\u7684\u200b\u5185\u5bb9\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u67d0\u4e2a\u200b\u7c7b\u578b\u200b</p> <pre><code>read :: Read a =&gt; String -&gt; a\n\n-- Prelude&gt; read \"3\" :: Int\n-- 3\n-- Prelude&gt; read \"3\" :: Double\n-- 3.0\n</code></pre> <p><code>Show</code>\u200b\u7c7b\u578b\u200b\u7684\u200b\u64cd\u4f5c\u200b\u4e3a\u200b\u51fd\u6570\u200b<code>Show</code>,\u200b\u5c06\u200b\u5176\u4ed6\u200b\u7c7b\u578b\u200b\u8f6c\u5316\u200b\u4e3a\u200b<code>String</code>.</p> <pre><code>show :: Show a =&gt; a -&gt; String\n\n-- Prelude&gt; show 3\n-- \"3\"\n</code></pre>"},{"location":"Archive/Haskell/5.%20Class%E5%92%8CTypeclasses.html#class_1","title":"\u5b9a\u4e49\u200b\u81ea\u5df1\u200b\u7684\u200bClass","text":""},{"location":"Archive/Haskell/6.%20Type%20%E7%B1%BB%E5%9E%8B.html","title":"Type \u200b\u7c7b\u578b","text":""},{"location":"Archive/Haskell/6.%20Type%20%E7%B1%BB%E5%9E%8B.html#1","title":"1 \u200b\u4ee3\u6570\u200b\u6570\u636e\u7c7b\u578b","text":""},{"location":"Archive/Haskell/6.%20Type%20%E7%B1%BB%E5%9E%8B.html#11","title":"1.1 \u200b\u5b9a\u4e49\u200b\u7c7b\u578b","text":"<p>Haskell\u200b\u5bf9\u4e8e\u200b\u65b0\u200b\u5b9a\u4e49\u200b\u7684\u200b\u7c7b\u578b\u200b\u6709\u200b\u4e00\u5957\u200b\u4f53\u7cfb\u200b\uff0c\u200b\u79f0\u4e3a\u200b\u4ee3\u6570\u200b\u6570\u636e\u7c7b\u578b\u200b(algebraic datatypes)\u3002\u200b\u8bed\u6cd5\u200b\u5982\u4e0b\u200b\uff0c<code>(=)</code>\u200b\u4e4b\u524d\u200b\u7684\u200b\u90e8\u5206\u200b\u8868\u793a\u200b\u7c7b\u578b\u200b\uff0c<code>(=)</code>\u200b\u540e\u9762\u200b\u7684\u200b\u90e8\u5206\u200b\u662f\u200b\u503c\u200b\u6784\u9020\u51fd\u6570\u200b\u3002\u200b\u5b83\u4eec\u200b\u6307\u5b9a\u200b\u4e86\u200b\u8fd9\u4e2a\u200b\u7c7b\u578b\u200b\u53ef\u4ee5\u200b\u62e5\u6709\u200b\u7684\u200b\u4e0d\u540c\u200b\u503c\u200b\u3002<code>(|)</code>\u200b\u88ab\u200b\u7406\u89e3\u200b\u4e3a\u200b\u201c\u200b\u6216\u200b\u201d\u3002</p> <pre><code>data Bool = True | False  -- Bool\u200b\u7c7b\u578b\u200b\u53ef\u4ee5\u200b\u6709\u200bTrue\u200b\u6216\u200bFalse\u200b\u7684\u200b\u503c\u200b\u3002\ndata Ordering = LT | EQ | GT  -- Ordering\u200b\u7c7b\u578b\u200b\u53ef\u4ee5\u200b\u62e5\u6709\u200bLT\u200b\u6216\u200bEQ\u200b\u6216\u200bGT\u200b\u7684\u200b\u503c\u200b\n</code></pre> <p>Note</p> <p>\u200b\u7c7b\u578b\u200b\u540d\u79f0\u200b\u548c\u200b\u503c\u200b\u6784\u9020\u51fd\u6570\u200b\u90fd\u200b\u5fc5\u987b\u200b\u662f\u200b\u5927\u5199\u200b\u3002</p> <p>\u200b\u901a\u8fc7\u200b\u8fd9\u4e2a\u200b\u65b9\u6cd5\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5b9a\u4e49\u200b\u81ea\u5df1\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u6bd4\u5982\u200b\u4ee5\u4e0b\u200b<code>Color</code>\u200b\u7684\u200b\u5b9a\u4e49\u200b\u3002</p> <pre><code>-- \u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u6709\u200b\u4e09\u4e2a\u200b\u503c\u200b\u7684\u200b\u7c7b\u578b\u200b\ndata Color = Red | Green | Blue\n\n-- \u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u8f93\u5165\u200b\u53c2\u6570\u200b\u4e3a\u200bColor\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u5e76\u200b\u4f7f\u7528\u200b\u6a21\u5f0f\u5339\u914d\u200b\nrgb :: Color -&gt; [Double]\nrgb Red = [1,0,0]\nrgb Green = [0,1,0]\nrgb Blue = [0,0,1]\n</code></pre> <p>\u200b\u6b64\u65f6\u200b<code>Red, Green, Blue</code>\u200b\u5c31\u662f\u200b<code>Color</code>\u200b\u7c7b\u578b\u200b\u4e2d\u200b\u7684\u200b\u4e09\u4e2a\u200b\u503c\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u65b0\u200b\u5b9a\u4e49\u200b\u53d8\u91cf\u200b\u8d4b\u503c\u200b\u4e3a\u200b\u8fd9\u200b\u51e0\u4e2a\u200b\u503c\u200b\u3002</p> <pre><code>ghci&gt; :t Green\nGreen :: Color\nghci&gt; :t [Red,Blue,Green]\n[Red,Blue,Green] :: [Color]\nghci&gt; newcolor = Red\nghci&gt; :t newcolor\nnewcolor :: Color\nghci&gt; rgb Red\n[1.0,0.0,0.0]\n</code></pre> <p>\u200b\u4e0a\u9762\u200b\u6240\u4e3e\u200b\u7684\u200b\u4f8b\u5b50\u200b\u4e2d\u200b<code>Bool, Ordering, Color</code>\u200b\u90fd\u200b\u53ea\u200b\u5305\u542b\u200b\u4e86\u200b\u4e00\u7cfb\u5217\u200b\u7684\u200b\u5e38\u91cf\u200b\uff0c\u200b\u8fd9\u79cd\u200b\u7c7b\u578b\u200b\u5176\u5b9e\u200b\u5c31\u662f\u200b\u5176\u4ed6\u200b\u8bed\u8a00\u200b\u4e2d\u200b\u7684\u200b\u679a\u4e3e\u200b(enum)\u3002</p>"},{"location":"Archive/Haskell/6.%20Type%20%E7%B1%BB%E5%9E%8B.html#12-fields-and-constructor","title":"1.2 Fields and Constructor \u200b\u57df\u200b\u548c\u200b\u6784\u9020\u200b\u5668","text":"<p>\u200b\u4f46\u200b\u540c\u65f6\u200b\u6709\u200b\u7684\u200b\u65f6\u5019\u200b\u4e0d\u6b62\u200b\u9700\u8981\u200b\u5e38\u91cf\u200b\uff0c\u200b\u800c\u662f\u200b\u9700\u8981\u200b\u80fd\u591f\u200b\u7ec4\u5408\u200b\u5176\u4ed6\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002\u200b\u4f8b\u5982\u200b\u5982\u4e0b\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b<code>Shape</code>\uff0c\u200b\u5982\u679c\u200b\u662f\u200b<code>Circle</code>\u200b\u5219\u200b\u4f7f\u7528\u200b\u4e2d\u5fc3\u70b9\u200b\u5750\u6807\u200b\u548c\u200b\u6807\u8bb0\u200b\\((x,y,r)\\)\u200b\u8868\u793a\u200b\uff1b\u200b\u5982\u679c\u200b\u662f\u200b<code>Rectangle</code>\u200b\u5219\u200b\u4f7f\u7528\u200b\u5de6\u200b\u4e0a\u200b/\u200b\u53f3\u4e0b\u70b9\u200b\u5750\u6807\u200b\\((x_1,y_1,x_2,y_2)\\)\u200b\u8868\u793a\u200b\u3002</p> <pre><code>data Shape = Circle Float Float Float | Rectangle Float Float Float Float \n</code></pre> <p>\u200b\u6211\u4eec\u200b\u628a\u200b\u6bcf\u4e2a\u200b<code>Circle</code>\u200b\u548c\u200b<code>Rectangle</code>\u200b\u53eb\u505a\u200b\u6784\u9020\u51fd\u6570\u200b\uff0c\u200b\u800c\u200b\u540e\u9762\u200b\u7684\u200b<code>Float Float Float</code>\u200b\u5219\u200b\u53eb\u505a\u200b\u57df\u200b\uff08\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u8ba4\u4e3a\u200b\u5c31\u662f\u200b\u53c2\u6570\u200b\uff09\u3002\u200b\u9996\u5148\u200b\u770b\u200b\u4e00\u4e0b\u200b\u6784\u9020\u200b\u5668\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5b83\u4eec\u200b\u7684\u200b\u5b9a\u4e49\u200b\u770b\u4e0a\u53bb\u200b\u5c31\u200b\u50cf\u662f\u200b\u4e00\u4e2a\u200b\u666e\u901a\u200b\u51fd\u6570\u200b\u3002</p> <pre><code>ghci&gt; :t Circle  \nCircle :: Float -&gt; Float -&gt; Float -&gt; Shape  \n-- \u200b\u63a5\u6536\u200b\u4e09\u4e2a\u200bFloat\uff0c \u200b\u8f93\u5165\u200b\u4e00\u4e2a\u200bShape\u200b\u7c7b\u578b\u200b\nghci&gt; :t Rectangle  \nRectangle :: Float -&gt; Float -&gt; Float -&gt; Float -&gt; Shape  \n-- \u200b\u63a5\u6536\u200b\u56db\u4e2a\u200bFloat\uff0c \u200b\u8f93\u5165\u200b\u4e00\u4e2a\u200bShape\u200b\u7c7b\u578b\u200b\n</code></pre> <p>\u200b\u90a3\u200b\u5f53\u7136\u200b\u4f7f\u7528\u200b\u65b9\u5f0f\u200b\u4e5f\u200b\u5c31\u200b\u548c\u200b\u51fd\u6570\u200b\u4e00\u6a21\u4e00\u6837\u200b\uff0c\u200b\u5982\u679c\u200b\u60f3\u8981\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b \u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u7c7b\u4f3c\u200b<code>c = Circle 1 2 3</code>\u200b\u8fd9\u6837\u200b\u7684\u200b\u8bed\u53e5\u200b\u3002\u200b\u6765\u770b\u200b\u4e00\u4e2a\u200b\u4f7f\u7528\u200b<code>Shape</code>\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\u7684\u200b\u51fd\u6570\u200b\u4f8b\u5b50\u200b\u3002</p> <pre><code>surface :: Shape -&gt; Float  -- \u200b\u8ba1\u7b97\u200b\u8868\u9762\u79ef\u200b\nsurface (Circle _ _ r) = pi * r ^ 2   -- \u200b\u5706\u5f62\u200b\u9762\u79ef\u200b\u516c\u5f0f\u200b\nsurface (Rectangle x1 y1 x2 y2) = (abs $ x2 - x1) * (abs $ y2 - y1)   -- \u200b\u65b9\u5f62\u200b\u9762\u79ef\u200b\u516c\u5f0f\u200b\n</code></pre> <p>Note</p> <p>\u200b\u7528\u200b\u6a21\u5f0f\u5339\u914d\u200b\u53ef\u4ee5\u200b\u5bf9\u5e94\u200b\u5230\u200bType\u200b\u4e2d\u200b\u7684\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\uff0c\u200b\u540c\u65f6\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u8bbf\u95ee\u200b\u5b83\u4eec\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u57df\u200b\u5185\u5bb9\u200b\u3002\u200b\u6ce8\u610f\u200b\u9700\u8981\u200b\u6307\u660e\u200b\u6784\u9020\u200b\u5668\u200b\uff0c\u200b\u7528\u200b\u4e00\u4e2a\u200b\u62ec\u53f7\u200b\u5c06\u200b\u6240\u6709\u200b\u57df\u62ec\u200b\u8d77\u6765\u200b\u3002</p>"},{"location":"Archive/Haskell/6.%20Type%20%E7%B1%BB%E5%9E%8B.html#13-deriving","title":"1.3 Deriving \u200b\u884d\u751f\u200b\u4e8e","text":"<p>\u200b\u521a\u521a\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u7684\u200b<code>Shape</code>\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5728\u200b\u58f0\u660e\u200b\u65b0\u200b\u53d8\u91cf\u200b\u7684\u200b\u65f6\u5019\u200b\u51fa\u73b0\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u62a5\u9519\u200b\u3002\u200b\u8fd9\u200b\u662f\u56e0\u4e3a\u200b<code>print</code>\u200b\u65b9\u6cd5\u200b\u53ea\u200b\u63a5\u53d7\u200b<code>Show</code>\u200b\u7c7b\u578b\u200b\u7c7b\u200b\uff0c\u200b\u800c\u200b<code>Shape</code>\u200b\u4e0d\u662f\u200b\u5176\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u3002</p> <pre><code>ghci&gt; c = Circle 1 2 3\nghci&gt; c\n\n&lt;interactive&gt;:33:1: error:\n    ? No instance for (Show Shape) arising from a use of \u2018print\u2019\n    ? In a stmt of an interactive GHCi command: print it\n\nghci&gt; :t print\nprint :: Show a =&gt; a -&gt; IO ()\n</code></pre> <p>\u200b\u8fd9\u65f6\u5019\u200b\u5c31\u200b\u9700\u8981\u200b\u628a\u200b<code>Shape</code>\u200b\u7c7b\u578b\u200b\u5f52\u6863\u200b\u5230\u200b<code>Show</code>\u200b\u7c7b\u578b\u200b\u7c7b\u4e2d\u200b\uff0c\u200b\u6240\u200b\u4f7f\u7528\u200b\u7684\u200b\u5173\u952e\u5b57\u200b\u662f\u200b<code>deriving</code></p> <pre><code>data Shape = Circle Float Float Float | Rectangle Float Float Float Float deriving (Show)  \n</code></pre> <p>\u200b\u518d\u6b21\u200b\u5c1d\u8bd5\u200b\u5c06\u200b\u5b83\u4eec\u200b\u6253\u5370\u200b\u51fa\u6765\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u5982\u4e0b\u200b\u7ed3\u679c\u200b\u3002\u200b\u8fd9\u79cd\u200b\u884c\u4e3a\u200b\u7c7b\u4f3c\u200bPython\u200b\u4e2d\u200b\u76f4\u63a5\u200b\u628a\u200b\u4e00\u4e2a\u200b\u590d\u6742\u200b\u5217\u8868\u200b\u6253\u5370\u200b\u51fa\u6765\u200b\uff0c<code>Show</code>\u200b\u662f\u200b\u9010\u4e2a\u200b\u53bb\u200b\u5904\u7406\u200b<code>Shape</code>\u200b\u4e2d\u200b\u7684\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u57df\u200b\u3002</p> <pre><code>ghci&gt; Circle 1 2 3\nCircle 1.0 2.0 3.0\n</code></pre>"},{"location":"Archive/Haskell/6.%20Type%20%E7%B1%BB%E5%9E%8B.html#14","title":"1.4 \u200b\u4e3a\u4ec0\u4e48\u200b\u53eb\u200b\u4ee3\u6570\u200b\u6570\u636e\u7c7b\u578b\u200b\uff1f","text":"<p>\u200b\u4e3a\u4ec0\u4e48\u200b\u8fd9\u4e9b\u200b\u6570\u636e\u7c7b\u578b\u200b\u88ab\u200b\u79f0\u4e3a\u200b\u4ee3\u6570\u200b\u578b\u200b\uff1f\u200b\u8fd9\u200b\u662f\u56e0\u4e3a\u200b\u4ece\u200b\u7406\u8bba\u200b\u4e0a\u200b\u8bb2\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u6570\u636e\u7c7b\u578b\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u662f\u200b\u6784\u9020\u51fd\u6570\u200b\u7684\u200b\u548c\u200b\uff0c\u200b\u800c\u200b\u6bcf\u4e2a\u200b\u6784\u9020\u51fd\u6570\u200b\u90fd\u200b\u662f\u200b\u57df\u200b\u7684\u200b\u79ef\u200b\u3002 \u200b\u8003\u8651\u200b\u4e00\u4e9b\u200b\u6570\u5b66\u200b\u4e0a\u200b\u7684\u200b\u5bf9\u5e94\u200b  Haskell                        | Math | Notes ------------------------------------|---------------|--------------------------------------------------  data Void                          | \\(0\\)             | \u200b\u4e0d\u200b\u53ef\u80fd\u200b\u6784\u5efa\u200b\u8fd9\u79cd\u200b\u7c7b\u578b\u200b\u7684\u200b\u672f\u8bed\u200b\uff08\u200b\u9700\u8981\u200bLANGUAGE EmptyDataDecls\uff09\u3002  data Unit = Unit                   | \\(1\\)             |  \u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\u672f\u8bed\u200b\u7684\u200b\u7c7b\u578b\u200b  data Bool = True | False           | \\(1+1\\)           | \u200b\u53ef\u200b\u5c31\u662f\u200b\u00a02\u00a0(3,\u00a04, ...)  data Maybe a = Just a | Nothing    | \\(a+1\\)           | \u200b\u628a\u200b \u201c++\u201d \u200b\u53eb\u505a\u200b \u201cEither\u201d  data Either a b = Left a | Right b | \\(a+b\\)           |  data (a, b) = (a, b)               | \\(a\\times b\\)     | \u200b\u628a\u200b \u201c\u00d7\u00d7\u201d \u200b\u53eb\u505a\u200b \u201cAnd\u201d  a -&gt; b                             | \\(b^a\\)           |</p>"},{"location":"Archive/Haskell/6.%20Type%20%E7%B1%BB%E5%9E%8B.html#2","title":"2 \u200b\u7c7b\u578b\u200b\u53c2\u6570","text":"<p>\u200b\u5728\u200b\u5217\u8868\u200b\u4ecb\u7ecd\u200b\u4e86\u200b\u7c7b\u578b\u200b\u53c2\u6570\u200b\u548c\u200b\u53c2\u6570\u200b\u5316\u200b\u591a\u6001\u6027\u200b\u3002\u200b\u6b64\u540e\u200b\uff0c\u200b\u6211\u4eec\u200b\u53c8\u200b\u770b\u5230\u200b\u4e86\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\u5316\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5982\u200b <code>Maybe</code> \u200b\u548c\u200b <code>Either</code>\u3002\u200b\u73b0\u5728\u200b\u6211\u4eec\u200b\u5c06\u200b\u5b66\u4e60\u200b\u5982\u4f55\u200b\u5b9a\u4e49\u200b\u6211\u4eec\u200b\u81ea\u5df1\u200b\u7684\u200b\u53c2\u6570\u200b\u5316\u200b\u7c7b\u578b\u200b\u3002</p> <p>\u200b\u9996\u5148\u200b\u6765\u770b\u200b<code>Maybe</code>\u200b\u7684\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u5176\u4e2d\u200b\u7684\u200b<code>a</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\u53d8\u91cf\u200b\u3002\u200b\u8fd9\u6837\u200b\u5c31\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u80fd\u591f\u200b\u652f\u6301\u200b\u7c7b\u578b\u200b\u591a\u6001\u200b\u7684\u200b\u65b0\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>data Maybe a = Nothing | Just a\n</code></pre> <p>\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7ed9\u5b9a\u200b\u591a\u4e2a\u200b\u53d8\u91cf\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u503c\u200b\u53ef\u4ee5\u200b\u53ea\u200b\u8981\u6c42\u200b\u4e00\u5c0f\u90e8\u5206\u200b\u3002</p> <pre><code>data Either a b = Left a | Right b\n</code></pre> <p>Note</p> <ol> <li>\u200b\u7c7b\u578b\u200b\u53c2\u6570\u200b\u5e94\u8be5\u200b\u662f\u200b\u5c0f\u5199\u200b\u5f00\u5934\u200b\uff0c<code>Maybe a</code>,<code>Maybe theType</code>\u200b\u90fd\u884c\u200b\u3002</li> <li>\u200b\u6784\u9020\u51fd\u6570\u200b\u548c\u200b\u7c7b\u578b\u200b\u53ef\u4ee5\u200b\u6709\u7740\u200b\u76f8\u540c\u200b\u7684\u200b\u540d\u5b57\u200b\uff0c\u200b\u4f8b\u5982\u200b<code>data Pair a = Pair a a</code>\u3002\u200b\u4f46\u662f\u200b\u6700\u597d\u200b\u4e0d\u8981\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u542b\u4e49\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u6df7\u200b\u3002\u200b\u4f8b\u5982\u200b\u4ee5\u4e0b\u200b\u8fd9\u4e2a\u200b\u62a5\u9519\u200b\u4f8b\u5b50\u200b     <code>Haskell     --\u200b\u5c1d\u8bd5\u200b\u628a\u200b\u7c7b\u578b\u200b\u540d\u200b\u5f53\u6210\u200b\u503c\u6765\u200b\u7528\u200b     Prelude&gt; Maybe     &lt;interactive&gt;:1:1: error:         \u2022 Data constructor not in scope: Maybe     -- \u200b\u5c1d\u8bd5\u200b\u628a\u200b\u503c\u200b\u5f53\u6210\u200b\u7c7b\u578b\u200b\u540d\u6765\u200b\u7528\u200b     Prelude&gt; undefined :: Nothing     &lt;interactive&gt;:2:14: error:         Not in scope: type constructor or class \u2018Nothing\u2019</code></li> </ol>"},{"location":"Archive/Haskell/6.%20Type%20%E7%B1%BB%E5%9E%8B.html#3","title":"3 \u200b\u9012\u5f52\u200b\u7c7b\u578b","text":"<p>\u200b\u524d\u9762\u200b\u5b9a\u4e49\u200b\u7684\u200b\u7c7b\u578b\u200b\u90fd\u200b\u662f\u200b\u5b9a\u957f\u200b\u7684\u200b\uff0c\u200b\u4f46\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b<code>List</code>\u200b\u8fd9\u6837\u200b\u7684\u200b\u7c7b\u578b\u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\u652f\u6301\u200b\u4e0d\u5b9a\u200b\u957f\u200b\u7684\u200b\u53d8\u91cf\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5bf9\u200b\u8fd9\u7c7b\u200b\u7c7b\u578b\u200b\u7684\u200b\u5b9a\u4e49\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u9012\u5f52\u200b\u3002</p> <p>\u200b\u4ee5\u4e0b\u200b\u8fd9\u4e2a\u200b\u4f8b\u5b50\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u6574\u6570\u200b\u5217\u8868\u200b\u7c7b\u200b<code>IntList</code>\u3002\u200b\u5728\u200b\u7b2c\u4e8c\u4e2a\u200b\u6784\u9020\u51fd\u6570\u200b<code>Node</code>\u200b\u4e2d\u200b\uff0c\u200b\u53c2\u6570\u200b\u4e3a\u200b\u4e00\u4e2a\u200b<code>Int</code>\u200b\u548c\u200b\u4e00\u4e2a\u200b<code>IntList</code>\u200b\u672c\u8eab\u200b\u3002</p> <pre><code>data IntList = Empty | Node Int IntList\n  deriving Show\n\nihead :: IntList -&gt; Int -- \u200b\u8fd4\u56de\u200b\u5217\u8868\u200b\u5934\u200b\nihead (Node i _) = i\n\nitail :: IntList -&gt; IntList -- \u200b\u8fd4\u56de\u200b\u9664\u4e86\u200b\u5217\u8868\u200b\u5934\u200b\u7684\u200b\u5269\u4f59\u200b\u90e8\u5206\u200b\nitail (Node _ t) = t\n\nilength :: IntList -&gt; Int -- \u200b\u8fd4\u56de\u200b\u5217\u8868\u200b\u957f\u5ea6\u200b\nilength Empty = 0\nilength (Node _ t) = 1 + ilength t\n\n-- Prelude&gt; ihead (Node 3 (Node 5 (Node 4 Empty)))\n-- 3\n-- Prelude&gt; itail (Node 3 (Node 5 (Node 4 Empty)))\n-- Node 5 (Node 4 Empty)\n-- Prelude&gt; ilength (Node 3 (Node 5 (Node 4 Empty)))\n-- 3\n</code></pre> <p>\u200b\u5728\u200b\u4e0a\u9762\u200b\u7684\u200b\u4f8b\u5b50\u200b\u4e0a\u200b\u52a0\u4e0a\u200b\u7c7b\u578b\u200b\u53c2\u6570\u200b\uff0c\u200b\u5c31\u200b\u5f62\u6210\u200b\u4e86\u200b\u901a\u7528\u200b\u5217\u8868\u200b\uff08\u200b\u6ce8\u610f\u200b<code>List a</code>\u200b\u8981\u52a0\u200b\u62ec\u53f7\u200b\uff09\u3002</p> <pre><code>data List a = Empty | Node a (List a)\n  deriving Show\n</code></pre> <p>\u200b\u90a3\u4e48\u200b\u4e8c\u53c9\u6811\u200b\u7b49\u200b\u7ed3\u6784\u200b\u5b9a\u4e49\u200b\u4e5f\u200b\u975e\u5e38\u7b80\u5355\u200b</p> <pre><code>data Tree a = Node a (Tree a) (Tree a) | Empty\n</code></pre>"},{"location":"Archive/Haskell/6.%20Type%20%E7%B1%BB%E5%9E%8B.html#4","title":"4 \u200b\u8bb0\u5f55\u200b\u8bed\u6cd5","text":"<p>\u200b\u5982\u679c\u200b\u6709\u200b\u4e00\u4e9b\u200b\u57df\u200b\u7ecf\u5e38\u200b\u88ab\u200b\u8bbf\u95ee\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u5e2e\u52a9\u200b\u8bfb\u200b\u8fd9\u4e9b\u200b\u57df\u200b\u7684\u200b\u51fd\u6570\u200b\u603b\u662f\u200b\u597d\u200b\u7684\u200b\u3002\u200b\u4f8b\u5982\u200b\u4e00\u4e2a\u200b<code>Person</code>\u200b\u57df\u200b\u53ef\u80fd\u200b\u6709\u200b\u591a\u4e2a\u200b\u5b57\u200b\u6bb5\u200b\uff0c\u200b\u5176\u4e2d\u200b\u804c\u4e1a\u200b\u5b57\u200b\u6bb5\u200b\u7ecf\u5e38\u200b\u88ab\u200b\u8bbf\u95ee\u200b\u3002\u200b\u90a3\u4e48\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u8bb0\u5f55\u200b\u8bed\u6cd5\u200b\u6765\u200b\u6307\u660e\u200b\u6bcf\u4e2a\u200b\u57df\u200b\u7684\u200b\u540d\u79f0\u200b\u3002</p> <pre><code>data Person = MkPerson { name :: String, age :: Int, town :: String, state :: String, profession :: String}\n  deriving Show\n</code></pre> <p>\u200b\u5728\u200b\u5b9a\u4e49\u200b\u7684\u200b\u65f6\u5019\u200b\u8fd8\u662f\u200b\u53ef\u4ee5\u200b\u548c\u200b\u539f\u6765\u200b\u6309\u5e8f\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u6307\u660e\u200b\u540d\u79f0\u200b\u3002<code>Show</code>\u200b\u6b64\u65f6\u200b\u5c31\u200b\u4f1a\u200b\u663e\u793a\u200b\u51fa\u200b\u6bcf\u4e2a\u200b\u57df\u200b\u7684\u200b\u8bb0\u5f55\u200b\u540d\u6765\u200b\u3002</p> <pre><code>Prelude&gt; MkPerson \"Jane Doe\" 21 \"Houston\" \"Texas\" \"Engineer\"\nMkPerson {name = \"Jane Doe\", age = 21, town = \"Houston\", state = \"Texas\", profession = \"Engineer\"}\n\nPrelude&gt; MkPerson {name = \"Jane Doe\", town = \"Houston\", profession = \"Engineer\", state = \"Texas\", age = 21}\nMkPerson {name = \"Jane Doe\", age = 21, town = \"Houston\", state = \"Texas\", profession = \"Engineer\"}\n</code></pre> <p>\u200b\u8fd9\u4e9b\u200b\u8bb0\u5f55\u200b\u540d\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b\u8bbf\u95ee\u200b\u51fd\u6570\u200b\u3002\u200b\u6b64\u65f6\u200b\u8bbf\u95ee\u200b\u8fd9\u4e9b\u200b\u57df\u200b\u662f\u200b\u4e0d\u200b\u9700\u8981\u200b\u5bfb\u627e\u200b\uff0c\u200b\u4ee3\u4ef7\u200b\u5f88\u5c0f\u200b\u7684\u200b\uff0c\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\u5b57\u5178\u200b\u90a3\u6837\u200b\u3002</p> <pre><code>Prelude&gt; :t profession\nprofession :: Person -&gt; String\nPrelude&gt; profession (MkPerson \"Jane Doe\" 21 \"Houston\" \"Texas\" \"Engineer\")\n\"Engineer\"\n</code></pre> <p>\u200b\u90a3\u4e48\u200b\u8981\u200b\u5199\u200b\u7b5b\u9009\u200b\u51fd\u6570\u200b\u7684\u8bdd\u200b\u5c31\u200b\u53ea\u7528\u200b\u8c03\u7528\u200b\u4e0a\u9762\u200b\u8bbf\u95ee\u200b\u51fd\u6570\u200b\u3002</p> <pre><code>query :: [Person] -&gt; [Person]\nquery []     = []\nquery (x:xs)\n  | state x == \"Finland\" &amp;&amp; profession x == \"Engineer\" =\n      x : query xs\n  | otherwise = query xs\n</code></pre>"},{"location":"Archive/Haskell/6.%20Type%20%E7%B1%BB%E5%9E%8B.html#5","title":"5 \u200b\u5176\u4ed6\u200b\u5b9a\u4e49\u200b\u7c7b\u578b\u200b\u7684\u200b\u65b9\u5f0f","text":"<p>\u200b\u9664\u4e86\u200b<code>data</code>\u200b\u5173\u952e\u5b57\u200b\u5916\u200b\uff0c\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>newtype</code>\u200b\u548c\u200b<code>type</code>\u200b\u6765\u200b\u5b9a\u4e49\u200b\u7c7b\u578b\u200b\u3002 <code>newtype</code>\u200b\u548c\u200b<code>data</code>\u200b\u51e0\u4e4e\u200b\u76f8\u540c\u200b\uff0c\u200b\u4f46\u662f\u200b\u53ea\u80fd\u200b\u6709\u200b\u4e00\u4e2a\u200b\u6784\u9020\u51fd\u6570\u200b\u3001\u200b\u4e00\u4e2a\u200b\u57df\u200b\u3002 <code>type</code>\u200b\u5219\u200b\u53ef\u4ee5\u200b\u7528\u6765\u200b\u5b9a\u4e49\u200b\u7c7b\u578b\u200b\u522b\u540d\u200b\uff0c\u200b\u6bd4\u5982\u200b\u6700\u200b\u7ecf\u5178\u200b\u7684\u200b</p> <pre><code>type String = [Char]\n</code></pre>"},{"location":"Archive/Haskell/7.%20Class%E6%B7%B1%E5%85%A5%E4%BD%BF%E7%94%A8.html","title":"Class\u200b\u6df1\u5165\u200b\u4f7f\u7528","text":"<p>\u200b\u5728\u200b\u524d\u200b\u4e24\u7ae0\u200b\u4e2d\u200b\u4ecb\u7ecd\u200b\u4e86\u200b\u6807\u51c6\u200b\u5e93\u4e2d\u200b\u7684\u200bTypeclasses\u200b\u548c\u200b\u81ea\u5b9a\u4e49\u200bType\uff08\u200b\u5e76\u200b\u901a\u8fc7\u200b<code>deriving</code>\u200b\u8ba9\u200b\u5176\u200b\u5c5e\u4e8e\u200b\u67d0\u4e2a\u200b\u6807\u51c6\u200bTypeclasses\uff09\u3002\u200b\u8fd9\u200b\u4e00\u7ae0\u200b\u4e3b\u8981\u200b\u4ecb\u7ecd\u200b\u5982\u4f55\u200b\u81ea\u5df1\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200bTypeclasses\uff1b\u200b\u4ee5\u53ca\u200b\u81ea\u5b9a\u4e49\u200bType\u200b\u5728\u200b\u67d0\u200bTypeclasses \u200b\u4e2d\u200b\u7684\u200b\u5177\u4f53\u200b\u884c\u4e3a\u200b\u3002</p>"},{"location":"Archive/Haskell/7.%20Class%E6%B7%B1%E5%85%A5%E4%BD%BF%E7%94%A8.html#typetypeclasses","title":"\u5b9a\u4e49\u200bType\u200b\u5728\u200b\u67d0\u4e2a\u200bTypeclasses\u200b\u4e0b\u200b\u7684\u200b\u884c\u4e3a","text":"<p>\u200b\u5982\u679c\u200b\u7528\u200b\u5728\u200b\u5b9a\u4e49\u200bType\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u7528\u200b<code>deriving</code>\u200b\u58f0\u660e\u200b\u5c5e\u4e8e\u200b\u67d0\u4e2a\u200bTypeclasses\uff0c\u200b\u90a3\u4e48\u200b\u884c\u4e3a\u200b\u5c31\u200b\u5b8c\u5168\u200b\u6309\u7167\u200b\u6807\u51c6\u200b\u5e93\u200b\u7684\u200b\u8bed\u6cd5\u200b\u3002\u200b\u4f46\u662f\u200b\u6709\u200b\u7684\u200b\u65f6\u5019\u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\u4e00\u4e9b\u200b\u548c\u200b\u6807\u51c6\u200b\u4e0d\u540c\u200b\u7684\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u6b64\u65f6\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>instance</code>\u200b\u5173\u952e\u5b57\u200b\u3002</p> <p>\u200b\u4e3e\u4f8b\u6765\u8bf4\u200b\uff0cType<code>Person</code>\u200b\u4e2d\u6709\u200b\u5de5\u53f7\u200b\u3001\u200b\u59d3\u540d\u200b\u3001\u200b\u804c\u4f4d\u200b\u4e09\u4e2a\u200b\u57df\u200b\u3002\u200b\u6211\u4eec\u200b\u5e0c\u671b\u200b\u505a\u5230\u200b\u7684\u200b\u6548\u679c\u200b\u662f\u200b\uff1a\u200b\u5982\u679c\u200b\u5de5\u53f7\u200b\u548c\u200b\u59d3\u540d\u200b\u90fd\u200b\u4e00\u6837\u200b\uff0c\u200b\u5219\u200b\u8ba4\u4e3a\u200b\u662f\u200b\u540c\u4e00\u4e2a\u200b\u4eba\u200b\u3002</p> <pre><code>data Person = Person {id::Int,name::String,position::String} deriving(Show)\n\npeter1 = Person 1 \"peter\" \"ceo\"\npeter2 = Person 1 \"peter\" \"cto\" -- peter2\u200b\u548c\u200bpeter1\u200b\u662f\u200b\u540c\u4e00\u200b\u4eba\u200b\npeter3 = Person 2 \"peter\" \"cfo\" -- peter3\u200b\u548c\u200bpeter1\u200b\u662f\u200b\u4e0d\u540c\u200b\u4eba\u200b\n</code></pre> <p>\u200b\u5982\u679c\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b<code>deriving Eq</code>\uff0c\u200b\u90a3\u4e48\u200b\u5728\u200b\u4f7f\u7528\u200b<code>(==),(\\=)</code>\u200b\u8fd0\u7b97\u7b26\u200b\u7684\u200b\u65f6\u5019\u200b\u5c06\u4f1a\u200b\u9010\u4e2a\u200b\u6bd4\u8f83\u200b\u6bcf\u4e2a\u200b\u57df\u200b\uff0c\u200b\u81ea\u7136\u200b\u4e0a\u9762\u200b\u7684\u200b\u4e09\u4e2a\u200b\u4eba\u200b\u90fd\u200b\u662f\u200b\u4e0d\u540c\u200b\u7684\u200b\u3002\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b\u8fdb\u884c\u200b\u5982\u4e0b\u200b\u5b9a\u4e49\u200b</p> <pre><code>instance Eq Person where\n    (==) (Person id1 name1 pos1)(Person id2 name2 pos2) \n       = (id1 == id2) &amp;&amp; (name1 == name2)\n   -- \u200b\u53ea\u200b\u6bd4\u8f83\u200b\u5de5\u53f7\u200b\u548c\u200b\u540d\u5b57\u200b\n\n-- ghci&gt; peter1 == peter2\n-- True\n-- ghci&gt; peter3 == peter2\n-- False\n</code></pre>"},{"location":"Archive/Haskell/7.%20Class%E6%B7%B1%E5%85%A5%E4%BD%BF%E7%94%A8.html#typeclasses","title":"\u81ea\u5b9a\u4e49\u200bTypeclasses","text":""},{"location":"Archive/Haskell/7.%20Class%E6%B7%B1%E5%85%A5%E4%BD%BF%E7%94%A8.html#typeclasses_1","title":"\u65b0\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200bTypeclasses","text":"<p>\u200b\u901a\u8fc7\u200b<code>class</code>\u200b\u5173\u952e\u5b57\u200b\u6765\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200bTypeclasses\u3002\u200b\u4ee5\u4e0b\u200b\u5b9a\u4e49\u200b\u4e86\u200bTypeclasses<code>Size</code>\uff0c\u200b\u53c2\u6570\u200b\u4e3a\u200b<code>a</code>\uff0c\u200b\u5176\u4e2d\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b<code>size</code>\u3002</p> <pre><code>class Size a where\n  size :: a -&gt; Int\n\n-- Prelude&gt; :t size\n-- size :: Size a =&gt; a -&gt; Int\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\u4e0a\u9762\u200b\u7684\u200b\u58f0\u660e\u200b\u4e2d\u200b\u6ca1\u6709\u200b\u5177\u4f53\u200b\u7684\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u8fd9\u200b\u5176\u5b9e\u200b\u5c31\u662f\u200b\u63a5\u53e3\u200b\u7684\u200b\u5b9a\u4e49\u200b\uff08\u200b\u58f0\u660e\u200b\u67d0\u79cd\u200b\u5fc5\u987b\u200b\u5305\u542b\u200b\u7684\u200b\u884c\u4e3a\u200b\uff09\u3002\u200b\u6839\u636e\u200b<code>a</code>\u200b\u7684\u200b\u4e0d\u540c\u200b\uff0c<code>size</code>\u200b\u7684\u200b\u884c\u4e3a\u200b\u53ef\u4ee5\u200b\u6709\u6240\u533a\u522b\u200b\u3002</p>"},{"location":"Archive/Haskell/7.%20Class%E6%B7%B1%E5%85%A5%E4%BD%BF%E7%94%A8.html#typeclasses_2","title":"\u5bf9\u200b\u5c5e\u4e8e\u200b\u8be5\u200bTypeclasses\u200b\u7684\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u8fdb\u884c\u200b\u529f\u80fd\u200b\u5b9e\u73b0","text":"<p>\u200b\u901a\u8fc7\u200b<code>instance</code>\u200b\u5173\u952e\u5b57\u200b\u6765\u200b\u6307\u5b9a\u200b\u5177\u4f53\u200b\u7684\u200b\u51fd\u6570\u200b\u5b9e\u73b0\u200b\u3002\u200b\u6bd4\u5982\u8bf4\u200b\u7ed9\u200b\u53c2\u6570\u200b\u4e3a\u200b<code>Int</code>\u200b\u548c\u200b<code>List</code>\u200b\u65f6\u200b\u5206\u522b\u200b\u505a\u200b\u5b9e\u73b0\u200b\u3002</p> <pre><code>instance Size Int where\n  size x = abs x\n\ninstance Size [a] where\n  size xs = length xs\n\n-- ghci&gt; size [True,False]\n-- 2\n</code></pre> <p>\u200b\u8fd9\u6837\u200b\u5c31\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u7684\u200bTypeclasses\u3002\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u5f80\u200b\u91cc\u200b\u6dfb\u52a0\u200b\u66f4\u200b\u591a\u200b\u51fd\u6570\u200b\uff0c\u200b\u5728\u200b\u4e00\u4e2a\u200b<code>instance</code>\u200b\u8bed\u53e5\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u5bf9\u200b\u4e0d\u540c\u200b\u51fd\u6570\u200b\u90fd\u200b\u8fdb\u884c\u200b\u5b9e\u73b0\u200b\u3002</p> <pre><code>class Size a where\n  empty :: a\n  size :: a -&gt; Int\n  sameSize :: a -&gt; a -&gt; Bool\n\ninstance Size (Maybe a) where\n  empty = Nothing\n\n  size Nothing = 0\n  size (Just a) = 1\n\n  sameSize x y = size x == size y\n\ninstance Size [a] where\n  empty = []\n  size xs = length xs\n  sameSize x y = size x == size y\n</code></pre> <p>Note</p> <p>\u200b\u53ea\u80fd\u200b\u5b9a\u4e49\u200b\u6240\u6709\u200b\u7c7b\u578b\u200b\u53c2\u6570\u200b\u4e3a\u200b\u4e0d\u540c\u200btype variable\u200b\u7684\u200b<code>instance</code>\u3002 - <code>instance Size (Either a b)</code> \u200b\u5408\u6cd5\u200b\u5b9a\u4e49\u200b - <code>instance Size (Either String a)</code> \u200b\u4e0d\u200b\u5408\u6cd5\u200b\uff0c<code>String</code>\u200b\u4e0d\u662f\u200b\u4e00\u4e2a\u200btype variable - <code>instance Size (Either a a)</code> \u2013 \u200b\u4e24\u4e2a\u200btype variable\u200b\u76f8\u540c\u200b - <code>instance Size [[a]]</code> \u2013 \u200b\u4e0d\u200b\u5408\u6cd5\u200b\uff0c<code>[a]</code> \u200b\u4e0d\u662f\u200btype variable</p>"},{"location":"Archive/Haskell/7.%20Class%E6%B7%B1%E5%85%A5%E4%BD%BF%E7%94%A8.html#_1","title":"\u9ed8\u8ba4\u200b\u5b9e\u73b0\u200b\u65b9\u6cd5","text":"<p>\u200b\u4e0a\u9762\u200b\u7684\u200b\u4f8b\u5b50\u200b\u4e2d\u200b<code>sameSize</code>\u200b\u5bf9\u4e8e\u200b\u7c7b\u578b\u200b\u4e3a\u200b<code>Maybe a</code>\u200b\u548c\u200b<code>[a]</code>\u200b\u7684\u200b\u5b9e\u73b0\u200b\u662f\u200b\u76f8\u540c\u200b\u7684\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u65f6\u5019\u200b\u66f4\u597d\u200b\u7684\u200b\u65b9\u5f0f\u200b\u662f\u200b\u6307\u5b9a\u200b\u4e00\u4e2a\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002\u200b\u4e5f\u200b\u5c31\u662f\u200b\u5728\u200b<code>class</code>\u200b\u8bed\u53e5\u200b\u4e2d\u200b\u76f4\u63a5\u200b\u7ed9\u51fa\u200b\u51fd\u6570\u200b\u5b9e\u73b0\u200b\u3002</p> <p>\u200b\u6765\u770b\u200b\u6807\u51c6\u200b\u5e93\u4e2d\u200b\u7684\u200b<code>Eq</code>\u3002\u200b\u8fd9\u91cc\u200b\u5bf9\u4e8e\u200b<code>(==)</code>\u200b\u548c\u200b<code>(\\=)</code>\u200b\u7684\u200b\u5b9e\u73b0\u200b\u770b\u7740\u200b\u975e\u5e38\u200b\u8ff7\u60d1\u200b\uff0c\u200b\u4e24\u8005\u200b\u4e92\u76f8\u200b\u4e3a\u200b\u5bf9\u65b9\u200b\u7684\u200b<code>not</code>\u200b\u8bed\u53e5\u200b\uff0c\u200b\u5f62\u6210\u200b\u4e86\u200b\u76f8\u4e92\u200b\u8c03\u7528\u200b\uff0c\u200b\u90a3\u200b\u5c31\u200b\u6ca1\u6709\u200b\u5b9e\u9645\u200b\u7684\u200b\u51fd\u6570\u200b\u884c\u4e3a\u200b\u4e86\u200b\u3002\u200b\u5176\u5b9e\u200b\u8fd9\u91cc\u200b\u662f\u200b\u9ed8\u8ba4\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u53ea\u8981\u200b\u6211\u4eec\u200b\u81ea\u5df1\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u4e24\u4e2a\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u7684\u200b\u4efb\u610f\u200b\u4e00\u4e2a\u200b\uff0c\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u64cd\u4f5c\u7b26\u200b\u4e5f\u200b\u5c31\u200b\u540c\u6837\u200b\u53ef\u7528\u200b\u4e86\u200b\u3002\u200b\u800c\u200b\u7528\u6237\u200b\u5b9a\u4e49\u200b\u7684\u200b\u65b9\u6cd5\u200b\u4f18\u5148\u7ea7\u200b\u6bd4\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u9ad8\u200b\uff0c\u200b\u8fd9\u6837\u200b\u5c31\u200b\u4e0d\u4f1a\u200b\u5f62\u6210\u200b\u65e0\u9650\u200b\u5faa\u73af\u200b\u3002\uff08\u200b\u5982\u679c\u200b\u770b\u200b<code>Eq</code>\u200b\u7684\u200b\u6587\u6863\u200b\u4e2d\u200b\u5c31\u200b\u80fd\u200b\u770b\u5230\u200bMinimal complete definition: either == or /=\uff09\u3002</p> <pre><code>class Eq a where\n  (==) ::  a -&gt; a -&gt; Bool\n  x == y  = not (x /= y)\n\n  (/=) ::  a -&gt; a -&gt; Bool\n  x /= y  = not (x == y)\n</code></pre> <p>\u200b\u518d\u200b\u6765\u770b\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u6807\u51c6\u200b\u5e93\u4e2d\u200b<code>Ord</code>\u200b\u7684\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u91cc\u9762\u200b\u4e5f\u200b\u6709\u200b<code>compare, min, max</code>\u200b\u7684\u200b\u9ed8\u8ba4\u200b\u5b9e\u73b0\u200b\u90fd\u200b\u7528\u5230\u200b\u4e86\u200b<code>&lt;=</code>\u200b\u8fd0\u7b97\u7b26\u200b\uff0c\u200b\u800c\u200b<code>&lt;=</code>\u200b\u8fd0\u7b97\u7b26\u200b\u672c\u8eab\u200b\u7528\u5230\u200b\u4e86\u200b<code>compare</code>\uff0c\u200b\u540c\u6837\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4e92\u76f8\u200b\u8c03\u7528\u200b\u3002\u200b\u6240\u4ee5\u200b\u5b9e\u73b0\u200b<code>&lt;=</code>\u200b\u6216\u200b<code>compare</code>\u200b\u662f\u200b\u5fc5\u9700\u200b\u7684\u200b\uff08<code>Ord</code>\u200b\u6587\u6863\u200b\u4e2d\u200bMinimal complete definition: either compare or &lt;=.\uff09\u3002</p> <pre><code>class  (Eq a) =&gt; Ord a  where\n  compare              :: a -&gt; a -&gt; Ordering\n  (&lt;), (&lt;=), (&gt;=), (&gt;) :: a -&gt; a -&gt; Bool\n  max, min             :: a -&gt; a -&gt; a\n\n  compare x y | x == y    = EQ\n              | x &lt;= y    = LT\n              | otherwise = GT\n\n  x &lt;= y  = compare x y /= GT\n  x &lt;  y  = compare x y == LT\n  x &gt;= y  = compare x y /= LT\n  x &gt;  y  = compare x y == GT\n\n  max x y | x &lt;= y    =  y\n          | otherwise =  x\n  min x y | x &lt;= y    =  x\n          | otherwise =  y\n</code></pre>"},{"location":"Archive/Haskell/7.%20Class%E6%B7%B1%E5%85%A5%E4%BD%BF%E7%94%A8.html#3","title":"3 \u200b\u5c42\u7ea7\u200b\u67b6\u6784","text":"<p>\u200b\u4e00\u4e2a\u200b\u7c7b\u200b\u53ef\u80fd\u200b\u662f\u200b\u5b8c\u5168\u200b\u4f9d\u9760\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u7c7b\u200b\u7684\u200b\u3002\u200b\u6bd4\u5982\u200b\u4e0a\u9762\u200b\u7684\u200b<code>Ord</code>\uff0c\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u5b9a\u4e49\u200b<code>(==)</code>\uff0c\u200b\u90a3\u4e48\u200b\u6240\u6709\u200b\u51fd\u6570\u200b\u90fd\u200b\u65e0\u6cd5\u200b\u5de5\u4f5c\u200b\u4e86\u200b\u3002\u200b\u6240\u4ee5\u200b\u6700\u597d\u200b\u8ba9\u200b<code>Ord</code>\u200b\u7c7b\u200b\u642d\u5efa\u200b\u5728\u200b<code>Eq</code>\u200b\u7c7b\u200b\u4e0a\u9762\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b\u6211\u4eec\u200b\u89c1\u5230\u200b\u7684\u200b</p> <pre><code>class  (Eq a) =&gt; Ord a  \n</code></pre> <p>\u200b\u540c\u6837\u200b<code>instance</code>\u200b\u4e5f\u200b\u53ef\u80fd\u200b\u662f\u200b\u5b8c\u5168\u200b\u4f9d\u8d56\u200b\u53e6\u200b\u4e00\u4e2a\u200b<code>instance</code>\u200b\u7684\u200b\u3002\u200b\u6bd4\u5982\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b<code>Pair</code>\u200b\u7c7b\u200b\uff0c\u200b\u6709\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\u53c2\u6570\u200b<code>a</code>\u3002\u200b\u5b9a\u4e49\u200b<code>Eq (Pair a) instance</code>\u3002\u200b\u53d1\u73b0\u200b\u7a0b\u5e8f\u200b\u62a5\u9519\u200b\uff0c\u200b\u63d0\u793a\u200b\u9700\u8981\u200b<code>(Eq a) instance</code>\u200b\u624d\u80fd\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u4e5f\u5c31\u662f\u8bf4\u200b\u9700\u8981\u200b\u6240\u200b\u5bf9\u6bd4\u200b\u7684\u200b\u6240\u6709\u200b\u7c7b\u578b\u200b\u53c2\u6570\u200b\u90fd\u200b\u4f9d\u8d56\u4e8e\u200b<code>Eq</code>\u3002</p> <pre><code>data Pair a = MakePair a a\n  deriving Show\n\ninstance Eq (Pair a) where\n  (MakePair x y) == (MakePair a b)   =   x==a &amp;&amp; y==b\n\nerror:\n    \u2022 No instance for (Eq a) arising from a use of \u2018==\u2019\n      Possible fix: add (Eq a) to the context of the instance declaration\n    \u2022 In the first argument of \u2018(&amp;&amp;)\u2019, namely \u2018x == a\u2019\n      In the expression: x == a &amp;&amp; y == b\n      In an equation for \u2018==\u2019:\n          (MakePair x y) == (MakePair a b) = x == a &amp;&amp; y == b\n</code></pre> <p>\u200b\u90a3\u200b\u53ef\u4ee5\u200b\u52a0\u4e0a\u200b\u7c7b\u578b\u200b\u9650\u5236\u200b\uff0c\u200b\u8bed\u6cd5\u200b\u548c\u200b\u4e4b\u524d\u200b\u51fd\u6570\u200b\u7684\u200b\u7c7b\u578b\u200b\u9650\u5236\u200b\u662f\u200b\u76f8\u540c\u200b\u7684\u200b\u3002</p> <pre><code>instance Eq a =&gt; Eq (Pair a) where\n  (MakePair x y) == (MakePair a b)   =   x==a &amp;&amp; y==b\n\n-- Prelude&gt; MakePair 1 1 == MakePair 1 1\n-- True\n</code></pre> <p>\u200b\u8fd9\u200b\u548c\u200bC++\u200b\u4e2d\u200b\u7684\u200b\u7ee7\u627f\u200b\u6d3e\u751f\u200b\u6982\u5ff5\u200b\u4e0d\u592a\u200b\u4e00\u6837\u200b\uff0c\u200b\u8fd9\u4e2a\u200b<code>instance</code>\u200b\u58f0\u660e\u200b\u7684\u200b\u542b\u4e49\u200b\u662f\u200b\uff1a\u200b\u5982\u679c\u200b<code>a</code>\u200b\u662f\u200b<code>Eq</code>\u200b\u7684\u200b\u4e00\u4e2a\u200b<code>instance</code>\uff0c\u200b\u90a3\u4e48\u200b<code>Pair a</code>\u200b\u5c31\u662f\u200b<code>Eq</code>\u200b\u7684\u200b\u4e00\u4e2a\u200b<code>instance</code>\u3002</p>"},{"location":"Archive/Haskell/8.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html","title":"\u5178\u578b\u200b\u7a0b\u5e8f\u8bbe\u8ba1\u200b\u6846\u67b6","text":""},{"location":"Archive/Haskell/8.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html#1","title":"1 \u200b\u9762\u5411\u5bf9\u8c61\u200b\u5316\u200b\uff1f","text":"<p>\u200b\u6709\u200b\u7684\u200b\u65f6\u5019\u200b\u8981\u200b\u7528\u5230\u200b\u7c7b\u4f3c\u200bC++\u200b\u91cc\u9762\u200b\u7684\u200bclass\u200b\u7c7b\u4f3c\u200b\u7684\u200b\u6982\u5ff5\u200b\uff0c\u200b\u628a\u200b\u4e00\u5806\u200b\u539f\u6709\u200b\u7684\u200b\u7c7b\u200b\u5305\u200b\u8d77\u6765\u200b\uff0c\u200b\u7136\u540e\u200b\u901a\u8fc7\u200b\u7279\u5b9a\u200b\u7684\u200b\u65b9\u6cd5\u200b\u8c03\u7528\u200b\u3002</p> <p>\u200b\u4e3e\u4e2a\u200b<code>Money</code>\u200b\u7c7b\u578b\u200b\u7684\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u5982\u679c\u200b\u76f4\u63a5\u200b\u7528\u200b<code>Int</code>\uff0c\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u8ff7\u5931\u200b\u542b\u4e49\u200b\uff0c\u200b\u51fa\u73b0\u200b\u4f7f\u7528\u200b<code>Money</code>\u200b\u76f8\u4e58\u200b\u7b49\u200b\u9519\u8bef\u200b\u3002\u200b\u6240\u4ee5\u200b\u5c06\u200b<code>Int</code>\u200b\u7c7b\u200b\u5305\u88f9\u200b\u5728\u200b\u65b0\u7c7b\u200b<code>Money</code>\u200b\u4e2d\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5b9a\u4e49\u200b\u6240\u6709\u200b<code>Money</code>\u200b\u7684\u200b\u5904\u7406\u51fd\u6570\u200b\uff08\u200b\u5f88\u200b\u81ea\u7136\u200b\u7684\u200b\u5176\u4ed6\u200b\u65b9\u6cd5\u200b\u5c31\u200b\u65e0\u6cd5\u200b\u76f4\u63a5\u200b\u5904\u7406\u200b<code>Money</code>\u200b\u7c7b\u200b\uff0c\u200b\u8fd9\u200b\u5c31\u200b\u5f62\u6210\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u5bf9\u8c61\u200b\u548c\u200b\u5bf9\u8c61\u200b\u65b9\u6cd5\u200b\uff09\u3002</p> <pre><code>data Money = Money Int\n  deriving Show\n\nrenderMoney :: Money -&gt; String\nrenderMoney (Money cents) = show (fromIntegral cents / 100)\n\n(+!) :: Money -&gt; Money -&gt; Money\n(Money a) +! (Money b) = Money (a+b)\n\nscale :: Money -&gt; Double -&gt; Money\nscale (Money a) x = Money (round (fromIntegral a * x))\n\naddVat :: Money -&gt; Money\naddVat m = m +! scale m 0.24\n</code></pre>"},{"location":"Archive/Haskell/8.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html#cases","title":"\u6839\u636e\u200bCases","text":"<p>\u200b\u7531\u4e8e\u200b\u4ee3\u6570\u200b\u6570\u636e\u7c7b\u578b\u200b\u7684\u200b\u7279\u6027\u200b\uff0c\u200b\u6839\u636e\u200b\u4e0d\u540c\u200bCases\u200b\u6765\u200b\u5904\u7406\u200b\u60c5\u51b5\u200b\u5c31\u200b\u53d8\u5f97\u200b\u5f88\u200b\u5bb9\u6613\u200b\u3002\u200b\u5e38\u89c1\u200b\u7684\u200b\u60c5\u51b5\u200b\u662f\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u53ef\u80fd\u200bCases\u200b\u7684\u200b\u96c6\u5408\u200b\uff0c\u200b\u7136\u540e\u200b\u901a\u8fc7\u200b\u6a21\u5f0f\u5339\u914d\u200b\u6765\u200b\u627e\u5230\u200b\u5bf9\u5e94\u200bCases\u3002</p> <p>\u200b\u8003\u8651\u200b\u6807\u51c6\u200b\u5e93\u200b\u7684\u200b<code>NonEmpty</code>\u200b\u7c7b\u578b\u200b\uff0c<code>(:|)</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4e2d\u7f00\u200b\u8fd0\u7b97\u7b26\u200b\uff0c\u200b\u4f7f\u7528\u200b\u65b9\u6cd5\u200b\u5217\u8868\u200b\u6784\u9020\u200b\u4e2d\u200b\u7684\u200b<code>(:)</code>\u200b\u7c7b\u4f3c\u200b\u3002</p> <pre><code>data NonEmpty a = a :| [a]\n</code></pre> <p>\u200b\u5bf9\u200b<code>NonEmpty</code>\u200b\u548c\u200b\u666e\u901a\u200b<code>List</code>\u200b\u4e4b\u95f4\u200b\u8fdb\u884c\u200b\u8f6c\u5316\u200b\uff0c\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b <code>Maybe</code>\u200b\u7c7b\u578b\u200b\u6765\u200b\u8868\u793a\u200b\u7a7a\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002</p> <pre><code>nonEmpty :: [a] -&gt; Maybe (NonEmpty a)\nnonEmpty [] = Nothing\nnonEmpty (x:xs) = Just (x :| xs)\n\ntoList :: NonEmpty a -&gt; [a]\ntoList (x :| xs) = x : xs\n</code></pre> <p>\u200b\u6807\u51c6\u200b\u5e93\u4e2d\u200b\u5173\u4e8e\u200b<code>NonEmpty</code>\u200b\u7684\u200b<code>head</code>\u200b\u548c\u200b<code>last</code>\u200b\u51fd\u6570\u200b\u4e5f\u200b\u662f\u200b\u6839\u636e\u200b\u6a21\u5f0f\u5339\u914d\u200b\uff0c\u200b\u5177\u4f53\u200b\u5982\u4e0b\u200b\u3002</p> <pre><code>neHead (x :| _) = x\nneLast (x :| []) = x\nneLast (_ :| xs) = last xs\n</code></pre> <p>\u200b\u603b\u4e4b\u200b\uff0c\u200b\u5982\u679c\u200b\u80fd\u200b\u5199\u51fa\u200b\u7c7b\u578b\u200b\u80fd\u200b\u4ee3\u8868\u200b\u503c\u200b\u7684\u200b\u6240\u6709\u200b\u53ef\u80fd\u200b\u60c5\u51b5\u200b\uff0c\u200b\u7136\u540e\u200b\u5199\u200b\u51fd\u6570\u200b\u6765\u200b\u5904\u7406\u200b\u8fd9\u4e9b\u200b\u60c5\u51b5\u200b\uff0c\u200b\u4ee3\u7801\u200b\u5c31\u200b\u4f1a\u200b\u7b80\u5355\u200b\u53c8\u200b\u6b63\u786e\u200b\u3002</p>"},{"location":"Archive/Haskell/8.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html#monoids","title":"Monoids \u200b\u5355\u5b50\u200b/\u200b\u5e7a\u200b\u534a\u7fa4","text":"<p>\u200b\u5728\u200b\u51fd\u6570\u200b\u5f0f\u200b\u7f16\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u7ecf\u5e38\u51fa\u73b0\u200b\u7684\u200b\u6a21\u5f0f\u200b\u662f\u200bMonoids\uff08\u200b\u4e0d\u662f\u200bMonad\uff09\u3002 \u200b\u671f\u200b\u57fa\u672c\u200b\u601d\u60f3\u200b\u5c31\u662f\u200b\u5c06\u200b\u4e8b\u7269\u200b\u7ed3\u5408\u200b\u8d77\u6765\u200b\u3002</p>"},{"location":"Archive/Haskell/8.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html#_2","title":"\u7ed3\u5408\u200b\u6027\u200b\u64cd\u4f5c","text":"<p>\u200b\u5f88\u591a\u200b\u51fd\u6570\u200b\u548c\u200b\u64cd\u4f5c\u7b26\u200b\u662f\u200b\u5177\u6709\u200b\u7ed3\u5408\u200b\u6027\u200b\u7684\u200b\uff0c\u200b\u6700\u200b\u7b80\u5355\u200b\u7684\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\u52a0\u6cd5\u200b\u3001\u200b\u4e58\u6cd5\u200b\u3001<code>(.)</code>\u200b\u7b49\u200b\u3002\u200b\u4f8b\u5982\u200b<code>(1 +  3) + (5 + 7) =1 + (3  + (5 + 7)) =1  + 3  +  5 + 7</code>\u3002</p> <p>\u200b\u4f46\u200b\u540c\u65f6\u200b\u4e5f\u200b\u6709\u200b\u5f88\u591a\u200b\u662f\u200b\u4e0d\u200b\u7ed3\u5408\u200b\u7684\u200b\uff0c\u200b\u4f8b\u5982\u200b\u51cf\u6cd5\u200b\u3001\u200b\u5e73\u65b9\u200b\u7b49\u7b49\u200b\u3002\u200b\u5217\u8868\u200b\u6784\u9020\u200b\u7b26\u53f7\u200b<code>(:)</code>\u200b\u5c31\u200b\u4e0d\u662f\u200b\u7ed3\u5408\u200b\u7684\u200b\uff0c<code>True:(False:[])</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b<code>[Bool]</code>\uff0c\u200b\u800c\u200b<code>(True:False):[]</code>\u200b\u751a\u81f3\u200b\u4e0d\u662f\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\u3002</p> <p>\u200b\u9664\u4e86\u200b\u64cd\u4f5c\u7b26\u200b\u4ee5\u5916\u200b\uff0c\u200b\u51fd\u6570\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u662f\u200b\u7ed3\u5408\u200b\u6027\u200b\u7684\u200b\uff0c\u200b\u6bd4\u5982\u200b<code>min,max</code>\u200b\u64cd\u4f5c\u200b\u3002 \u200b\u53ea\u8981\u200b\u6ee1\u8db3\u200b\u4ee5\u4e0b\u200b\u4e24\u200b\u5f0f\u200b\u76f8\u7b49\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u3002</p> <pre><code>f x (f y z)\nf (f x y) z\n</code></pre>"},{"location":"Archive/Haskell/8.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html#_3","title":"\u534a\u7fa4","text":"<p>\u200b\u4ece\u200b\u6570\u5b66\u200b\u4e0a\u200b\u6765\u8bb2\u200b\uff0c\u200b\u7ed3\u5408\u200b\u6027\u200b\u64cd\u4f5c\u200b\u80fd\u591f\u200b\u5f62\u6210\u200b\u4e00\u4e2a\u534a\u200b\u7fa4\u200b\u3002Haskell\u200b\u4e2d\u200b\u5c31\u200b\u6709\u200b\u8fd9\u6837\u200b\u4e00\u4e2a\u534a\u200b\u7fa4\u7c7b\u200b<code>Semigroup</code>\uff08\u200b\u5728\u200b<code>Data.Semigroup</code>\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\uff09\u3002</p> <pre><code>class Semigroup a where\n  -- An associative operation.\n  (&lt;&gt;) :: a -&gt; a -&gt; a\n</code></pre> <p><code>List</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b<code>Semigroup</code>\u200b\u7684\u200b\u5b9e\u4f8b\u200b\uff0c\u200b\u7528\u200b<code>(&lt;&gt;)</code>\u200b\u8868\u793a\u200b<code>(++)</code>\u3002</p> <pre><code>[1] &lt;&gt; [2,3] &lt;&gt; [4]  ==&gt;  [1,2,3,4]\n</code></pre> <p>\u200b\u6709\u7740\u200b\u591a\u4e2a\u200b\u7ed3\u5408\u200b\u6027\u200b\u64cd\u4f5c\u200b\u7684\u200b\u7c7b\u578b\u200b\u901a\u5e38\u200b\u4e0d\u662f\u200b<code>Semigroup</code>\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5b9e\u4f8b\u200b\uff0c<code>Int</code>\u200b\u5c31\u662f\u200b\u4e00\u4e2a\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u5b83\u200b\u7684\u200b\u64cd\u4f5c\u200b<code>+,*,min,max</code>\u200b\u90fd\u200b\u662f\u200b\u7ed3\u5408\u200b\u6027\u200b\u64cd\u4f5c\u200b\u3002 \u200b\u5728\u200bHaskell\u200b\u7684\u200b\u6807\u51c6\u200b\u5e93\u4e2d\u200b\uff0c\u200b\u4f7f\u7528\u200bboxing\u200b\u7684\u200b\u65b9\u6cd5\u200b\u6765\u200b\u5904\u7406\u200b\u5b83\u4eec\u200b\u3002</p> <pre><code>data Sum a = Sum a\ninstance Num a =&gt; Semigroup (Sum a) where\n  Sum a &lt;&gt; Sum b  =  Sum (a+b)\n\ndata Product a = Product a\ninstance Num a =&gt; Semigroup (Product a) where\n  Product a &lt;&gt; Product b   =  Product (a*b)\n</code></pre>"},{"location":"Archive/Haskell/8.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html#monoids_1","title":"Monoids \u200b\u5e7a\u200b\u534a\u7fa4","text":"<p>\u200b\u4e00\u4e2a\u200b\u5e7a\u200b\u534a\u7fa4\u200b\u662f\u200b\u6709\u7740\u200b\u4e00\u4e2a\u200b\u5355\u4f4d\u200b\u5143\u200b\u7684\u200b\u534a\u7fa4\u200b\u3002\u200b\u5355\u4f4d\u200b\u5143\u200b\u5c31\u662f\u200b\u4e00\u4e2a\u200b\u201c0\u201d\uff1a\u200b\u67d0\u4e2a\u200b\u548c\u200b\u5176\u4ed6\u200b\u5143\u7d20\u200b\u7ed3\u5408\u200b\u4e0d\u4f1a\u200b\u505a\u200b\u4efb\u4f55\u200b\u6539\u53d8\u200b\u7684\u200b\u5143\u7d20\u200b\u3002</p> <p>Haskell\u200b\u4e2d\u200b\u4e5f\u200b\u6709\u200b\u4e00\u4e2a\u200b\u7c7b\u200b<code>Monoid</code>\uff08\u200b\u5728\u200b<code>Data.Monoid</code>\u200b\u6a21\u5757\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\uff09\u3002\u200b\u5b83\u200b\u5df2\u7ecf\u200b\u4f9d\u8d56\u200b\u4e86\u200b<code>Semigroup</code>\uff0c\u200b\u6240\u4ee5\u200b\u53ea\u8981\u200b\u518d\u200b\u52a0\u200b\u4e00\u4e2a\u200b\u5355\u4f4d\u200b\u5143\u200b\u5c31\u200b\u884c\u200b\u3002</p> <pre><code>class Semigroup a =&gt; Monoid a where\n  -- The neutral element\n  mempty :: a\n</code></pre> <p>\u200b\u5bf9\u4e8e\u200b\u52a0\u6cd5\u200b\u7fa4\u200b\u3001\u200b\u4e58\u6cd5\u200b\u7fa4\u200b\u5b9a\u4e49\u200b\u7684\u200b\u5355\u4f4d\u200b\u773c\u200b\u5982\u4e0b\u200b</p> <p><pre><code>instance Monoid (Sum a) where\n  mempty = Sum 0\n\ninstance Monoid (Product a) where\n  mempty = Product 1\n\ninstance Monoid [] where\n  mempty = []\n</code></pre> \u200b\u5982\u679c\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5e7a\u200b\u534a\u7fa4\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5bf9\u4e8e\u200b\u4e00\u4e2a\u200b\u7a0b\u5e8f\u5458\u200b\u6765\u8bf4\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u67d0\u4e2a\u200b\u4e1c\u897f\u200b\u4fdd\u6301\u200b\u4e0d\u53d8\u200b\uff0c\u200b\u5e76\u4e14\u200b\u4e0d\u7528\u200b\u5199\u200b\u62ec\u53f7\u200b\uff0c\u200b\u8fd9\u200b\u5728\u200b\u7a0b\u5e8f\u200b\u4e2d\u662f\u200b\u975e\u5e38\u200b\u5e38\u89c1\u200b\u7684\u200b\u3002</p>"},{"location":"Archive/Haskell/8.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html#_4","title":"\u5e7a\u200b\u534a\u7fa4\u200b\u7528\u5904","text":"<p>\u200b\u5e93\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\u5bf9\u200b\u6240\u6709\u200b\u7684\u200b<code>Monoid</code>\u200b\u7c7b\u200b\u751f\u6548\u200b\u3002\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5355\u4f4d\u200b\u5143\u200b\u548c\u200b\u7ed3\u5408\u200b\u6027\u200b\u8fd0\u7b97\u200b\u7684\u200b\u539f\u56e0\u200b\u662f\u200b\uff0c\u200b\u5982\u679c\u200b\u8981\u200b\u4f7f\u7528\u200b<code>reduce</code>\u200b\u548c\u200b<code>fold</code>\u200b\u64cd\u4f5c\u200b\u5c06\u200b\u591a\u4e2a\u200b\u5143\u7d20\u200b\u6298\u53e0\u200b\u6210\u200b\u4e00\u4e2a\u200b\u503c\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c31\u200b\u9700\u8981\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u7279\u6027\u200b\u3002</p> <pre><code>mconcat :: Monoid a =&gt; [a] -&gt; a\n-- \u200b\u53ef\u4ee5\u200b\u7528\u200bfoldr (&lt;&gt;) mempty\u200b\u6765\u200b\u8868\u793a\u200b\n</code></pre> <p><code>mconcat</code> \u200b\u7684\u200b\u5b9e\u73b0\u200b\u662f\u200b\u8fd9\u6837\u200b\u7684\u200b\u3002\u200b\u9996\u5148\u200b\u9700\u8981\u200b<code>mempty</code>\u200b\u6765\u200b\u5904\u7406\u200b\u7a7a\u200b\u5217\u8868\u200b\u7684\u200b\u60c5\u51b5\u200b\uff08\u200b\u4e5f\u200b\u5c31\u662f\u200b\u8fd4\u56de\u200b\u7684\u200b\u9ed8\u8ba4\u503c\u200b\uff09\u3002</p> <pre><code>mconcat [] :: Sum Int          ==&gt;  Sum 0\n</code></pre> <p>\u200b\u63a5\u7740\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u7ed3\u5408\u200b\u6027\u200b\u64cd\u4f5c\u200b\u6765\u200b\u628a\u200b<code>[x,y,z]</code>\u200b\u7ea6\u7b80\u6210\u200b\u4e00\u4e2a\u200b\u72ec\u7279\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u5982\u679c\u200b<code>(&lt;&gt;)</code>\u200b\u4e0d\u662f\u200b\u7ed3\u5408\u200b\u6027\u200b\u7684\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5bf9\u4e8e\u200b<code>mconcat [x,y,z]</code>\u200b\u5c31\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u4ea7\u751f\u200b\u4e24\u4e2a\u200b\u4e0d\u540c\u200b\u7684\u200b\u503c\u200b<code>(x&lt;&gt;y)&lt;&gt;z</code>\u200b\u548c\u200b<code>x&lt;&gt;(y&lt;&gt;z)</code>\u3002</p> <p>\u200b\u6700\u200b\u5e38\u7528\u200b\u7684\u200b<code>Monoid</code>\u200b\u51fd\u6570\u200b\u662f\u200b<code>foldMap</code>\u3002</p> <pre><code>foldMap :: (Foldable t, Monoid m) =&gt; (a -&gt; m) -&gt; t a -&gt; m\nfoldMap Max [1::Int,4,2]  ==&gt;  Max 4\nfoldMap Product [1::Int,4,2]  ==&gt;  Product 8\n-- \u200b\u6211\u4eec\u200b\u9700\u8981\u200b ::Int \u200b\u6765\u200b\u907f\u514d\u200b\u201cAmbiguous type variable\u201d\u200b\u9519\u8bef\u200b\uff08\u200b\u5728\u200bprint\u200b\u65f6\u200b\u53d1\u751f\u200b\uff09\n-- \u200b\u5b9e\u9645\u4e0a\u200b\u5c31\u662f\u200bfoldMap' f xs = mconcat (map f xs)\n</code></pre> <p>\u200b\u5b9e\u9645\u4e0a\u200b\u7531\u4e8e\u200b<code>(Monoid a, Monoid b) =&gt; Monoid(a,b)</code>\uff0c\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u5c31\u200b\u80fd\u6c42\u200b\u51fa\u200b\u5217\u8868\u200b\u7684\u200b\u6700\u5927\u503c\u200b\u548c\u200b\u4e58\u79ef\u200b\u7b49\u200b\u3002</p> <pre><code>foldMap (\\x -&gt; (Max x, Product x)) [1::Int,4,2]  ==&gt;  (Max 4, Product 8)\n</code></pre> <p>Note</p> <p>\u200b\u5728\u200b\u81ea\u5df1\u200b\u7684\u200b\u4ee3\u7801\u200b\u4e2d\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u8981\u200b\u7528\u5230\u200b<code>monoid</code>\u200b\u7c7b\u578b\u200b\uff0c\u200b\u53ea\u662f\u200b\u53ef\u80fd\u200b\u8bfb\u5e93\u200b\u4ee3\u7801\u200b\u7684\u200b\u65f6\u5019\u200b\u4f1a\u200b\u5f88\u200b\u7ecf\u5e38\u200b\u770b\u5230\u200b\u3002</p>"},{"location":"Archive/Haskell/8.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html#_5","title":"\u600e\u4e48\u200b\u4f7f\u7528\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u7c7b\u200b\uff1f","text":"<p>\u200b\u4e4b\u524d\u200b\u7ed9\u200b\u7684\u200b<code>Semigroup</code>\u200b\u548c\u200b<code>Monoid</code>\u200b\u4e0d\u662f\u200b\u5b9e\u9645\u200b\u7684\u200b\u4ee3\u7801\u200b\uff0c\u200b\u7531\u4e8e\u200b\u4e00\u4e9b\u200b\u5386\u53f2\u200b\u539f\u56e0\u200b\u548c\u200b\u6027\u80fd\u200b\u95ee\u9898\u200b\uff0c\u200b\u771f\u6b63\u200b\u7684\u200b\u5b9a\u4e49\u200b\u65f6\u200b</p> <pre><code>class Semigroup a where\n  -- | \u200b\u4e00\u4e2a\u200b\u7ed3\u5408\u200b\u6027\u200b\u64cd\u4f5c\u200b\n  (&lt;&gt;) :: a -&gt; a -&gt; a\n\n  -- \u200b\u4f7f\u7528\u200b&lt;&gt;\u200b\u5c06\u200b\u4e00\u4e2a\u200b\u975e\u7a7a\u200b\u5217\u8868\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u7ed3\u5408\u200b\u8d77\u6765\u200b\n  sconcat :: NonEmpty a -&gt; a\n  sconcat as = ... -- default implementation omitted\n\n  -- \u200b\u4f7f\u7528\u200b&lt;&gt;\u200b\u5c06\u200b\u4e00\u4e2a\u200b\u503c\u200b\u548c\u200b\u5b83\u200b\u81ea\u8eab\u200b\u7ed3\u5408\u200b\u8d77\u6765\u200b\uff0c\u200b\u91cd\u590d\u200bn\u200b\u6b21\u200b\n  stimes :: Integral b =&gt; b -&gt; a -&gt; a\n  stimes n x = ... -- default implementation omitted\n\nclass Semigroup a =&gt; Monoid a where\n  mempty  :: a\n\n  mappend :: a -&gt; a -&gt; a\n  mappend = (&lt;&gt;)\n\n  -- \u200b\u4f7f\u7528\u200b&lt;&gt;\u200b\u5c06\u200b\u4e00\u4e2a\u200b\u5217\u8868\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u7ed3\u5408\u200b\u8d77\u6765\u200b\n  mconcat :: [a] -&gt; a\n  mconcat = ... -- default implementation omitted\n</code></pre> <p>\u200b\u56e0\u6b64\u200b\u5728\u200b\u5b9a\u4e49\u200b\u67d0\u4e2a\u200b\u5c5e\u4e8e\u200b<code>Semigroup</code>\u200b\u6216\u200b<code>Monoid</code>\u200b\u7684\u200b\u5b9e\u4f8b\u200b\u662f\u200b\uff0c\u200b\u6700\u5c0f\u200b\u5b9a\u4e49\u200b\u662f\u200b</p> <pre><code>instance Semigroup MyType where\n  x &lt;&gt; y = ...\n\ninstance Monoid MyType where\n  mempty = ...\n</code></pre>"},{"location":"Archive/Haskell/8.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html#_6","title":"\u5f00\u653e\u200b\u62bd\u8c61\u200b\u548c\u200b\u5c01\u95ed\u200b\u62bd\u8c61","text":"<p>\u200b\u4ec0\u4e48\u200b\u65f6\u5019\u200b\u8be5\u200b\u4f7f\u7528\u200btype\uff0c\u200b\u800c\u200b\u4ec0\u4e48\u200b\u65f6\u5019\u200b\u7528\u200bTypeclass\u200b\u5462\u200b\uff1f\u200b\u7b80\u5355\u200b\u6765\u200b\u6240\u200b\uff0c\u200b\u5982\u679c\u200b\u5728\u200b\u4e00\u200b\u5f00\u59cb\u200b\u5c31\u200b\u5df2\u7ecf\u200b\u5b9a\u200b\u597d\u200b\u8fd9\u4e2a\u200b\u7c7b\u578b\u200b\u91cc\u200b\u7684\u200b\u6240\u6709\u200b\u60c5\u51b5\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5c31\u200b\u7528\u200btype\uff1b\u200b\u5982\u679c\u200b\u540e\u671f\u200b\u8fd8\u200b\u53ef\u80fd\u200b\u589e\u52a0\u200b\uff0c\u200b\u5c31\u200b\u7528\u200bTypeclass\u3002</p> <p>\u200b\u770b\u200b\u4e00\u4e2a\u200b\u5177\u4f53\u200b\u7684\u200b\u4f8b\u5b50\u200b\u3002<code>Vehicle</code>\u200b\u7c7b\u200b\u53ef\u4ee5\u200b\u662f\u200b\u503c\u200b<code>Car</code>\u200b\u6216\u200b<code>Airplane</code>\u3002\u200b\u4f7f\u7528\u200b\u4ee3\u6570\u200b\u6570\u636e\u7c7b\u578b\u200b\u7684\u200b\u5b9e\u73b0\u200b\u5982\u4e0b\u200b</p> <pre><code>data Vehicle = Car String | Airplane String\n\nsound :: Vehicle -&gt; String\nsound (Car _) = \"brum brum\"\nsound (Airplane _) = \"zooooom\"\n</code></pre> <p>\u200b\u800c\u200b\u4f7f\u7528\u200bTypeclass\u200b\u7684\u200b\u5b9e\u73b0\u200b\u5982\u4e0b\u200b\uff0c<code>Car</code>\u200b\u6216\u200b<code>Airplane</code>\u200b\u5206\u522b\u200b\u6709\u200b\u81ea\u5df1\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>data Car = Car String\ndata Airplane = Airplane String\n\nclass VehicleClass a where\n  sound :: a -&gt; String\n\ninstance VehicleClass Car where\n  sound (Car _) = \"brum brum\"\n\ninstance VehicleClass Airplane where\n  sound (Airplane _) = \"zooooom\"\n</code></pre> <p>\u200b\u8fd9\u200b\u4e24\u79cd\u200b\u65b9\u5f0f\u200b\u5b9e\u73b0\u200b\u7684\u200b\u529f\u80fd\u200b\u662f\u200b\u76f8\u540c\u200b\u7684\u200b\u3002\u200b\u6211\u4eec\u200b\u628a\u200b\u7528\u200b<code>data</code>\u200b\u5173\u952e\u5b57\u200b\u5b9e\u73b0\u200b\u7684\u200b\u53eb\u200b\u5c01\u95ed\u200b\u62bd\u8c61\u200b\uff0c\u200b\u4ee3\u8868\u200b\u6240\u6709\u200b\u60c5\u51b5\u200b\u7684\u200b\u96c6\u5408\u200b\u662f\u200b\u5c01\u95ed\u200b\u7684\u200b\uff0c\u200b\u5e76\u4e14\u200b\u53ef\u4ee5\u200b\u5728\u200b\u540c\u4e00\u4e2a\u200b\u5730\u65b9\u200b\u8fdb\u884c\u200b\u5904\u7406\u200b\u3002\u200b\u800c\u200b<code>class</code>\u200b\u5173\u952e\u8bcd\u200b\u5b9e\u73b0\u200b\u7684\u200b\u53eb\u200b\u5f00\u653e\u200b\u62bd\u8c61\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b\u53ef\u4ee5\u200b\u589e\u52a0\u200b\u65b0\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u5373\u4f7f\u200b\u662f\u200b\u5728\u200b\u5176\u4ed6\u200b\u7684\u200b\u6a21\u5757\u200b\u4e2d\u200b\u3002</p> <p>\u200b\u663e\u7136\u200b\u5f00\u653e\u200b\u62bd\u8c61\u200b\u662f\u200b\u66f4\u200b\u5177\u6709\u200b\u6269\u5c55\u6027\u200b\u7684\u200b\uff0c\u200b\u800c\u200b\u5c01\u95ed\u200b\u62bd\u8c61\u200b\u5219\u200b\u597d\u200b\u5728\u200b\u80fd\u591f\u200b\u5904\u7406\u200b\u6240\u6709\u200b\u7684\u200b\u60c5\u51b5\u200b\uff08\u200b\u6bd4\u5982\u8bf4\u200b\u8981\u200b\u5904\u7406\u200b\u4e24\u4e2a\u200b<code>Vehicle</code>\u200b\u7c7b\u578b\u200b\u662f\u5426\u200b\u76f8\u540c\u200b\uff09\u3002</p>"},{"location":"Archive/Haskell/8.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html#_7","title":"\u8bed\u8a00\u200b\u6a21\u578b","text":"<p>\u200b\u6709\u7684\u662f\u200b\u65f6\u5019\u200b\u53ef\u80fd\u200b\u8981\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u5c0f\u578b\u200b\u7a0b\u5e8f\u8bed\u8a00\u200b\uff0c\u200b\u53c8\u200b\u53eb\u200b\u5d4c\u5165\u5f0f\u200b\u57df\u200b\u7279\u5b9a\u200b\u8bed\u8a00\u200b\uff08EDSL:Embedded Domain-Specific Language\uff09\u3002\u200b\u7531\u4e8e\u200b\u8bed\u8a00\u200b\u7ecf\u5e38\u200b\u662f\u200b\u4f7f\u7528\u200b\u8fed\u4ee3\u200b\u7684\u200b\u4ee3\u6570\u200b\u6570\u636e\u7c7b\u578b\u200b\uff0c\u200b\u6240\u4ee5\u200b\u7528\u200bHaskell\u200b\u89e3\u91ca\u200b\u3001\u200b\u4f30\u503c\u200b\u662f\u200b\u5f88\u200b\u5bb9\u6613\u200b\u7684\u200b\u3002</p> <p>\u200b\u770b\u200b\u4e00\u4e2a\u200b\u7f51\u7edc\u200b\u5546\u5e97\u200b\u7684\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u8bed\u8a00\u200b\u4e2d\u6709\u200b5\u200b\u4e2a\u200b\u5173\u952e\u5b57\u200b\uff0c\u200b\u8868\u8fbe\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u6709\u7740\u200b5\u200b\u4e2a\u503c\u200b\u7684\u200bType\u3002</p> <pre><code>data Discount = DiscountPercent Int         -- \u200b\u767e\u5206\u6bd4\u200b\u6298\u6263\u200b\n              | DiscountConstant Int        -- \u200b\u5e38\u6570\u200b\u6298\u6263\u200b\n              | MinimumPrice Int            -- \u200b\u6700\u4f4e\u200b\u4ef7\u683c\u200b\n              | ForCustomer String Discount -- \u200b\u6709\u200b\u6761\u4ef6\u200b\u7684\u200b\u6298\u6263\u200b\n              | Many [Discount]             -- \u200b\u5bf9\u4e8e\u200b\u67d0\u200b\u4e00\u884c\u200b\u6240\u6709\u200b\u7684\u200b\u6570\u200b\u90fd\u200b\u8fdb\u884c\u200b\u6298\u6263\u200b\n</code></pre> <p>\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b<code>applyDiscount</code>\u200b\u6765\u200b\u5bf9\u200b\u8fd9\u4e2a\u200b\u8bed\u8a00\u200b\u8fdb\u884c\u200b\u7ffb\u8bd1\u200b\uff0c\u200b\u8f93\u5165\u200b\u53c2\u6570\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u7528\u6237\u200b\u540d\u5b57\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u4ef7\u683c\u200b\u7c7b\u200b\u548c\u200b\u4e00\u4e2a\u200b\u6298\u6263\u200b\uff1b\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u6700\u7ec8\u200b\u4ef7\u683c\u200b\u3002</p> <pre><code>applyDiscount :: String -&gt; Int -&gt; Discount -&gt; Int\n-- \u200b\u5bf9\u200b\u6298\u6263\u200b\u7c7b\u578b\u200b\u8fdb\u884c\u200b\u5339\u914d\u200b\uff0c\u200b\u5e76\u200b\u8fdb\u884c\u200b\u76f8\u5e94\u200b\u64cd\u4f5c\u200b\napplyDiscount _        price (DiscountPercent percent) = price - (price * percent) `div` 100\napplyDiscount _        price (DiscountConstant discount) = price - discount\napplyDiscount _        price (MinimumPrice minPrice) = max price minPrice\napplyDiscount customer price (ForCustomer target discount)\n    | customer == target  = applyDiscount customer price discount -- \u200b\u8fbe\u5230\u200b\u6807\u51c6\u200b\u5219\u200b\u6298\u6263\u200b\n    | otherwise           = price\napplyDiscount customer price (Many discounts) = go price discounts\n  where go p [] = p\n        go p (d:ds) = go (applyDiscount customer p d) ds\n</code></pre> <p>\u200b\u770b\u200b\u5177\u4f53\u200b\u7684\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u5982\u679c\u200b\u60f3\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u5148\u200b-50%\u200b\u540e\u200b-$30\uff0c\u200b\u6700\u5c0f\u200b\u4ef7\u683c\u200b\u4e3a\u200b$35\u200b\u7684\u200b\u6298\u6263\u200b\uff0c\u200b\u90a3\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4ee5\u4e0a\u200b\u5b9a\u4e49\u200b\u7684\u200b\u8bed\u8a00\u200b\u3002</p> <p><code>Haskell applyDiscount \"Bob\" 120 (DiscountPercent 50)   ==&gt; 60 applyDiscount \"Bob\" 60 (DiscountConstant 30)   ==&gt; 30 applyDiscount \"Bob\" 30 (MinimumPrice 35)   ==&gt; 35 applyDiscount \"Bob\" 120 (Many [DiscountPercent 50, DiscountConstant 30, MinimumPrice 35])   ==&gt; 35</code></p>"},{"location":"Archive/Haskell/9.%20Reductionism%E8%BF%98%E5%8E%9F%E8%AE%BA.html","title":"Reductionism \u200b\u8fd8\u539f\u8bba","text":""},{"location":"Archive/Haskell/9.%20Reductionism%E8%BF%98%E5%8E%9F%E8%AE%BA.html#1","title":"1 \u200b\u60f0\u6027\u200b\u6c42\u503c\u200b\u548c\u200b\u7eaf\u51c0","text":"<p>Haskell\u200b\u662f\u200b\u4e00\u4e2a\u200bpure\u200b\u7684\u200b\u51fd\u6570\u200b\u5f0f\u200b\u8bed\u8a00\u200b\uff0c\u200b\u4e5f\u5c31\u662f\u8bf4\u200b<code>f x y</code>\u200b\u5bf9\u4e8e\u200b\u67d0\u4e2a\u200b\u7ed9\u5b9a\u200b\u7684\u200b<code>x</code>\u200b\u548c\u200b<code>y</code>\u200b\u7ed3\u679c\u200b\u603b\u662f\u200b\u76f8\u540c\u200b\u7684\u200b\uff08\u200b\u6362\u8a00\u4e4b\u200b<code>x</code>\u200b\u548c\u200b<code>y</code>\u200b\u552f\u4e00\u200b\u786e\u5b9a\u200b\u4e86\u200b<code>f x y</code>\u200b\u7684\u200b\u503c\u200b\u3002\uff09\u200b\u8fd9\u79cd\u200b\u6027\u8d28\u200b\u4e5f\u200b\u88ab\u200b\u53eb\u505a\u200b\u5f15\u7528\u200b\u900f\u660e\u6027\u200b\uff08referential transparency\uff09\u3002Purity\u200b\u4e5f\u200b\u4ee3\u8868\u200b\u6ca1\u6709\u200b\u4efb\u4f55\u200b\u7684\u200b\u526f\u4f5c\u7528\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5c31\u200b\u4e0d\u80fd\u200b\u8ba9\u200b\u7528\u6237\u200b\u6765\u200b\u8f93\u5165\u200b<code>x</code>\u200b\u548c\u200b<code>y</code>\u200b\u7136\u540e\u200b\u8fdb\u884c\u200b\u4f30\u503c\u200b\uff0c\u200b\u5426\u5219\u200b<code>f</code>\u200b\u8c03\u7528\u200b\u7ed3\u679c\u200b\u5c31\u200b\u4e0d\u540c\u200b\u4e86\u200b\uff0c\u200b\u8fd9\u6837\u200b\u5c31\u200b\u6253\u7834\u200b\u4e86\u200b\u5f15\u7528\u200b\u900f\u660e\u6027\u200b\u3002</p> <p>Haskell\u200b\u8fd8\u662f\u200b\u4e00\u4e2a\u200b\u60f0\u6027\u200b\u6c42\u503c\u200b\u7684\u200b\u8bed\u8a00\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b\u503c\u200b\u53ea\u6709\u200b\u88ab\u200b\u9700\u8981\u200b\u7684\u200b\u65f6\u5019\u200b\u624d\u200b\u88ab\u200b\u8ba1\u7b97\u200b\u3002 \u200b\u6bd4\u5982\u8bf4\u200b\u4e00\u4e2a\u200b\u65e0\u7a77\u200b\u5faa\u73af\u200b\uff0c\u200b\u5728\u200bHaskell\u200b\u4e2d\u662f\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u7684\u200b</p> <pre><code>f x = f x   -- \u200b\u65e0\u7a77\u200b\u5faa\u73af\u200b\ng x y = x\n-- f 1 \u200b\u65e0\u7a77\u200b\u4f30\u503c\u200b\n-- g 2 (f 1)  ==&gt;  2 \u200b\u4e0d\u7528\u200b\u5230\u200b\u7b2c\u4e8c\u4e2a\u200b\u53c2\u6570\u200b\uff0c\u200b\u56e0\u6b64\u200bf\u200b\u4e0d\u4f1a\u200b\u8fd0\u884c\u200b\n</code></pre> <p>Lazy vs. non-strict</p> <p>Haskell\u200b\u5b9e\u9645\u4e0a\u200b\u7528\u200b\u7684\u200b\u662f\u200bnon-strict\uff0c\u200b\u548c\u200blazy\u200b\u4e0d\u200b\u5b8c\u5168\u200b\u4e00\u6837\u200b\u3002 Non-strictness\u200b\u4ee3\u8868\u200breduction\u200b\u8fc7\u7a0b\u200b\u662f\u200b\u4ece\u5916\u5411\u5185\u200b\u7684\u200b\u3002\u200b\u5177\u4f53\u6765\u8bf4\u200b\u5982\u679c\u200b\u6709\u200b\u4e00\u4e2a\u200b\u5f0f\u5b50\u200b<code>(a+(b*c))</code>\uff0c\u200b\u90a3\u4e48\u200b\u9996\u5148\u200b\u8ba1\u7b97\u200b\u5916\u5c42\u200b\u7684\u200b<code>+</code>\uff0c\u200b\u7136\u540e\u200b\u5185\u5c42\u200b\u7684\u200b<code>(b+c)</code>\u3002\u200b\u800c\u200bstrict\u200b\u8bed\u8a00\u200b\u5219\u200b\u4ece\u200b\u5185\u5c42\u200b\u5f00\u59cb\u200b\u5e76\u200b\u5411\u200b\u5916\u200b\u6c42\u503c\u200b\u3002 \u200b\u6240\u4ee5\u200b\u5982\u679c\u200b\u6709\u200b\u4e00\u4e2a\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u4f30\u503c\u200b\u7ed3\u679c\u200b\u662f\u200bbottom\uff08\u200b\u672f\u8bed\u200b\uff0c\u200b\u4ee3\u8868\u200b\u65e0\u9650\u200b\u5faa\u73af\u200b\u6216\u8005\u200b\u9519\u8bef\u200b\uff09\uff0c\u200b\u90a3\u200b\u5bf9\u4e8e\u200bstrict\u200b\u7684\u200b\u8bed\u8a00\u200b\u603b\u662f\u200b\u4f1a\u200b\u5bf9\u200b\u8fd9\u4e2a\u200b\u503c\u5148\u200b\u8fdb\u884c\u200b\u4f30\u8ba1\u200b\uff0c\u200b\u7136\u540e\u200b\u5c06\u200bbottom\u200b\u5411\u5916\u200b\u4f20\u9012\u200b\u3002\u200b\u4f46\u662f\u200b\u5bf9\u4e8e\u200bnon-strict\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff0c \u200b\u90a3\u4e48\u200b\u4e00\u4e9b\u200b\u5b50\u200b\u8868\u8fbe\u5f0f\u200b\u5c31\u200b\u4f1a\u200b\u88ab\u200b\u5916\u9762\u200b\u7684\u200breduction\u200b\u6240\u200b\u6d88\u9664\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5b83\u4eec\u200b\u4e0d\u4f1a\u200b\u88ab\u200b\u8bc4\u4f30\u200b\uff0c\u200b\u4ece\u800c\u200b\u4e0d\u4f1a\u200b\u5f97\u5230\u200bbottom\u3002 \u200b\u800c\u200blazy evaluation\u200b\u5219\u200b\u610f\u5473\u7740\u200b\u771f\u6b63\u200b\u610f\u4e49\u200b\u4e0a\u200b\u7684\u200b\u7528\u5230\u200b\u624d\u200b\u6c42\u503c\u200b\u3002\u200b\u5f53\u200b\u4f30\u503c\u200b\u5f15\u64ce\u200b\u770b\u5230\u200b\u4e00\u4e2a\u200b\u8868\u8fbe\u5f0f\u200b\uff0c\u200b\u5b83\u200b\u5efa\u7acb\u200b\u4e00\u4e2a\u200bthunk\u200b\u6570\u636e\u7ed3\u6784\u200b\uff08thunk\u200b\u4ee3\u8868\u200b\u8fd8\u200b\u6ca1\u200b\u88ab\u200b\u4f30\u503c\u200b\u7684\u200b\u503c\u200b\uff09\uff0c\u200b\u4ee5\u53ca\u200b\u4e00\u4e2a\u200b\u6307\u5411\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u6307\u9488\u200b\u3002\u200b\u5f53\u200b\u7ed3\u679c\u200b\u9700\u8981\u200b\u88ab\u200b\u4f30\u503c\u200b\u51fa\u200b\u5566\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u67d0\u4e2a\u200b\u90e8\u5206\u200b\u5c31\u200b\u4f1a\u200b\u88ab\u200b\u8ba1\u7b97\u200b\uff0c\u200b\u5e76\u4e14\u200b\u66ff\u4ee3\u200b\u539f\u6709\u200b\u7684\u200bthunk\u3002 \u200b\u5728\u200b\u5927\u90e8\u5206\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200blazy\u200b\u548c\u200bnon-strict\u200b\u662f\u200b\u540c\u4e49\u8bcd\u200b\uff0c\u200b\u4f46\u200b\u4e5f\u200b\u4e0d\u5168\u662f\u200b\u3002\u200b\u5728\u200bHaskell\u200b\u4e2d\u200b\u6a21\u5f0f\u5339\u914d\u200b\u901a\u5e38\u200b\u662f\u200bstrict\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5c1d\u8bd5\u200b\u8981\u200b\u7ed9\u200b\u6a21\u5f0f\u5339\u914d\u200b\u5c06\u4f1a\u8feb\u200b\u4f30\u503c\u200b\u53d1\u751f\u200b\u5230\u200b\u627e\u5230\u200b\u4e00\u4e2a\u200b\u5339\u914d\u200b\u4e3a\u6b62\u200b\uff08\u200b\u4f7f\u7528\u200b\u5934\u90e8\u200b<code>~</code>\u200b\u64cd\u4f5c\u7b26\u200b\u53ef\u200b\u8ba9\u200b\u6a21\u5f0f\u5339\u914d\u200blazy\uff09\u3002strictness\u200b\u5206\u6790\u5668\u200b\u8fd8\u4f1a\u200b\u5bfb\u627e\u200b\u90a3\u4e9b\u200b\u5728\u200b\u4f30\u503c\u200b\u65f6\u200b\u603b\u662f\u200b\u4f1a\u200b\u88ab\u200b\u5916\u5c42\u200b\u6240\u200b\u9700\u8981\u200b\u7684\u200b\u5b50\u200b\u8868\u8fbe\u5f0f\u200b\uff0c\u200b\u5e76\u4e14\u200b\u63d0\u9ad8\u200b\u4ed6\u4eec\u200b\u7684\u200b\u4f18\u5148\u7ea7\u200b\u3002\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>seq</code>\u200b\u539f\u8bed\u200b\u6765\u200b\u8feb\u4f7f\u200b\u8868\u8fbe\u200b\u8868\u8fbe\u5f0f\u200b\u8fdb\u884c\u200b\u4f30\u503c\u200b\uff0c\u200b\u65e0\u8bba\u200b\u662f\u5426\u200b\u88ab\u200b\u4f7f\u7528\u200b\u3002</p>"},{"location":"Archive/Haskell/9.%20Reductionism%E8%BF%98%E5%8E%9F%E8%AE%BA.html#2","title":"2 \u200b\u7b49\u5f0f\u200b\u63a8\u7406","text":"<p>\u200b\u53c2\u8003\u200b\u900f\u660e\u5ea6\u200b\uff0c\u200b\u5373\u200b\u8868\u8fbe\u5f0f\u200b\u5bf9\u4e8e\u200b\u76f8\u540c\u200b\u7684\u200b\u8f93\u5165\u200b\u603b\u662f\u200b\u8fd4\u56de\u200b\u76f8\u540c\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u662f\u200b\u4e00\u4e2a\u200b\u975e\u5e38\u200b\u5f3a\u5927\u200b\u7684\u200b\u5c5e\u6027\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5229\u7528\u200b\u5b83\u200b\u6765\u200b\u63a8\u7406\u200b\u7a0b\u5e8f\u200b\u3002\u200b\u8003\u8651\u200b\u4ee5\u4e0b\u200b\u8868\u8fbe\u5f0f\u200b</p> <pre><code>map (+1) . reverse . map (-1)\n-- \u200b\u5b9e\u9645\u4e0a\u200b\u548c\u200breverse\u200b\u7684\u200b\u6548\u679c\u200b\u5b8c\u5168\u76f8\u540c\u200b\n</code></pre> <p>\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5bf9\u200b\u5176\u200b\u8fdb\u884c\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u63a8\u7406\u200b\uff0c\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u5df2\u77e5\u200b</p> <pre><code>map id          === id  -- map\u200b\u5168\u7b49\u200b\u6620\u5c04\u200b\nmap f . map g   === map (f.g)  -- map\u200b\u7ed3\u5408\u5f8b\u200b\nreverse . map f === map f . reverse  -- map \u200b\u548c\u200breverse\u200b\u4ea4\u6362\u5f8b\u200b\n(+1) . (-1)x    === ((+1) ((-1) x))\n                === ((+1) (x - 1))\n                === (x - 1) + 1\n                === x\n                === id x        -- +1,-1\u200b\u7ec4\u6210\u200b\u5168\u7b49\u200b\u6620\u5c04\u200b\n</code></pre> <p>\u200b\u90a3\u4e48\u200b\u6211\u4eec\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u505a\u200b\u4ee5\u4e0b\u200b\u7684\u200b\u7a0b\u5e8f\u200b\u63a8\u7406\u200b</p> <pre><code>    map (+1) . reverse . map (-1)\n=== map (+1) . (reverse . map (-1))    -- (.) \u200b\u8fd0\u7b97\u200b\u7ed3\u5408\u200b\u6027\u200b\n=== map (+1) . (map (-1) . reverse)    -- map \u200b\u548c\u200breverse\u200b\u4ea4\u6362\u5f8b\u200b\n=== (map (+1) . map (-1)) . reverse    -- (.) \u200b\u8fd0\u7b97\u200b\u7ed3\u5408\u200b\u6027\u200b\n=== map ((+1) . (-1)) . reverse        -- map\u200b\u7ed3\u5408\u5f8b\u200b\n=== map id . reverse                   -- +1,-1\u200b\u7ec4\u6210\u200b\u5168\u7b49\u200b\u6620\u5c04\u200b\n=== id . reverse                       -- map\u200b\u5168\u7b49\u200b\u6620\u5c04\u200b\n=== reverse                            -- id\u200b\u5168\u7b49\u200b\u6620\u5c04\u200b\n</code></pre>"},{"location":"Archive/Haskell/9.%20Reductionism%E8%BF%98%E5%8E%9F%E8%AE%BA.html#3","title":"3 \u200b\u65e0\u7a77\u200b\u5217\u8868","text":"<p>Laziness\u200b\u7684\u200b\u597d\u5904\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u65e0\u7a77\u200b\u5217\u8868\u200b\u6765\u200b\u6f14\u793a\u200b\u3002</p> <pre><code>Prelude&gt; take 10 $ repeat 1\n[1,1,1,1,1,1,1,1,1,1]\nPrelude&gt; take 20 [0..]\n[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]\nPrelude&gt; take 10 . map (2^) $ [0..]\n[1,2,4,8,16,32,64,128,256,512]\n</code></pre> <p><code>cycle</code>\u200b\u51fd\u6570\u200b\u5c06\u200b\u7ed9\u5b9a\u200b\u7684\u200b\u5217\u8868\u200b\u53cd\u590d\u200b\u91cd\u590d\u200b\uff0c\u200b\u5728\u200b\u89e3\u51b3\u200b\u65cb\u8f6c\u200b\u6216\u8005\u200b\u5faa\u73af\u200b\u7684\u200b\u65f6\u5019\u200b\u5f88\u200b\u6709\u7528\u200b\u3002</p> <pre><code>Prelude&gt; take 21 $ cycle \"asdf\"\n\"asdfasdfasdfasdfasdfa\"\nPrelude&gt; take 4 . map (take 4) . tails $ cycle \"asdf\"\n[\"asdf\",\"sdfa\",\"dfas\",\"fasd\"]\n</code></pre> <p><code>map</code>\u200b\u51fd\u6570\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4f5c\u7528\u200b\u5728\u200b\u5217\u8868\u200b\u4e0a\u200b\uff0c\u200b\u4f8b\u5982\u200b\u5bfb\u627e\u200b\u7b2c\u4e00\u4e2a\u200b\u5927\u4e8e\u200b100\u200b\u7684\u200b3\u200b\u7684\u200b\u5e42\u200b\u3002</p> <pre><code>Prelude&gt; head . filter (&gt;100) $ map (3^) [0..]\n243\n\n-- ==&gt; head (filter (&gt;100) (1 : map (3^) [1..])) \n-- ==&gt; head (filter (&gt;100) (3 : map (3^) [2..])) \n-- ... \n-- ==&gt; head (filter (&gt;100) (81 : map (3^) [5..])) \n-- ==&gt; head (filter (&gt;100) (243 : map (3^) [6..])) \n-- ==&gt; head (243 : filter (&gt;100) (map (3^) [6..])) -- \u200b\u8fc7\u200b\u4e86\u200bfilter\uff0c\u200b\u5904\u7406\u200b\u51fa\u200b\u4e86\u200b\u7b2c\u4e00\u4e2a\u200b\u5217\u8868\u200b\u5143\u7d20\u200b\uff0c\u200b\u4ece\u200b\u5916\u5c42\u200b\u4f30\u503c\u200b\uff0c\u200b\u90a3\u4e48\u200b\u76f4\u63a5\u200b\u5f97\u5230\u200b\u6700\u540e\u200b\u7ed3\u679c\u200b\n-- ==&gt; 243 \n</code></pre>"},{"location":"Archive/Haskell/9.%20Reductionism%E8%BF%98%E5%8E%9F%E8%AE%BA.html#4-haskelllazy","title":"4 Haskell\u200b\u4e2d\u200blazy\u200b\u7684\u200b\u5b9e\u73b0\u200b\u65b9\u5f0f","text":"<p>Haskell\u200b\u7684\u200b\u4f30\u503c\u200b\u975e\u5e38\u7b80\u5355\u200b\u3002\u200b\u5927\u591a\u6570\u200b\u5176\u4ed6\u200b\u7f16\u7a0b\u8bed\u8a00\u200b\uff08Java, C\u200b\u548c\u200bPython\uff09\u200b\u4ece\u200b\u5185\u5c42\u200b\u5411\u5916\u200b\u4f30\u503c\u200b\uff0c\u200b\u5c31\u200b\u4f1a\u200b\u5c06\u200b\u4f20\u9012\u200b\u7ed9\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u7684\u200b\u6240\u6709\u200b\u53c2\u6570\u200b\u8fdb\u884c\u200b\u4f30\u503c\u200b\u3002\u200b\u800c\u200bHaskell\u200b\u65f6\u200b\u4ece\u200b\u5916\u5c42\u200b\u5411\u200b\u5185\u200b\u7684\u200b\uff0c\u200b\u8fc7\u7a0b\u200b\u5982\u4e0b\u200b</p> <pre><code>g :: Int -&gt; Int -&gt; Int\ng x y = y+1\nf :: Int -&gt; Int -&gt; Int -&gt; Int\nf a b c = g (a*1000) c\n\n\n   f 1 (1234*1234) 2\n=&gt; f 1 1522756 2   -- Int -&gt; Int -&gt; Int -&gt; Int\n=&gt; g  (1*1000) 2   -- Int -&gt; Int -&gt; Int \u200b\u5bf9\u200bf\u200b\u4f30\u503c\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u5148\u5bf9\u200b\u53c2\u6570\u200b\u4f30\u503c\u200b\n=&gt; g 1000 2        -- Int -&gt; Int -&gt; Int\n=&gt; 2 + 1           -- Int -&gt; Int -&gt; Int \u200b\u5bf9\u200bg\u200b\u4f30\u503c\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u5148\u5bf9\u200b\u53c2\u6570\u200b\u4f30\u503c\u200b\n=&gt; 3               -- Int\n</code></pre>"},{"location":"Archive/Haskell/9.%20Reductionism%E8%BF%98%E5%8E%9F%E8%AE%BA.html#41","title":"4.1 \u200b\u7531\u200b\u6a21\u5f0f\u5339\u914d\u200b\u9a71\u52a8\u200b\u7684\u200b\u4f30\u503c","text":"<p>\u200b\u5728\u200bnon-strict\u200b\u90a3\u91cc\u200b\u8bf4\u200b\u8fc7\u200b\uff0cHaskell\u200b\u4e0d\u662f\u200b\u5b8c\u5168\u200blazy\u200b\u7684\u200b\u3002\u200b\u6709\u200b\u7684\u200b\u65f6\u5019\u200b\u9700\u8981\u200b\u5148\u5bf9\u200b\u5185\u90e8\u200b\u8fdb\u884c\u200b\u4f30\u503c\u200b\uff0c\u200b\u624d\u80fd\u200b\u77e5\u9053\u200b\u5339\u914d\u200b\u5230\u200b\u54ea\u4e2a\u200b\u6a21\u5f0f\u200b\u4e0a\u200b\u3002</p> <p>\u200b\u6765\u770b\u200b\u4e00\u4e2a\u200b\u4f8b\u5b50\u200b<code>length (map not (True:False:[]))</code>\u3002\u200b\u6309\u7167\u200b\u5b8c\u5168\u200blazy\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u4f30\u503c\u200b\u5e94\u8be5\u200b\u662f\u200b\u5982\u4e0b\u200b\u8fdb\u884c\u200b\u7684\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u5b8c\u5168\u200b\u7531\u5916\u200b\u5230\u200b\u5185\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u3002</p> <pre><code>length (map not (True:False:[]))\n  ==&gt; length (not True : not False : [])  -- evaluate call to map\n  ==&gt; length (False:True:[])              -- evaluate calls to not\n  ==&gt; 2\n</code></pre> <p>\u200b\u4f46\u662f\u200b\u5b9e\u9645\u4e0a\u200bHaskell\u200b\u4e2d\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u662f\u200b\u5982\u4e0b\u200b\u53d1\u751f\u200b\u7684\u200b</p> <pre><code>length (map not (True:False:[]))\n  -- length\u200b\u6709\u200b\u4e0d\u540c\u200b\u7684\u200b\u6a21\u5f0f\u5339\u914d\u200b\uff0c\u200b\u6bd4\u5982\u200b[]\u200b\u548c\u200b(fst:last)\n  -- length\u200b\u7684\u200b\u53c2\u6570\u200b\u4e3a\u200bmap not (True:False:[])\uff0c\u200b\u5fc5\u987b\u200b\u8981\u200b\u77e5\u9053\u200b\u4e00\u4e2a\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5bf9\u200b\u7b2c\u4e00\u4e2a\u200b\u5148\u200b\u8fdb\u884c\u200b\u4f30\u503c\u200b\n  ==&gt; length (not True : map not (False:[]))\n  -- \u200b\u73b0\u5728\u200b\u6211\u4eec\u200b\u6709\u200b\u4e00\u4e2a\u200b(:)\uff0c\u200b\u80fd\u591f\u200b\u5339\u914d\u200b\u4e86\u200b\uff0c\u200b\u7531\u4e8e\u200b\u5916\u90e8\u200b\u5f00\u59cb\u200b\uff0clength\u200b\u5148\u200b\u8fdb\u884c\u200b\u4f30\u503c\u200b\n  ==&gt; 1 + length (map not (False:[]))\n  -- \u200b\u73b0\u5728\u200b\u6700\u200b\u5916\u5c42\u200b\u7684\u200b\u51fd\u6570\u200b\u662f\u200b(+)\uff0c\u200b\u5b83\u200b\u9700\u8981\u200b\u7b2c\u4e8c\u4e2a\u200b\u53c2\u6570\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5bf9\u200b\u5185\u5c42\u200b\u8fdb\u884c\u200b\u4f30\u503c\u200b\u3002\n  -- \u200b\u53d1\u751f\u200b\u4e86\u200b\u548c\u200b\u4e4b\u524d\u200b\u5b8c\u5168\u200b\u4e00\u6837\u200b\u7684\u200b\u8fc7\u7a0b\u200b\n  ==&gt; 1 + length (not False : map not ([]))\n  -- \u200b\u6700\u540e\u200b\u4e00\u6b21\u200b\u4e5f\u200b\u4e00\u6837\u200b\uff0c\u200b\u8981\u200b\u5148\u200b\u4f30\u503c\u200b\u5185\u90e8\u200b\u7684\u200bmap not ([])\uff0c\u200b\u5f97\u5230\u200b\u7ed3\u679c\u200b[]\uff0c\u200b\u624d\u80fd\u200b\u8fdb\u884c\u200blength\u200b\u7684\u200b\u6a21\u5f0f\u5339\u914d\u200b\n  ==&gt; 1 + (1 + length (map not []))\n  ==&gt; 1 + (1 + length [])\n  ==&gt; 1 + (1 + 0)\n  ==&gt; 1 + 1\n  ==&gt; 2\n</code></pre> <p>\u200b\u8fd9\u79cd\u200b\u8fc7\u7a0b\u200b\u88ab\u200b\u79f0\u4e3a\u200b\u6a21\u5f0f\u5339\u914d\u200b\u8feb\u4f7f\u200b\u7684\u200b\u4f30\u503c\u200b\u3002\u200b\u5f53\u200bHaskell\u200b\u5bf9\u200b\u67d0\u4e9b\u200b\u88ab\u200b\u79f0\u4e3a\u200b\u5f31\u9996\u200b\u8303\u5f0f\u200b\uff08WHNF:weak head normal form\uff0c\u200b\u4ee3\u8868\u200b\u4e00\u4e2a\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u6a21\u5f0f\u5339\u914d\u200b\u5230\u200b\u7684\u200b\u503c\u200b\uff09\u200b\u8fdb\u884c\u200b\u4f30\u503c\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u4f1a\u200b\u51fa\u73b0\u200b\u8fd9\u79cd\u200b\u8fc7\u7a0b\u200b\u3002\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u8868\u8fbe\u5f0f\u200b\u5728\u200b\u9876\u5c42\u200b\u80fd\u200b\u88ab\u200b\u4f30\u503c\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5c31\u200b\u79f0\u200b\u5176\u200b\u5728\u200bWHNF\u200b\u4e2d\u200b\u3002 \u200b\u53ef\u80fd\u200b\u6709\u200b\u8fd9\u200b\u51e0\u79cd\u200b\u60c5\u51b5\u200b     1. \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5e38\u6570\u200b     2. \u200b\u5728\u200b\u9876\u5c42\u200b\u6709\u200b\u4e00\u4e2a\u200b\u6784\u9020\u51fd\u6570\u200b\uff0c\u200b\u4f8b\u5982\u200b<code>False, Just(1+!), 0: filter f xs</code>\u3002     3. \u200b\u662f\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u4f8b\u5982\u200b<code>(\\x -&gt; 1+x)</code>\u3002 \u200b\u4e0d\u200b\u5728\u200bWHNF\u200b\u4e2d\u200b\u7684\u200b\u6700\u200b\u660e\u663e\u200b\u7684\u200b\u4e00\u7c7b\u200b\u8868\u8fbe\u5f0f\u200b\u662f\u200b\u51fd\u6570\u200b\u5e94\u7528\u200b\u3002\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u8868\u8fbe\u5f0f\u200b\u7531\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff08\u200b\u4e0d\u662f\u200b\u6784\u9020\u51fd\u6570\u200b\uff09\u200b\u7ec4\u6210\u200b\uff0c\u200b\u5e94\u7528\u200b\u4e8e\u200b\u4e00\u4e9b\u200b\u53c2\u6570\u200b\uff0c\u200b\u5b83\u200b\u5c31\u200b\u4e0d\u200b\u5728\u200bWHNF\u200b\u4e2d\u200b\u3002\u200b\u6211\u4eec\u200b\u5fc5\u987b\u200b\u5bf9\u200b\u5b83\u200b\u8fdb\u884c\u200b\u8bc4\u4f30\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u5f97\u5230\u200b\u53ef\u200b\u88ab\u200b\u6a21\u5f0f\u5339\u914d\u200b\u7684\u200b\u4e1c\u897f\u200b\u3002</p> <p>\u200b\u5728\u200b\u524d\u9762\u200b\u7684\u200b\u4f8b\u5b50\u200b\u4e2d\u200b\u6211\u4eec\u200b\u4e0d\u80fd\u200b\u5bf9\u200b<code>length (map not (False:[]))</code>\u200b\u5728\u200b\u9876\u5c42\u200b\u8fdb\u884c\u200b\u4f30\u8ba1\u200b\uff0c\u200b\u56e0\u4e3a\u200b<code>length</code>\u200b\u4e0d\u200b\u5728\u200bWHNF\u200b\u4e2d\u200b\u3002\u200b\u5f53\u200b\u6211\u4eec\u200b\u5bf9\u200b\u7b2c\u4e8c\u4e2a\u200b\u7b49\u5f0f\u200b<code>map</code>\u200b\u8fdb\u884c\u200b\u4f30\u503c\u200b\u540e\u200b\uff0c\u200b\u6709\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u6784\u9020\u200b\u5668\u200b\uff0c\u200b\u73b0\u5728\u200b<code>length</code>\u200b\u5c31\u200b\u5728\u200bWHNF\u200b\u4e2d\u200b\uff0c\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4f30\u503c\u200b\u4e86\u200b\u3002</p> <p>\u200b\u5728\u200b\u5b9e\u9645\u200b\u4e2d\u200b\uff0c\u200b\u4e0d\u6b62\u200b\u6a21\u5f0f\u5339\u914d\u200b\u4f1a\u200b\u8feb\u4f7f\u200b\u4f30\u503c\u200b\uff0c\u200b\u7c7b\u4f3c\u200b<code>(+)</code>\u200b\u8fd9\u6837\u200b\u7684\u200b\u539f\u8bed\u200b\u4e5f\u200b\u4f1a\u200b\u3002\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u8bf4\u200b<code>(+)</code>\u200b\u5bf9\u4e8e\u200b\u4e24\u4e2a\u200b\u53c2\u6570\u200b\u90fd\u200b\u662f\u200bstrict\u200b\u7684\u200b\u3002</p>"},{"location":"Archive/Haskell/9.%20Reductionism%E8%BF%98%E5%8E%9F%E8%AE%BA.html#42-sharing","title":"4.2 Sharing\u200b\u5171\u4eab\u200b\u76f8\u540c\u200b\u7684\u200b\u503c","text":"<p>\u200b\u53ea\u8981\u200b\u7ed9\u200b\u4e00\u4e2a\u200b\u503c\u547d\u200b\u4e86\u200b\u540d\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5b83\u200b\u5c31\u662f\u200b\u5171\u4eab\u200b(shared)\u200b\u7684\u200b\u3002\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u8fd9\u4e2a\u200b\u540d\u5b57\u200b\u7684\u200b\u6bcf\u200b\u4e00\u6b21\u200b\u51fa\u73b0\u200b\u90fd\u200b\u6307\u5411\u200b\u540c\u4e00\u4e2a\u200b\uff08\u200b\u53ef\u80fd\u200b\u662f\u200b\u672a\u200b\u4f30\u503c\u200b\u7684\u200b\uff09\u200b\u8868\u8fbe\u5f0f\u200b\u3002\u200b\u5f53\u200b\u4e00\u4e2a\u200b\u8868\u8fbe\u5f0f\u200b\u88ab\u200b\u4f30\u503c\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u540d\u5b57\u200b\u51fa\u73b0\u200b\u7684\u200b\u4efb\u4f55\u200b\u5730\u65b9\u200b\u90fd\u200b\u80fd\u200b\u770b\u5230\u200b\u8fd9\u4e2a\u200b\u7ed3\u679c\u200b\u3002</p> <p>\u200b\u770b\u200b\u4e00\u4e2a\u200b\u4f8b\u5b50\u200b\u3002\u200b\u4ee5\u4e0b\u200b\u8868\u8fbe\u5f0f\u200b\u5982\u679c\u200b\u6309\u7167\u200b\u4ece\u5916\u200b\u5230\u200b\u5185\u200b\u7684\u200b\u4f30\u503c\u200b\u987a\u5e8f\u200b\uff0c\u200b\u5e94\u8be5\u200b\u662f\u200b\u8fd9\u6837\u200b\u88ab\u200b\u8ba1\u7b97\u200b\u7684\u200b</p> <pre><code>square x = x * x\nsquare (2+2)\n  ==&gt; (2+2) * (2+2)   -- square\u200b\u4f30\u503c\u200b\n  ==&gt;   4   * (2+2)   -- (*) \u200b\u8feb\u4f7f\u200b\u5de6\u503c\u200b\u8fdb\u884c\u200b\u4f30\u503c\u200b\n  ==&gt;   4   *   4     -- (*) \u200b\u8feb\u4f7f\u200b\u53f3\u503c\u200b\u8fdb\u884c\u200b\u4f30\u503c\u200b\n  ==&gt;      16         -- (*) \u200b\u4f30\u503c\u200b\n</code></pre> <p>\u200b\u90a3\u200b\u8fd9\u4e2a\u200b\u8fc7\u7a0b\u200b\u56fe\u5f62\u5316\u200b\u8868\u793a\u200b\u7684\u8bdd\u200b\u5c31\u662f\u200b</p> <p>\u200b\u4f46\u662f\u200b\u5b9e\u9645\u4e0a\u200b<code>(2+2)</code>\u200b\u53ea\u4f1a\u200b\u88ab\u200b\u8ba1\u7b97\u200b\u4e00\u6b21\u200b\uff0c\u200b\u4f30\u503c\u200b\u7ed3\u679c\u200b\u5c06\u4f1a\u200b\u5728\u200b\u4e24\u6b21\u200b\u51fa\u73b0\u200b\u65f6\u200b\u88ab\u200b\u5171\u4eab\u200b\u3002\u200b\u8fd9\u662f\u200bHaskell\u200b\u4e2d\u200b\u7684\u200b\u56fe\u200b\u7ea6\u7b80\u200b(graph reduction)\u3002</p> <pre><code>square (2+2)\n  ==&gt; (2+2) * (2+2)\n  ==&gt;   4   *   4\n  ==&gt;      16\n</code></pre> <p>\u200b\u4f46\u662f\u200b\u8981\u200b\u6ce8\u610f\u200b\uff0c\u200b\u4e00\u5b9a\u200b\u8981\u662f\u200b\u76f8\u540c\u200b\u7684\u200b\u540d\u5b57\u200b\u624d\u80fd\u200b\u5171\u4eab\u200b\uff0c\u200b\u4e0d\u662f\u200b\u76f8\u540c\u200b\u7684\u200b\u503c\u200b\u3002</p> <pre><code>-- \u200b\u540c\u540d\u200b\nf :: Int -&gt; Int\nf i = if i&gt;10 then 10 else i\n                  _______shared________\n                 |                     |\nf (1+1) ==&gt; if (1+1)&gt;10 then 10 else (1+1)\n        ==&gt; if 2&gt;10 then 10 else 2\n        ==&gt; if False then 10 else 2\n        ==&gt; 2\n\n-- \u200b\u4e0d\u540c\u200b\u540d\u200b\uff0c\u200b\u540c\u503c\u200b\ng :: Int -&gt; Int\ng i j = if i&gt;10 then 10 else j\n                        ______no sharing_____\n                       |                     |\ng (1+1) (1+1) ==&gt; if (1+1)&gt;10 then 10 else (1+1)\n              ==&gt; if 2&gt;10 then 10 else (1+1)\n              ==&gt; if False then 10 else (1+1)\n              ==&gt; (1+1)\n              ==&gt; 2\n</code></pre> <p>\u200b\u7b2c\u4e8c\u79cd\u200b\u4e0d\u540c\u200b\u540d\u540c\u503c\u200b\u7684\u200b\u60c5\u51b5\u200b\u5c06\u4f1a\u200b\u88ab\u200b\u901a\u8fc7\u200b \u200b\u53e6\u200b\u4e00\u79cd\u200b\u53eb\u200b\u516c\u5171\u200b\u5b50\u200b\u8868\u8fbe\u5f0f\u200b\u6d88\u9664\u200bcommon subexpression elimination (CSE) \u200b\u7684\u200b\u624b\u6bb5\u200b\u8fdb\u884c\u200b\u4f18\u5316\u200b\u3002\u200b\u5982\u679c\u200b\u8868\u8fbe\u5f0f\u200b\u51fa\u73b0\u200b\u5728\u200b\u51e0\u4e2a\u200b\u5730\u65b9\u200b\uff0c\u200b\u4ee3\u7801\u200b\u5c06\u4f1a\u200b\u88ab\u200b\u91cd\u6574\u200b\u4ece\u800c\u200b\u4ed6\u4eec\u200b\u53ea\u4f1a\u200b\u88ab\u200b\u8ba1\u7b97\u200b\u4e00\u6b21\u200b\u3002\u200b\u5b8c\u5168\u200bCSE\u200b\u5316\u200b\uff0c\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u4f1a\u200b\u5f71\u54cd\u200b\u7a0b\u5e8f\u200b\u7684\u200bstrictness/laziness\uff0c\u200b\u6240\u4ee5\u200bGHC\u200b\u53ea\u200b\u5728\u200b\u7279\u5b9a\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u8fdb\u884c\u200bCSE\u3002\u200b\u53ef\u4ee5\u200b\u81ea\u5df1\u200b\u624b\u52a8\u200b\u505a\u200b\u4e00\u4e0b\u200bCSE\u3002</p> <pre><code>  foo x = (bar x) * (bar x) -- bar x\u200b\u5206\u522b\u200b\u88ab\u200b\u8ba1\u7b97\u200b\n  foo x = let x' = bar x in x' * x'  -- bar x\u200b\u53ea\u200b\u8ba1\u7b97\u200b\u4e00\u6b21\u200b\u5e76\u200b\u5b58\u50a8\u200b\u5728\u200bx'\u200b\u4e2d\u200b\n</code></pre>"},{"location":"Archive/Haskell/9.%20Reductionism%E8%BF%98%E5%8E%9F%E8%AE%BA.html#5-lazy","title":"5 \u200b\u5982\u4f55\u200b\u624d\u80fd\u200b\u66f4\u597d\u200b\u7684\u200b\u7528\u200b\u65e0\u7a77\u200b\u5217\u8868\u200b\u548c\u200bLazy\u200b\u65b9\u5f0f","text":"<p>\u200b\u4ece\u200b\u4e0a\u9762\u200b\u7684\u200bLazy\u200b\u5b9e\u73b0\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\uff0c\u200b\u6709\u200b\u7684\u200b\u65f6\u5019\u200b\u5b9e\u73b0\u200b\u7684\u200b\u4e0d\u597d\u200b\u5b83\u200b\u5c31\u200b\u4f1a\u200b\u5411\u4e0b\u200b\u6c42\u503c\u200b\u3002\u200b\u6240\u4ee5\u200b\u8981\u200b\u5199\u200b\u4e00\u4e9b\u200b\u80fd\u591f\u200b\u6bd4\u8f83\u200b\u597d\u200b\u5904\u7406\u200b\u65e0\u7a77\u200b\u5217\u8868\u200b\u7684\u200b\u8f85\u52a9\u200b\u51fd\u6570\u200b\u3002</p> <p>\u200b\u4e3a\u4e86\u200b\u5199\u200b\u4e00\u4e2a\u200b\u80fd\u591f\u200b\u8f6c\u6362\u200b\u65e0\u7a77\u200b\u5217\u8868\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u9700\u8981\u200b\u5199\u200b\u4e00\u4e2a\u200b\u53ea\u200b\u5904\u7406\u200b\u6709\u9650\u200b\u524d\u7f00\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u80fd\u591f\u200b\u8f93\u51fa\u200b\u4e00\u4e2a\u200b<code>(:)</code>\u200b\u8fd0\u7b97\u7b26\u200b\uff0c\u200b\u7136\u540e\u200b\u5c31\u200b\u80fd\u200b\u8fdb\u884c\u200b\u8fed\u4ee3\u200b\u4e86\u200b\u3002\u200b\u4f8b\u5982\u200b\u4ee5\u4e0b\u200b\uff1a</p> <pre><code>everySecond :: [a] -&gt; [a]\neverySecond [] = []\neverySecond (x:y:xs) = x : everySecond xs\n\ntake 10 (everySecond [0..])  ==&gt;  [0,2,4,6,8,10,12,14,16,18]\n</code></pre> <p>\u200b\u4e00\u4e2a\u200b\u597d\u200b\u7684\u200b\u542f\u53d1\u5f0f\u200b\u662f\u200b\uff1a<code>head</code>\u200b\u51fd\u6570\u200b\u80fd\u591f\u200b\u8f7b\u6613\u200b\u5904\u7406\u7ed3\u679c\u200b\u5417\u200b\uff1f\u200b\u6765\u770b\u200b\u4e24\u4e2a\u200b\u4e0d\u597d\u200b\u7684\u200b\u4f8b\u5b50\u200b\u3002 \u200b\u7b2c\u4e00\u4e2a\u200b\u662f\u200b<code>mapTailRecursive</code>\uff0c\u200b\u5728\u200b\u5b83\u200b\u7684\u200b\u9012\u5f52\u200b\u8bed\u53e5\u200b\u4e2d\u200b\u6ca1\u6709\u200b\u7ed9\u51fa\u200b\u4e00\u4e2a\u200b\u90e8\u5206\u200b\u7ed3\u679c\u200b\uff0c\u200b\u5fc5\u987b\u200b\u5904\u7406\u200b\u5b8c\u6574\u200b\u4e2a\u200b\u8f93\u5165\u200b\uff0c\u200b\u8868\u8fbe\u5f0f\u200b\u624d\u200b\u5c5e\u4e8e\u200bWHNF\u3002</p> <pre><code>map :: (a -&gt; b) -&gt; [a] -&gt; [b]\nmap _ []     = []\nmap f (x:xs) = f x : map f xs\n\nmapTailRecursive :: (a -&gt; b) -&gt; [a] -&gt; [b]\nmapTailRecursive f xs = go xs []\n    where go (x:xs) res = go xs (res++[f x]) --\u200b\u5c3e\u90e8\u200b\u9012\u5f52\u200b\uff0c\u200b\u6ca1\u6709\u200b\u7ed9\u51fa\u200b\u4e00\u4e2a\u200b(:)\uff0c\u200b\u53ea\u80fd\u200b\u65e0\u9650\u200b\u5411\u4e0b\u200b\u9012\u5f52\u200b\n          go []     res = res\n</code></pre> <p>\u200b\u7b2c\u4e8c\u4e2a\u200b\u662f\u200b<code>myDrop</code>\uff0c\u200b\u5176\u4e2d\u200b\u5bf9\u200b\u65e0\u7a77\u200b\u5217\u8868\u200b\u4f7f\u7528\u200b\u4e86\u200b<code>length</code>\u200b\u51fd\u6570\u200b\uff0c\u200b\u800c\u200b<code>length</code>\u200b\u672c\u6765\u200b\u5c31\u662f\u200b\u5bf9\u200b\u5217\u8868\u200b\u9012\u5f52\u200b\u5411\u4e0b\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5c06\u200b\u4e0d\u4f1a\u200b\u5f97\u5230\u200b\u7ed3\u679c\u200b\u3002</p> <pre><code>drop :: Int -&gt; [a] -&gt; [a]\ndrop 0 xs = xs\ndrop _ [] = []\ndrop n (x:xs) = drop (n-1) xs\n\nmyDrop :: Int -&gt; [a] -&gt; [a]\nmyDrop 0 xs = xs\n-- \u200b\u4f7f\u7528\u200blength\u200b\u51fd\u6570\u200b\nmyDrop n xs = if n &gt; length xs then [] else myDrop (n-1) (tail xs)\n</code></pre>"},{"location":"Archive/Haskell/9.%20Reductionism%E8%BF%98%E5%8E%9F%E8%AE%BA.html#6-strictness","title":"6 \u200b\u589e\u52a0\u200bStrictness","text":"<p>Haskell\u200b\u4e2d\u6709\u200b\u4e2a\u200b\u5185\u90e8\u200b\u51fd\u6570\u200b<code>seq a b</code>\uff0c\u200b\u80fd\u591f\u200b\u5bf9\u200b<code>b</code>\u200b\u8fdb\u884c\u200b\u4f30\u503c\u200b\uff0c\u200b\u4f46\u662f\u200b\u5c06\u200b<code>a</code>\u200b\u5f3a\u884c\u200b\u8f6c\u200b\u6210\u200b\u4e00\u4e2a\u200bWHNF\u3002</p> <p>\u200b\u6765\u200b\u8ba8\u8bba\u200b<code>foldl</code>\u200b\u51fd\u6570\u200b\uff0c\u200b\u5b83\u200b\u548c\u200b<code>foldr</code>\u200b\u7684\u200b\u7ed3\u5408\u200b\u987a\u5e8f\u200b\u76f8\u53cd\u200b\u3002</p> <pre><code>foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b\nfoldr f y []     = y\nfoldr f y (x:xs) = f x (foldr f y xs) -- \u200b\u5c3e\u90e8\u200b\u9012\u5f52\u200b\uff0c\u200b\u5e76\u200b\u4f5c\u4e3a\u200b\u7b2c\u4e8c\u4e2a\u200b\u53c2\u6570\u200b\n\nfoldl :: (a -&gt; b -&gt; a) -&gt; a -&gt; [b] -&gt; a\nfoldl f z [] = z\nfoldl f z (x:xs) = foldl f (f z x) xs -- \u200b\u5c3e\u90e8\u200b\u9012\u5f52\u200b\uff0c\u200b\u5e76\u200b\u4f5c\u4e3a\u200b\u7b2c\u4e00\u4e2a\u200b\u53c2\u6570\u200b\n\nfoldr (+) 0 [1,2,3]  ==&gt;  1+(2+(3+0))\nfoldl (+) 0 [1,2,3]  ==&gt;  ((0+1)+2)+3\n</code></pre>"},{"location":"Archive/Haskell/9.%20Reductionism%E8%BF%98%E5%8E%9F%E8%AE%BA.html#51-strict","title":"5.1 \u200b\u5bf9\u4e8e\u200b\u5355\u8fb9\u200bStrict\u200b\u7684\u200b\u8fd0\u7b97\u7b26","text":"<p>\u200b\u7c7b\u4f3c\u200b<code>||,&amp;&amp;,++</code>\u200b\u7b49\u200b\u4e00\u7cfb\u5217\u200b\u7b26\u53f7\u200b\u6709\u200bleft strictness\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b\u53ea\u200b\u8981\u6c42\u200b\u5de6\u503c\u200b\u8fdb\u884c\u200b\u8fd0\u7b97\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u7b26\u53f7\u200b\u548c\u200b<code>foldr</code>\u200b\u76f8\u6027\u5ea6\u200b\u5f88\u200b\u597d\u200b\uff0c\u200b\u56e0\u4e3a\u200b<code>foldr</code>\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u662f\u200b\u5df2\u77e5\u200b\u7684\u200b<code>x</code>\u3002</p> <pre><code>    foldr (&amp;&amp;) True [False,False,False]\n==&gt; False &amp;&amp; (foldr (&amp;&amp;) True [False,False])\n==&gt; False\n</code></pre> <p>\u200b\u4f46\u662f\u200b\u5982\u679c\u200b\u6362\u6210\u200b<code>foldl</code>\uff0c\u200b\u7b2c\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u53d8\u6210\u200b\u4e86\u200b<code>f (f z x)</code>\uff0c\u200b\u90a3\u200b\u5c31\u200b\u53d8\u5f97\u200b\u8981\u200b\u4f30\u503c\u200b\u5230\u200b\u7ed3\u5c3e\u200b\u4e86\u200b\u3002</p> <pre><code>    foldl (&amp;&amp;) True [False,False,False]\n==&gt; foldl (&amp;&amp;) (True&amp;&amp;False) [False,False]\n==&gt; foldl (&amp;&amp;) ((True&amp;&amp;False)&amp;&amp;False) [False]\n==&gt; foldl (&amp;&amp;) (((True&amp;&amp;False)&amp;&amp;False)&amp;&amp;False) []\n==&gt; ((True&amp;&amp;False)&amp;&amp;False)&amp;&amp;False\n==&gt; (    False    &amp;&amp;False)&amp;&amp;False\n==&gt;              False    &amp;&amp;False\n==&gt;                      False\n</code></pre>"},{"location":"Archive/Haskell/9.%20Reductionism%E8%BF%98%E5%8E%9F%E8%AE%BA.html#52-strict","title":"5.2 \u200b\u5bf9\u4e8e\u200b\u53cc\u8fb9\u200bStrict\u200b\u7684\u200b\u8fd0\u7b97\u7b26","text":"<p>\u200b\u5bf9\u4e8e\u200b\u53cc\u8fb9\u200b\u90fd\u200bstrict\u200b\u7684\u200b\u8fd0\u7b97\u7b26\u200b\uff0c\u200b\u4f8b\u5982\u200b<code>(+)</code>\uff0c\u200b\u4e24\u79cd\u200b<code>fold</code>\u200b\u90fd\u200b\u4f1a\u200b\u5c55\u5f00\u200b\u6210\u200b\u5927\u91cf\u200b\u5e26\u6709\u200b<code>(+)</code>\u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\u3002Haskell\u200b\u5b9e\u73b0\u200b\u9700\u8981\u200b\u5728\u200b\u5185\u5b58\u200b\u4e2d\u200b\u8ffd\u8e2a\u200b\u6574\u4e2a\u200b\u8868\u8fbe\u5f0f\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\u88ab\u200b\u53eb\u505a\u200b\u7a7a\u95f4\u200b\u6cc4\u9732\u200b(space leak)\u3002</p> <pre><code>    foldr (+) 0 [1,2,3]\n==&gt; 1 + foldr (+) 0 [2,3]\n==&gt; 1 + (2 + foldr (+) 0 [3])\n==&gt; 1 + (2 + (3 + foldr (+) 0 []))\n==&gt; 1 + (2 + (3 + 0))\n==&gt; 1 + (2 + 3)\n==&gt; 1 + 5\n==&gt; 6\n\n    foldl (+) 0 [1,2,3]\n==&gt; foldl (+) (0+1) [2,3]\n==&gt; foldl (+) ((0+1)+2) [3]\n==&gt; foldl (+) (((0+1)+2)+3) []\n==&gt; ((0+1)+2)+3\n==&gt; (  1  +2)+3\n==&gt;       3  +3\n==&gt;          6\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\u51fa\u73b0\u200b\u5728\u200blaziness\u200b\u4e0a\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u7528\u5230\u200b\u624d\u200b\u4f30\u503c\u200b\uff0c\u200b\u6240\u4ee5\u200b\u53ea\u80fd\u200b\u9010\u4e2a\u200b\u5c55\u5f00\u200b\u3002\u200b\u90a3\u200b\u5982\u679c\u200b\u80fd\u200b\u51fa\u6765\u200b\u4e00\u4e2a\u200b\u7b97\u200b\u4e00\u4e2a\u200b\uff0c\u200b\u81ea\u7136\u200b\u4e5f\u200b\u5c31\u200b\u4e0d\u200b\u9700\u8981\u200b\u8ffd\u8e2a\u200b\u4e00\u4e2a\u200b\u957f\u200b\u8868\u8fbe\u5f0f\u200b\u4e86\u200b\u3002\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u5e93\u51fd\u6570\u200b<code>foldl'</code>\u3002</p> <pre><code>    foldl' (+) 0 [1,2,3]\n==&gt; foldl' (+) (0+1) [2,3] \n==&gt; foldl' (+) 1 [2,3] -- \u200b\u903c\u8feb\u200b\u7b2c\u4e8c\u4e2a\u200b\u53c2\u6570\u200b\u4f30\u503c\u200b\n==&gt; foldl' (+) (1+2) [3]\n==&gt; foldl' (+) 3 [3]   -- \u200b\u903c\u8feb\u200b\u7b2c\u4e8c\u4e2a\u200b\u53c2\u6570\u200b\u4f30\u503c\u200b\n==&gt; foldl' (+) (3+3) []\n==&gt; foldl' (+) 6 []    -- \u200b\u903c\u8feb\u200b\u7b2c\u4e8c\u4e2a\u200b\u53c2\u6570\u200b\u4f30\u503c\u200b\n==&gt; 6\n</code></pre> <p>\u200b\u8fd9\u200b\u5c31\u200b\u53eb\u505a\u200b\u589e\u52a0\u200bstrictness\u3002\u200b\u8fd9\u4e2a\u200b\u5e93\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u5199\u6210\u200b\u5982\u4e0b\u200b\u7684\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u4ec5\u4ec5\u200b\u5728\u200b\u539f\u6765\u200b\u7684\u200b<code>foldl</code>\u200b\u4e0a\u200b\u589e\u52a0\u200b\u4e86\u200b\u7b2c\u4e8c\u4e2a\u200b\u884c\u200b\u7684\u200b\u6a21\u5f0f\u5339\u914d\u200b\u3002\u200b\u8fd9\u6837\u200b\u4ee5\u540e\u200b\u7a0b\u5e8f\u200b\u5c31\u200b\u5fc5\u987b\u200b\u8981\u200b\u77e5\u9053\u200b\u7b2c\u4e8c\u4e2a\u200b\u53c2\u6570\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u624d\u80fd\u200b\u7ed9\u200b<code>0</code>\u200b\u548c\u200b<code>z</code>\u200b\u627e\u5230\u200b\u6b63\u786e\u200b\u7684\u200b\u5339\u914d\u200b\uff0c\u200b\u90a3\u4e48\u200b\u7b2c\u4e8c\u4e2a\u200b\u53c2\u6570\u200b\u5c31\u200b\u4f1a\u200b\u88ab\u200b\u5f3a\u5236\u200b\u4f30\u503c\u200b\u3002</p> <pre><code>-- foldl f z (x:xs) = foldl f (f z x) xs\n\nfoldl'Int :: (Int -&gt; Int -&gt; Int) -&gt; Int -&gt; [Int] -&gt; Int\nfoldl'Int f z [] = z\nfoldl'Int f 0 (x:xs) = foldl'Int f (f 0 x) xs  \nfoldl'Int f z (x:xs) = foldl'Int f (f z x) xs\n</code></pre> <p>\u200b\u4e3a\u4e86\u200b\u76f4\u63a5\u200b\u5b9e\u73b0\u200b\u8fd9\u4e2a\u200b\u529f\u80fd\u200b\uff0cHaskell\u200b\u76f4\u63a5\u200b\u5f15\u5165\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u5185\u7f6e\u200b\u51fd\u6570\u200b<code>seq a b</code>\uff0c\u200b\u4f30\u503c\u200b\u7ed3\u679c\u200b\u4e3a\u200b<code>b</code>\uff0c\u200b\u5e76\u200b\u5c06\u200b<code>a</code>\u200b\u4f30\u503c\u200b\u5230\u200bWHNF\u3002\u200b\u4e3a\u4e86\u200b\u6f14\u793a\u200b\u53d1\u751f\u200b\u4e86\u200b\u4ec0\u4e48\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u5f15\u5165\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u503c\u200b<code>undefined</code>\uff0c\u200b\u5982\u679c\u200b\u6709\u200b\u4e1c\u897f\u200b\u88ab\u200b\u4f30\u503c\u200b\u6210\u200bWHNF\u200b\u5c31\u200b\u4f1a\u200b\u62ac\u8d77\u200b\u5f02\u5e38\u200b\u3002</p> <pre><code>strictHead :: [a] -&gt; a\nstrictHead xs = seq (last xs) (head xs)\n\nPrelude&gt; head [1,2,3]\n1\nPrelude&gt; strictHead [1,2,3]\n1\nPrelude&gt; head (1:2:undefined)\n1\nPrelude&gt; strictHead (1:2:undefined) -- undefined\u200b\u88ab\u200b\u5c1d\u8bd5\u200b\u8f6c\u200b\u6210\u200bWHNF\n*** Exception: Prelude.undefined\nPrelude&gt; head [1..]\n1\nPrelude&gt; strictHead [1..] -- \u200b\u5e0c\u671b\u200b\u5bf9\u200blast\u200b\u5143\u7d20\u200b\u505a\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u65e0\u6b62\u5883\u200b\u9012\u5f52\u200b\n</code></pre> <p>\u200b\u8fd9\u200b\u662f\u200b\u53e6\u200b\u4e00\u4e2a\u200b<code>foldl'</code>\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u5f15\u5165\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u5171\u4eab\u200b\u53d8\u91cf\u200b<code>z'</code>\uff0c\u200b\u5e76\u4e14\u200b\u8981\u6c42\u200b\u4ed6\u200b\u88ab\u200b\u4f30\u503c\u200b\u6210\u200b\u4e00\u4e2a\u200bWHNF\u3002</p> <pre><code>-- foldl f z (x:xs) = foldl f (f z x) xs\nfoldl' :: (a -&gt; b -&gt; a) -&gt; a -&gt; [b] -&gt; a\nfoldl' f z [] = z\nfoldl' f z (x:xs) = let z' = f z x\n                    in seq z' (foldl f z' xs)\n\n   foldl' (+) 0 [1,2,3]\n==&gt; seq (0+1) (foldl' (+) (0+1) [2,3])  -- seq\u200b\u8feb\u4f7f\u200b\u7b2c\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u8fdb\u884c\u200b\u8ba1\u7b97\u200b\n          |                 |\n          +-----sharing-----'\n          |                 |\n==&gt; seq   1   (foldl' (+)   1   [2,3])  -- \u200b\u7b2c\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u662f\u200bWHNF\u200b\u4e86\u200b\uff0cseq\u200b\u6d88\u5931\u200b\n==&gt; foldl' (+) 1 [2,3]\n==&gt; seq (1+2) (foldl' (+) (1+2) [3])\n==&gt; seq   3   (foldl' (+)   3   [3])\n==&gt; foldl' (+)   3   [3]\n==&gt; seq (3+3) (foldl' (+) (3+3) [])\n==&gt; seq   6   (foldl' (+)   6   [])\n==&gt; foldl' (+)   6   []\n==&gt; 6\n</code></pre>"},{"location":"Archive/Haskell/9.%20Reductionism%E8%BF%98%E5%8E%9F%E8%AE%BA.html#7-newtype","title":"7 newtype\u200b\u5b9a\u4e49","text":"<p>\u200b\u4e4b\u200b\u524d\u63d0\u200b\u8fc7\u200b<code>newtype</code>\u200b\u4e5f\u200b\u80fd\u200b\u5b9a\u4e49\u200b\u7c7b\u200b\uff0c\u200b\u4f46\u200b\u53ea\u80fd\u200b\u6709\u200b\u4e00\u4e2a\u200b\u6784\u9020\u51fd\u6570\u200b\u548c\u200b\u4e00\u4e2a\u200b\u57df\u200b\uff08box\u200b\u65b9\u6cd5\u200b\uff09\u3002 <code>newtype</code>\u200b\u548c\u200b<code>data</code>\u200b\u7684\u200b\u5185\u5b58\u200b\u6784\u9020\u200b\u5b8c\u5168\u200b\u4e0d\u540c\u200b\u3002\u200b\u4f7f\u7528\u200b<code>data</code>\u200b\u5c06\u4f1a\u200b\u5f15\u5165\u200b\u4e00\u4e2a\u200b\u4e2d\u95f4\u5c42\u200b\uff08\u200b\u6784\u9020\u51fd\u6570\u200b\uff09\uff0c\u200b\u4f46\u662f\u200b<code>newtype</code>\u200b\u662f\u200b\u4e0d\u4f1a\u200b\u7684\u200b\u3002\u200b\u4f8b\u5982\u200b\u4ee5\u4e0b\u200b</p> <pre><code>code:                                 memory:\n\ndata Money = Cents Int                x --&gt; Cents --&gt; 100\nx = Cents 100\n\n\nnewtype Money = Cents Int             x --&gt; 100\nx = Cents 100\n</code></pre> <p>\u200b\u5177\u4f53\u200b\u7684\u200b\u4e0d\u540c\u200b\u6709\u200b\u8fd9\u200b\u51e0\u4e2a\u200b\uff1a     1. <code>newtype</code>\u200b\u66f4\u200b\u9ad8\u6548\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u7c7b\u578b\u200b\u5728\u200b\u7f16\u8bd1\u200b\u5b8c\u200b\u65f6\u5019\u200b\u5c31\u200b\u6d88\u5931\u200b\u4e86\u200b\uff0c\u200b\u4f46\u662f\u200b\u4f1a\u200b\u88ab\u200b\u5f7b\u5e95\u200b\u7684\u200b\u8fdb\u884c\u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b\uff0c\u200b\u6240\u4ee5\u200b\u662f\u200b\u5728\u200b\u6ca1\u6709\u200b\u4efb\u4f55\u200b\u6548\u7387\u200b\u526f\u4f5c\u7528\u200b\u4e0b\u200b\u5177\u6709\u200btype safety\u200b\u7684\u200b\u3002     2. <code>newtype</code>\u200b\u662f\u200bstrict\u200b\u7684\u200b\uff0c\u200b\u53ea\u8981\u200b\u5728\u200b<code>x</code>\u200b\u662f\u200bWHNF\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c<code>Money x</code>\u200b\u5c31\u662f\u200bWHNF\u3002         <code>Haskell         -- \u200b\u5982\u679c\u200b\u7528\u200bdata\uff0c\u200b\u90a3\u4e48\u200b Cents undefined\u200b\u662f\u200b\u5728\u200bWHNF\u200b\u4e2d\u200b         Prelude&gt; data Money = Cents Int         Prelude&gt; seq (Cents undefined) True         True         -- \u200b\u5982\u679c\u200b\u7528\u200bnewtype, \u200b\u90a3\u4e48\u200b Cents undefined\u200b\u4e0d\u200b\u5728\u200bWHNF\u200b\u4e2d\u200b         Prelude&gt; newtype Money = Cents Int         Prelude&gt; seq (Cents undefined) True         *** Exception: Prelude.undefined</code></p> <p>\u200b\u53ea\u8981\u200b\u662f\u200b\u80fd\u591f\u200b\u7528\u200b\u5355\u57df\u200b\u5355\u200b\u6784\u9020\u51fd\u6570\u200b\u7684\u200b\u60c5\u51b5\u200b\u5c31\u200b\u5e94\u8be5\u200b\u7528\u200b<code>newtype</code>\uff1b\u200b\u6216\u8005\u200b\u662f\u200b\u9700\u8981\u200b\u4e3a\u200b\u4e00\u4e2a\u200btype\u200b\u5b9a\u4e49\u200b\u67d0\u4e2a\u200b\u4e0d\u540c\u200b\u7684\u200btypeclass\u200b\u5b9e\u4f8b\u200b\u7684\u200b\u65f6\u5019\u200b\u3002</p> <pre><code>newtype Inverted = Inverted Int\n  deriving (Show, Eq)\n\ninstance Ord Inverted where -- \u200b\u5b9a\u4e49\u200b\u4e0d\u540c\u200b\u540d\u200b\u7684\u200bInt\u200b\u6bd4\u8f83\u200b\u65b9\u6cd5\u200b\n  compare (Inverted i) (Inverted j) = compare j i\n</code></pre>"},{"location":"Archive/Haskell/9.%20Reductionism%E8%BF%98%E5%8E%9F%E8%AE%BA.html#8","title":"8 \u200b\u5faa\u73af\u200b\u6570\u636e\u7ed3\u6784","text":"<p>\u200b\u56e0\u4e3a\u200b\u5171\u4eab\u200b\u6570\u636e\u200b\uff0c\u200b\u5faa\u73af\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\u53ef\u4ee5\u200b\u8fd9\u4e48\u200b\u5728\u200b\u5185\u5b58\u200b\u4e2d\u200b\u8868\u793a\u200b\uff0c\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u7b97\u200b\u6ca1\u6709\u200b\u4ee3\u4ef7\u200b\u4e86\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u81ea\u5df1\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u5faa\u73af\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\uff0c\u200b\u53ea\u8981\u200b\u7ed9\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b\u67d0\u4e2a\u200b\u540d\u5b57\u200b\uff0c\u200b\u7136\u540e\u200b\u5728\u200b\u503c\u200b\u4e2d\u200b\u6307\u5411\u200b\u8fd9\u4e2a\u200b\u540d\u5b57\u200b\u672c\u8eab\u200b\u3002</p> <pre><code>  code                     memory\n\nlet xs = 1:2:xs      xs -&gt; (1:) -&gt; (2:) -+\n in xs                      ^            |\n                            +------------+\n</code></pre>"},{"location":"Archive/Haskell/9.%20Reductionism%E8%BF%98%E5%8E%9F%E8%AE%BA.html#9-debugtrace","title":"9 Debug.Trace","text":"<p>\u200b\u5373\u4f7f\u200bHaskell\u200b\u662f\u200bpure\u200b\u7684\u200b\u7f16\u7a0b\u200b\u5458\u200b\uff0c\u200b\u6709\u4e9b\u200b\u65f6\u5019\u200b\u4e00\u4e9b\u200bimpurity\u200b\u8fd8\u662f\u200b\u5f88\u200b\u6709\u7528\u200b\u7684\u200b\u3002</p> <p>\u200b\u6a21\u5757\u200b<code>Debug.Trace</code>\u200b\u4e2d\u6709\u200b\u51fd\u6570\u200b<code>trace :: String -&gt; a -&gt; a</code>\uff0c\u200b\u80fd\u591f\u200b\u6df1\u5165\u200b\u770b\u200bHaskell\u200b\u7684\u200b\u4f30\u503c\u200b\u8fc7\u7a0b\u200b\u3002 \u200b\u8868\u8fbe\u5f0f\u200b<code>trace \"message\" x</code>\u200b\u5c31\u200b\u548c\u200b<code>x</code>\u200b\u4e00\u6837\u200b\uff0c\u200b\u4f46\u662f\u200b\u5728\u200b\u4f30\u503c\u200b\u7684\u200b\u65f6\u5019\u200b\u5f3a\u5236\u200b\u6253\u5370\u200b\u51fa\u200b<code>message</code>\u3002\u200b\u4f8b\u5982\u200b</p> <pre><code>Prelude&gt; import Debug.Trace\nPrelude Debug.Trace&gt; trace \"a\" True\na\nTrue\nPrelude Debug.Trace&gt; trace \"a\" False || trace \"b\" True \na\nb\nTrue\nPrelude Debug.Trace&gt; trace \"a\" True || trace \"b\" True\na\nTrue\n</code></pre> <p>\u200b\u8fd8\u6709\u200b\u5176\u4ed6\u200b\u5404\u79cd\u200b<code>trace</code>\u200b\u7684\u200b\u53d8\u79cd\u200b\uff0c\u200b\u4f8b\u5982\u200b<code>traceShowId x = trace (show x) x</code>\u3002</p>"},{"location":"Archive/Haskell/A.1.%20%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF.html","title":"\u9519\u8bef\u4fe1\u606f","text":"<p>\u200b\u672c\u7ae0\u200b\u4e2d\u200b\u5bf9\u200b\u4e00\u4e9b\u200b\u57fa\u672c\u200b\u7684\u200b\u9519\u8bef\u200b\u7c7b\u578b\u200b\u8fdb\u884c\u200b\u6ce8\u89e3\u200b\u548c\u200b\u89e3\u51b3\u200b.</p>"},{"location":"Archive/Haskell/A.1.%20%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF.html#_2","title":"\u8bed\u6cd5\u9519\u8bef","text":"<pre><code>Prelude&gt; True +\n\n&lt;interactive&gt;:10:7: error:\n    parse error (possibly incorrect indentation or mismatched brackets)\n</code></pre> <p>\u200b\u9047\u5230\u200b\u8bed\u6cd5\u200b\u6811\u200b\u65e0\u6cd5\u200b\u89e3\u6790\u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b.</p> <pre><code>Indent.hs:2:1: error: parse error on input \u2018where\u2019\n</code></pre> <p>\u200b\u7f29\u8fdb\u200b\u9519\u8bef\u200b\u3002</p>"},{"location":"Archive/Haskell/A.1.%20%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF.html#_3","title":"\u7c7b\u578b\u200b\u9519\u8bef","text":""},{"location":"Archive/Haskell/A.1.%20%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF.html#example-1","title":"Example 1","text":"<pre><code>Prelude&gt; \"string\" ++ True\n\n&lt;interactive&gt;:1:13: error:  -- \u200b\u884c\u200b\u5b9a\u4f4d\u200b\u4fe1\u606f\u200b\n    \u2022 Couldn't match expected type \u2018[Char]\u2019 with actual type \u2018Bool\u2019      -- \u200b\u9519\u8bef\u4fe1\u606f\u200b\n    \u2022 In the second argument of \u2018(++)\u2019, namely \u2018True\u2019\n      In the expression: \"string\" ++ True\n      In an equation for \u2018it\u2019: it = \"string\" ++ True\n      -- \u200b\u5177\u4f53\u4f4d\u7f6e\u200b\u5b9a\u4f4d\u200b\n</code></pre> <p>expected type<code>[char]</code>\u200b\u7c7b\u578b\u200b\u662f\u200b\u7f16\u8bd1\u5668\u200b\u671f\u671b\u200b\u7684\u200b\u7c7b\u578b\u200b,\u200b\u8fd9\u200b\u662f\u200b\u7531\u200b<code>(++)</code>\u200b\u8fd0\u7b97\u7b26\u200b\u6307\u5b9a\u200b\u7684\u200b. actual type <code>Bool</code>\u200b\u662f\u200b\u7f16\u8bd1\u5668\u200b\u627e\u5230\u200b\u7684\u200b\u7c7b\u578b\u200b,\u200b\u4e5f\u200b\u5c31\u662f\u200b\u8f93\u5165\u200b\u7684\u200b<code>True</code>.\u200b\u4e8c\u8005\u200b\u4e0d\u200b\u5339\u914d\u200b,\u200b\u56e0\u6b64\u200b\u51fa\u73b0\u200b\u4e86\u200b\u7c7b\u578b\u200b\u9519\u8bef\u200b.</p> <p>Note</p> <p>expected type\u200b\u5e76\u4e0d\u4e00\u5b9a\u200b\u603b\u662f\u200b\u5bf9\u200b\u7684\u200b,\u200b\u7279\u522b\u200b\u662f\u200b\u5f53\u200b\u7528\u6237\u200b\u5b9a\u4e49\u200b\u7684\u200b\u51fd\u6570\u200b\u6216\u200b\u8fd0\u7b97\u7b26\u200b\u6ca1\u6709\u200b\u663e\u5f0f\u200b\u7ed9\u51fa\u200b\u7c7b\u578b\u200b\u7b7e\u540d\u200b\u7684\u200b\u65f6\u5019\u200b,\u200b\u6b64\u65f6\u200b\u7f16\u8bd1\u5668\u200b\u4f1a\u200b\u8fdb\u884c\u200b\u81ea\u52a8\u200b\u63a8\u65ad\u200b,\u200b\u53ef\u80fd\u200b\u51fa\u73b0\u200b\u9519\u8bef\u200b\u7ed3\u679c\u200b.(\u200b\u56e0\u6b64\u200b\u663e\u5f0f\u200b\u7ed9\u51fa\u200b\u51fd\u6570\u200b\u7b7e\u540d\u200b\u603b\u662f\u200b\u597d\u200b\u7684\u200b.)</p> <p>\u200b\u9519\u8bef\u4fe1\u606f\u200b\u7684\u200b\u7b2c\u4e8c\u200b\u90e8\u5206\u200b\u662f\u200b\u9010\u5c42\u200b\u7ed9\u51fa\u200b\u5177\u4f53\u200b\u5b9a\u4f4d\u200b.\u200b\u6700\u540e\u200b\u4e00\u53e5\u200b<code>In an equation for \u2018it\u2019: it = \"string\" ++ True</code>\u200b\u8868\u793a\u200b\u518d\u200b\u5b9a\u4e49\u200b\u53d8\u91cf\u200b<code>it</code>\u200b\u7684\u200b\u65f6\u5019\u200b\u8868\u8fbe\u5f0f\u200b\u51fa\u73b0\u200b\u9519\u8bef\u200b,<code>it</code>\u200b\u662f\u200bGHCi\u200b\u4e2d\u200b\u5bf9\u200b\u72ec\u7acb\u200b\u8868\u8fbe\u200b\u7684\u200b\u9ed8\u8ba4\u200b\u53d8\u91cf\u540d\u200b.</p>"},{"location":"Archive/Haskell/A.1.%20%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF.html#example-2","title":"Example 2","text":"<pre><code>Prelude&gt; True + 1\n\nghci&gt; :t (+)\n(+) :: Num a =&gt; a -&gt; a -&gt; a\n\n&lt;interactive&gt;:6:1: error:\n    \u2022 No instance for (Num Bool) arising from a use of \u2018+\u2019\n    \u2022 In the expression: True + 1\n      In an equation for \u2018it\u2019: it = True + 1\n</code></pre> <p>\u200b\u5f53\u200b\u8bd5\u56fe\u200b\u5728\u200b\u4e0d\u200b\u5408\u9002\u200b\u7684\u200b\u53d8\u91cf\u200b\u4e0a\u200b\u4f7f\u7528\u200b<code>+</code>\u200b\u8fd9\u6837\u200b\u6307\u660e\u200b\u4e86\u200btype classes\u200b\u7684\u200b\u51fd\u6570\u200b\u65f6\u200b\uff0c\u200b\u5c31\u200b\u4f1a\u200b\u51fa\u73b0\u200b\u8fd9\u6837\u200b\u7684\u200b\u9519\u8bef\u200b\u3002<code>(Num Bool)</code>\u200b\u4e2d\u200b,\u200b\u524d\u9762\u200b\u7684\u200b\u7b26\u53f7\u200b\u6307\u660e\u200b\u4e86\u200b\u53c2\u6570\u200b\u7684\u200btype classes,\u200b\u540e\u9762\u200b\u7684\u200b<code>Bool</code>\u200b\u6307\u660e\u200b\u4e86\u200b\u5b9e\u9645\u200b\u7684\u200b\u7c7b\u578b\u200b.</p> <pre><code>halve :: Int -&gt; Int\nhalve x = x / 2\n\nghci&gt; :t (/)\n(/) :: Fractional a =&gt; a -&gt; a -&gt; a\n\nerror:\n    \u2022 No instance for (Fractional Int) arising from a use of \u2018/\u2019\n    \u2022 In the expression: x / 2\n      In an equation for \u2018halve\u2019: halve x = x / 2\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200b\u9519\u8bef\u200b\u4e5f\u200b\u4e00\u6837\u200b\uff0c<code>(/)</code>\u200b\u6307\u660e\u200b\u4e86\u200b<code>a</code>\u200b\u7684\u200btype classes\u200b\u5fc5\u987b\u200b\u662f\u200b<code>Fractional</code>\uff0c\u200b\u4f46\u662f\u200b\u51fd\u6570\u200b<code>halve</code>\u200b\u5374\u200b\u4f7f\u7528\u200b\u4e86\u200b\u4e00\u4e2a\u200b<code>Int</code>\u200b\u8fdb\u884c\u200b\u64cd\u4f5c\u200b\u3002</p>"},{"location":"DevOps/index.html","title":"DevOps Practice","text":""},{"location":"DevOps/GCPDevOps/1.core_infrastructure.html","title":"Google Cloud Fundamentals: Core Infrastructure","text":"<p>https://googlecloudcheatsheet.withgoogle.com/</p>"},{"location":"DevOps/GCPDevOps/1.core_infrastructure.html#1-components","title":"1. Components","text":"<p>Contents</p> <ul> <li> VM and Network in GCP</li> <li> Storage in GCP</li> <li> Container</li> <li> Application</li> </ul>"},{"location":"DevOps/GCPDevOps/1.core_infrastructure.html#2-virtual-machines-and-network","title":"2. Virtual Machines and Network","text":""},{"location":"DevOps/GCPDevOps/1.core_infrastructure.html#3-storage","title":"3. Storage","text":"<p>Take away</p> <p>Five storage products:</p> <ul> <li>Cloud Storage: general object</li> <li>Cloud SQL:  relational databases, including MySQL, PostgreSQL, and SQL Server</li> <li>Cloud Spanner: relational database service that scales horizontally</li> <li>Firestore: flexible, horizontally scalable, NoSQL cloud database for mobile, web, and server development. </li> <li>Cloud BigTable: NoSQL Big data database service.</li> </ul> <p></p>"},{"location":"DevOps/GCPDevOps/1.core_infrastructure.html#cloud-storage","title":"Cloud Storage","text":"<p>\ud83d\udd18 Use case: BLOB for online contents(video, images...)</p> <p>\ud83d\udd18 Object storage: is a computer data storage architecture that manages data as \u201cObjectives\u201d and not as a file and folder hierarchy (file storage), or as chunks of a disk (block storage).</p> <p>\ud83d\udd18 Components: Cloud Storage files are organized into buckets. Choose ideal location for a bucket is where latency is minimized.</p> <p>\ud83d\udd18 Immutability of Objectives: The storage Objectives offered by Cloud Storage are immutable. To update, either overwrite, or using versioning to keep track of previous file.</p> <p>\ud83d\udd18 ACL: IAM is sufficient in most cases, roles are inherited from project to bucket to object. For finer control, ACLs can be created with [Scope, Permission].</p> <p>\ud83d\udd18 Tiers of Storage</p> Type Use(read/modify) Frequency Standard Storage Hot data Nearline Storage 30 days Coldline Storage 90 days Archive Storage 1 year"},{"location":"DevOps/GCPDevOps/1.core_infrastructure.html#cloud-sql","title":"Cloud SQL","text":"<p>Cloud SQL includes MySQL, PostgreSQL, and SQL Server.</p> <p>\ud83d\udd18 Mundane but necessary tasks: GCP manage applying patches and updates, managing backups, and configuring replications.</p> <p>\ud83d\udd18 Location and accessibility: can be configure to near Compute Engines. Could SQ can be accessed by other google Cloud services and even external services.</p>"},{"location":"DevOps/GCPDevOps/1.core_infrastructure.html#cloud-spanner","title":"Cloud Spanner","text":"<p>\ud83d\udd18 Use cases</p> <ul> <li>A SQL relational database management system with joins and secondary indexes.</li> <li>Built-in high availability</li> <li>Strong global consistency</li> <li>High numbers of input and output operations per second.</li> </ul>"},{"location":"DevOps/GCPDevOps/1.core_infrastructure.html#firestore","title":"Firestore","text":"<p>Data is stored in documents and then organized into collections.</p> <p>\ud83d\udd18 Compare to mongodb</p> <ul> <li>MongoDB accepts query language to retrieve data, but Firestore has its own method and API calls. </li> <li>Firestore has advantage in data synchronization. The capability to update and listen to changes in the database in real-time is pretty neat when working with web/mobile applications, giving all the users the feeling they are updated all the time.</li> </ul>"},{"location":"DevOps/GCPDevOps/1.core_infrastructure.html#cloud-bigtable","title":"Cloud BigTable","text":"<p>Bigtable is designed to handle massive workloads at consistent low latency and high throughput.</p>"},{"location":"DevOps/GCPDevOps/1.core_infrastructure.html#storage-compare","title":"Storage Compare","text":""},{"location":"DevOps/GCPDevOps/1.core_infrastructure.html#4-container","title":"4. Container","text":"<p>Take Away</p> <ul> <li>Container is PaaS. </li> <li>Kubernetes is for managing and scaling containerized applications.</li> </ul>"},{"location":"DevOps/GCPDevOps/1.core_infrastructure.html#container","title":"Container","text":"<p>\ud83d\udd18 A container, is an invisible box around your code and its dependencies with limited access to its own partition of the file system and hardware.</p>"},{"location":"DevOps/GCPDevOps/1.core_infrastructure.html#kubernetes","title":"Kubernetes","text":"<p>\ud83d\udd18 Kubernetes is an open source platform for managing containerized workloads and services.  Kubernetes is a set of APIs that you can use to deploy containers on a set of nodes called a cluster.</p> <p>\ud83d\udd18 Terminal in Kubernetes</p> <ul> <li>A node represents a computing instance like a machine.</li> <li>A pod is the smallest unit in Kubernetes that you can create or deploy. It represents a running process on your cluster as either a component of your application or an entire app. Generally 1 container for 1 pod. The pod provides a unique network IP and set of ports for your containers.</li> <li>A deployment represents a group of replicas of the same pod and keeps your pods running even when the nodes they run on fail.</li> <li>A service is an abstraction which defines a logical set of pods and a policy by which to access them.</li> <li>A service group is a set of pods and provides a stable endpoint or fixed IP address for them.</li> </ul> <p>\ud83d\udd18 Structure of Kubernetes</p>"},{"location":"DevOps/GCPDevOps/1.core_infrastructure.html#gkegoogle-kubernetes-engine","title":"GKE(Google Kubernetes Engine)","text":"<p>\ud83d\udd18 GKE is a Google hosted managed Kubernetes service in the cloud.</p> <p>\ud83d\udd18 Some features GCP provides</p> <ul> <li>Load balancing for compute engine instances</li> <li>node pools to designate subsets of nodes within a cluster</li> <li>Automatic scaling of your cluster's node instance count</li> <li>Automatic upgrades for your cluster's node software</li> <li>Node auto-repair to maintain node health and availability</li> <li>Logging and monitoring with Google Cloud's operation suite </li> </ul>"},{"location":"DevOps/GCPDevOps/1.core_infrastructure.html#5-application","title":"5. Application","text":"<p>Take Away</p> <ul> <li>Cloud Run and Cloud Functions are serverless.</li> <li>Cloud Run is for application.</li> <li>Cloud Function is for a single purpose function.</li> </ul> <p>\ud83d\udd18 Cloud Run is a managed compute platform that runs stateless containers via web requests or pub/sub events.</p> <p>\ud83d\udd18 Cloud Run workflow: write code -&gt; build package -&gt; deploy. Cloud Run then starts your container on demand and dynamically scaling with requests amount.</p> <p>\ud83d\udd18 Cloud Function require no management of server or a runtime environment.</p>"},{"location":"DevOps/GCPDevOps/2.terraform.html","title":"Getting Started with Terraform for Google Cloud","text":"<p>Terraform is an open source, Infrastructure as Code tool by HashiCorp, for provisioning resources \u2013 including Google Cloud resources \u2013 with declarative configuration files.</p>"},{"location":"DevOps/GCPDevOps/2.terraform.html#1-introduction-to-terraform-for-google-cloud","title":"1. Introduction to Terraform for Google Cloud","text":"<p>\ud83d\udd18 Infrastructure as code(IaC): declare the desired end state of the infrastructure \u2013IaC handles management and provisioning.</p> <p>\ud83d\udd18 Terraform: Terraform allows infrastructure to be expressed as code in a simple, human-readable language called HashiCorp Configuration Language, or HCL. Terraform reads configuration files and provides an execution plan of changes, which can be reviewed, applied, and provisioned.</p> <p>\ud83d\udd18 IaC configuration workflow</p>"},{"location":"DevOps/GCPDevOps/2.terraform.html#2-terms-and-concepts","title":"2. Terms and Concepts","text":""},{"location":"DevOps/GCPDevOps/2.terraform.html#terraform-configuration-and-hcl","title":"Terraform configuration and HCL","text":"<ul> <li>A Terraform configuration is a complete document in the Terraform language that tells Terraform how to manage a given collection of infrastructure.</li> <li>Store in .tf file.</li> <li>Modules: A root module(root configuration file), And an optional tree for child modules.</li> <li>HashiCorp Configuration Language(HCL): a JSON-based variant. HCL includes a limited set of primitives such as <code>variables</code>, <code>resources</code>, <code>outputs</code>, and <code>modules</code>.</li> </ul> <pre><code>&lt;Block Type&gt; &lt;Block Label&gt; &lt;Block Label&gt; {\n    &lt;Identifier&gt; = &lt;Expression&gt;\n}\n</code></pre>"},{"location":"DevOps/GCPDevOps/2.terraform.html#author-phase-terms-and-concepts","title":"Author phase terms and concepts","text":"<ul> <li>Resources are code blocks that define the infrastructure components. <code>resource \"google_compute_instance\" \"vm_name\" {...}</code></li> <li> <p>Providers implement every resource type</p> <pre><code>terraform{\n   required_providers{ \n       google={ \n           source = \"hashicorp/google\",\n       }\n   }\n}\n\nprovider \"google { project = &lt;PROJECT&gt;, region=&lt;PROJECT_REGION&gt;}\n</code></pre> </li> <li> <p>Variables are used to parameterize your configuration.  define a resource attribute at run time or centrally in a file with a <code>.tfvar</code> file.</p> </li> <li> <p>Output values are a way to expose some of that configuration information.</p> <pre><code>output \"bucket_URL\"{\n    value = google_storage_bucket.mybucket.URL\n}\n</code></pre> </li> <li> <p>Terraform saves the state of resources that it manages in a state file(terraform.tfstate). Do not modify or touch this file; it\u2019s created and updated automatically.</p> </li> <li>a Terraform module is a set of Terraform configuration files in a single directory.</li> </ul>"},{"location":"DevOps/GCPDevOps/2.terraform.html#terraform-commands","title":"Terraform commands","text":"<pre><code>terraform init # a hidden directory called terraform is created inside the current working directory. It will initialize provider plugins.\nterraform plan # creates an execution plan detailing all the resources that will be created, modified, or destroyed upon executing terraform apply.\nterraform apply # executes the actions proposed in a Terraform plan, creates the resources, and establishes the dependencies.\nterraform destroy # Terraform determines the order in which things must be destroyed.\nterraform validate # validate runs checks that verify whether a configuration is syntactically valid and internally consistent\nterraform fmt #applies all formatting rules and recommended styles to assist with readability and consistency.\n</code></pre>"},{"location":"DevOps/GCPDevOps/2.terraform.html#terraform-validator","title":"Terraform validator","text":"<p>terraform validate vs terraform validator</p> <ul> <li><code>terraform validate</code> command checks grammar.</li> <li>The Terraform Validator is used to ensure that the configuration adheres to the set of constraints.   </li> </ul> <p>The Terraform validator is a tool for enforcing policy compliance as part of an infrastructure CI/CD pipeline.</p> <pre><code>gcloud beta terraform vet\n</code></pre> <p>The tool retrieves project data with Google Cloud APIs, so you can accurately validate your plan.</p>"},{"location":"DevOps/GCPDevOps/2.terraform.html#writing-iac-for-google-cloud","title":"Writing IaC for Google Cloud","text":""},{"location":"DevOps/GCPDevOps/lab1.foundational_Infrastructure_tasks.html","title":"LAB: Perform Foundational Infrastructure Tasks in Google Cloud","text":""},{"location":"DevOps/GCPDevOps/lab1.foundational_Infrastructure_tasks.html#1-cloud-functions","title":"1. Cloud Functions","text":"<p>Objects</p> <ul> <li>Create a cloud function</li> <li>Deploy and test the function</li> <li>View logs</li> </ul>"},{"location":"DevOps/GCPDevOps/lab1.foundational_Infrastructure_tasks.html#cloud-function-with-consoles","title":"Cloud function with consoles","text":"<p>\ud83d\udd18 Step1: console -&gt; Cloud Function -&gt; create function -&gt; edit setting \ud83d\udd18 Step2: write the function -&gt; deploy \ud83d\udd18 Step3: testing -&gt; write test http request -&gt; send tests \ud83d\udd18 Step4: view logging -&gt; the log history that displays in Query results</p>"},{"location":"DevOps/GCPDevOps/lab1.foundational_Infrastructure_tasks.html#cloud-function-with-command-line","title":"Cloud function with command line","text":"<p>\ud83d\udd18 Step1: create a function. This is just normal linux operation.</p> <pre><code>gcloud config set compute/region us-central1  # set the default region\nmkdir gcf_hello_world\ncd gcf_hello_world\nnano index.js\n</code></pre> <p>\ud83d\udd18 Step2: create a cloud bucket</p> <p><code>mb</code> stands for \"make bucket\". The second varibale is <code>gs://[bucket_name]</code>, here we use project id as bucket name.</p> <pre><code>gsutil mb -p $GOOGLE_CLOUD_PROJECT gs://$GOOGLE_CLOUD_PROJECT\n</code></pre> <p>\ud83d\udd18 Step3: deploy function</p> <ul> <li>use <code>gcloud functions deploy</code> to deploy function with given bucket, trigger and runtime setting.</li> <li>use <code>gcloud functions describe</code> to vie the state of function</li> </ul> <pre><code>gcloud functions deploy helloWorld \\\n--stage-bucket $GOOGLE_CLOUD_PROJECT \\\n--trigger-topic hello_world \\\n--runtime nodejs20\n\ngcloud functions describe helloWorld\n</code></pre> <p>\ud83d\udd18 Step4: test function</p> <p>use <code>gcloud functions call</code> to test function.</p> <pre><code>DATA=$(printf 'Hello World!'|base64) &amp;&amp; gcloud functions call helloWorld --data '{\"data\":\"'$DATA'\"}'\n</code></pre> <p>\ud83d\udd18 Step5: view logs</p> <p>use <code>gcloud functions logs read</code> to read the logs of a function.</p> <pre><code>gcloud functions logs read helloWorld\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab1.foundational_Infrastructure_tasks.html#2-pubsub","title":"2. Pub/Sub","text":"<p>Objects</p> <ul> <li>Set up a topic to hold data.</li> <li>Subscribe to a topic to access the data.</li> <li>Publish and then consume messages with a pull subscriber.</li> </ul>"},{"location":"DevOps/GCPDevOps/lab1.foundational_Infrastructure_tasks.html#pubsub-from-console","title":"Pub/Sub from console","text":"<p>\ud83d\udd18 Step 1 setting up pub/sub:  Go to pub/sub -&gt; create topic</p> <p>\ud83d\udd18 Step 2 add a subscription: Go to pub/sub &gt; Topics -&gt; create subscription</p> <p>\ud83d\udd18 Step 3 public a message to topic: Go to pub/sub &gt; Topics</p> <p>\ud83d\udd18 Step 4: view the message: Go to subscription -&gt; message -&gt; bulic</p>"},{"location":"DevOps/GCPDevOps/lab1.foundational_Infrastructure_tasks.html#pubsub-from-command-line","title":"Pub/Sub from command line","text":"<p>\ud83d\udd18 Step 1: setting up pub/sub</p> <pre><code>gcloud pubsub topics create myTopic\ngcloud pubsub topics create Test1\ngcloud pubsub topics create Test2\ngcloud pubsub topics list\n</code></pre> <p>\ud83d\udd18 Step 2: add a subscription</p> <pre><code>gcloud pubsub subscriptions create --topic myTopic mySubscription\ngcloud pubsub subscriptions delete myTopic\n\ngcloud pubsub topics list-subscriptions myTopic\n</code></pre> <p>\ud83d\udd18 Step 3: publish and pull a message to/from topic</p> <p>To publish a message to a topic, use <code>gcloud pubsub topics publish [topic] -- message [msg]</code>.</p> <pre><code>gcloud pubsub topics publish myTopic --message \"Hello\"\ngcloud pubsub topics publish myTopic --message \"Publisher's name is &lt;YOUR NAME&gt;\"\n</code></pre> <p>To pull a single msg, use the flowing command. Once an individual message has been outputted from a particular subscription-based pull command, you cannot access that message again with the pull command.</p> <pre><code>gcloud pubsub subscriptions pull mySubscription --auto-ack\n</code></pre> <p>\ud83d\udd18 Step 4: pulling all messages</p> <p>To pull multiple messages, use <code>pull --limit [number]</code>.</p> <pre><code>gcloud pubsub subscriptions pull mySubscription --auto-ack --limit=3\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab1.foundational_Infrastructure_tasks.html#pubsub-from-apipython","title":"Pub/Sub from API(Python)","text":"<p>\ud83d\udd18 Step 1:  Create a virtual environment</p> <p>Python virtual environments are used to isolate package installation from the system.</p> <pre><code>sudo apt-get install -y virtualenv\npython3 -m venv venv\nsource venv/bin/activate\n</code></pre> <p>\ud83d\udd18 Step 2: Install the client library</p> <pre><code>pip install --upgrade google-cloud-pubsub\ngit clone https://github.com/googleapis/python-pubsub.git\ncd python-pubsub/samples/snippets\n</code></pre> <p>\ud83d\udd18 Step 3: Create a topic</p> <pre><code>echo $GOOGLE_CLOUD_PROJECT\ncat publisher.py\npython publisher.py -h\npython publisher.py $GOOGLE_CLOUD_PROJECT create MyTopic\n</code></pre> <p>Topic is created using <code>pubsub_v1.PublisherClient().create_topic(topic_name)</code>,  <code>topic_name</code> should follow the format below.</p> <pre><code>import os\nfrom google.cloud import pubsub_v1\n\npublisher = pubsub_v1.PublisherClient()\ntopic_name = 'projects/{project_id}/topics/{topic}'.format(\n    project_id=os.getenv('GOOGLE_CLOUD_PROJECT'),\n    topic='MY_TOPIC_NAME',  # Set this to something appropriate.\n)\npublisher.create_topic(name=topic_name)\n</code></pre> <p>\ud83d\udd18 Step 4: Create a subscription</p> <pre><code>python subscriber.py $GOOGLE_CLOUD_PROJECT create MyTopic MySub\npython subscriber.py $GOOGLE_CLOUD_PROJECT list-in-project\n</code></pre> <p>Subscription is created/subscribe by these api calls.</p> <pre><code>with pubsub_v1.SubscriberClient() as subscriber:\n  subscriber.create_subscription(\n      name=subscription_name, topic=topic_name)\n  future = subscriber.subscribe(subscription_name, callback)\n</code></pre> <p>\ud83d\udd18 Step 5: Publish messages</p> <pre><code>gcloud pubsub topics publish MyTopic --message \"Hello\"\ngcloud pubsub topics publish MyTopic --message \"Publisher's name is &lt;YOUR NAME&gt;\"\ngcloud pubsub topics publish MyTopic --message \"Publisher likes to eat &lt;FOOD&gt;\"\n</code></pre> <p>Message is published using <code>pubsub_v1.PublisherClient().publish(topic_name, msg, spam)</code>.</p> <pre><code>future = publisher.publish(topic_name, b'My first message!', spam='eggs')\nfuture.result()\n</code></pre> <p>\ud83d\udd18 Step 6. View messages</p> <pre><code>python subscriber.py $GOOGLE_CLOUD_PROJECT receive MySub\n</code></pre> <p>The message can be viewed using the result of <code>subscriber.subscribe().result()</code>.</p> <pre><code> streaming_pull_future = subscriber.subscribe(subscription_path, callback=callback)\n    print(f\"Listening for messages on {subscription_path}..\\n\")\n\n    # Wrap subscriber in a 'with' block to automatically call close() when done.\n    with subscriber:\n        try:\n            # When `timeout` is not set, result() will block indefinitely,\n            # unless an exception is encountered first.\n            streaming_pull_future.result(timeout=timeout)\n        except TimeoutError:\n            streaming_pull_future.cancel()  # Trigger the shutdown.\n            streaming_pull_future.result()  # Block until the shutdown is complete.\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab2.automating_infrastructure_on_GC_terraform.html","title":"LAB: Automating Infrastructure on Google Cloud with Terraform","text":""},{"location":"DevOps/GCPDevOps/lab2.automating_infrastructure_on_GC_terraform.html#1-terraform-fundamentals","title":"1. Terraform Fundamentals","text":"<p>Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Key features: IaC, Execution plans, Resource graph, Change automation</p> <p>Objectives</p> <ul> <li>Get started with Terraform in Google Cloud.</li> <li>Install Terraform from installation binaries.</li> <li>Create a VM instance infrastructure using Terraform.</li> </ul>"},{"location":"DevOps/GCPDevOps/lab2.automating_infrastructure_on_GC_terraform.html#lab-step","title":"Lab Step","text":"<p>\ud83d\udd18 Step 1: create <code>instance.tf</code> file as following.</p> <p>It specifies creating a compute instance, naming \"terraform. \\ And for this instance, it specified its project, name, machine_type and other setting, similar to the setting in Google Cloud Console.</p> <pre><code>resource \"google_compute_instance\" \"terraform\" {\n  project      = \"qwiklabs-gcp-01-ee27324076c2\"\n  name         = \"terraform\"\n  machine_type = \"e2-medium\"\n  zone         = \"us-central1-f\"\n\n  boot_disk {\n    initialize_params {\n      image = \"debian-cloud/debian-11\"\n    }\n  }\n\n  network_interface {\n    network = \"default\"\n    access_config {\n    }\n  }\n}\n</code></pre> <p>\ud83d\udd18 Step 2: use terraform to plan</p> <p>First initialize, then plan using the .tf file.</p> <pre><code>terraform init\nterraform plan\n</code></pre> <p>The plan result is following:</p> <pre><code>terraform plan\n\nTerraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\n  + create\n\nTerraform will perform the following actions:\n\n  # google_compute_instance.terraform will be created\n  + resource \"google_compute_instance\" \"terraform\" {\n      + can_ip_forward       = false\n      + cpu_platform         = (known after apply)\n      + current_status       = (known after apply)\n      + deletion_protection  = false\n      + effective_labels     = (known after apply)\n      + guest_accelerator    = (known after apply)\n      + id                   = (known after apply)\n      + instance_id          = (known after apply)\n      + label_fingerprint    = (known after apply)\n      + machine_type         = \"e2-medium\"\n      + metadata_fingerprint = (known after apply)\n      + min_cpu_platform     = (known after apply)\n      + name                 = \"terraform\"\n      + project              = \"qwiklabs-gcp-01-ee27324076c2\"\n      + self_link            = (known after apply)\n      + tags_fingerprint     = (known after apply)\n      + terraform_labels     = (known after apply)\n      + zone                 = \"us-central1-f\"\n\n      + boot_disk {\n          + auto_delete                = true\n          + device_name                = (known after apply)\n          + disk_encryption_key_sha256 = (known after apply)\n          + kms_key_self_link          = (known after apply)\n          + mode                       = \"READ_WRITE\"\n          + source                     = (known after apply)\n\n          + initialize_params {\n              + image                  = \"debian-cloud/debian-11\"\n              + labels                 = (known after apply)\n              + provisioned_iops       = (known after apply)\n              + provisioned_throughput = (known after apply)\n              + size                   = (known after apply)\n              + type                   = (known after apply)\n            }\n        }\n\n      + network_interface {\n          + internal_ipv6_prefix_length = (known after apply)\n          + ipv6_access_type            = (known after apply)\n          + ipv6_address                = (known after apply)\n          + name                        = (known after apply)\n          + network                     = \"default\"\n          + network_ip                  = (known after apply)\n          + stack_type                  = (known after apply)\n          + subnetwork                  = (known after apply)\n          + subnetwork_project          = (known after apply)\n\n          + access_config {\n              + nat_ip       = (known after apply)\n              + network_tier = (known after apply)\n            }\n        }\n    }\n\nPlan: 1 to add, 0 to change, 0 to destroy.\n</code></pre> <p>\ud83d\udd18 Step 3: apply the change</p> <p>If the plan was created successfully, Terraform will now pause and wait for approval before proceeding. Use <code>terraform apply</code> to apply the .tf file. Inspect the state by <code>terraform show</code>.</p>"},{"location":"DevOps/GCPDevOps/lab2.automating_infrastructure_on_GC_terraform.html#2-infrastructure-as-code-with-terraform","title":"2. Infrastructure as Code with Terraform","text":"<p>Objectives</p> <ul> <li>Build, change, and destroy infrastructure with Terraform</li> <li>Create Resource Dependencies with Terraform</li> <li>Provision infrastructure with Terraform</li> </ul>"},{"location":"DevOps/GCPDevOps/lab2.automating_infrastructure_on_GC_terraform.html#lab-steps","title":"Lab Steps","text":"<p>\ud83d\udd18 Step 1: Build infrastructure</p> <pre><code>touch main.tf\n</code></pre> <p>\ud83d\udd18 Step : \ud83d\udd18 Step : \ud83d\udd18 Step : \ud83d\udd18 Step :</p>"},{"location":"DevOps/GCPDevOps/lab2.automating_infrastructure_on_GC_terraform.html#3-interact-with-terraform-modules","title":"3. Interact with Terraform Modules","text":"<p>A Terraform module is a set of Terraform configuration files in a single directory. Even a simple configuration consisting of a single directory with one or more .tf files is a module.</p> <p>Objectives</p> <ul> <li>Use a module from the Registry</li> <li>Build a module</li> </ul> <p>The structure usually like</p> <pre><code>\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 main.tf\n\u251c\u2500\u2500 variables.tf\n\u251c\u2500\u2500 outputs.tf\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab2.automating_infrastructure_on_GC_terraform.html#using-module-from-registry","title":"Using module from registry","text":"<p>\ud83d\udd18 <code>main.tf</code> contains a <code>module</code>, specified the source from terraform registry.</p> <p><code>module</code> \"test-vpc-module\" defines a Virtual Private Cloud (VPC), which will provide networking services for the rest of your infrastructure.</p> <pre><code>module \"test-vpc-module\" {\n  source       = \"terraform-google-modules/network/google\"\n  version      = \"~&gt; 6.0\"\n  project_id   = var.project_id # Replace this with your project ID\n  network_name = \"my-custom-mode-network\"\n  mtu          = 1460\n\n  subnets = [{subnet_name   = \"subnet-01\"...}, {...}, ...]\n\n}\n</code></pre> <p>\ud83d\udd18 <code>variable.tf</code> contains variables with their description, default value and so on.</p> <p>These variable can be used in other file by <code>var.variable_name</code>.</p> <pre><code>variable \"project_id\" {\n  description = \"The project ID to host the network in\"\n  default     = \"FILL IN YOUR PROJECT ID HERE\"\n}\n</code></pre> <p>\ud83d\udd18 <code>output.tf</code> contains the output value by the module, which can be accessed by referring to <code>module.&lt;MODULE NAME&gt;.&lt;OUTPUT NAME&gt;</code>.</p> <pre><code>output \"network_name\" {\n  value       = module.test-vpc-module.network_name\n  description = \"The name of the VPC being created\"\n}\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab2.automating_infrastructure_on_GC_terraform.html#define-own-module","title":"Define own module","text":"<p>Define the following file structure:</p> <pre><code>main.tf\noutputs.tf\nvariables.tf\nmodules/\n\u2514\u2500\u2500 gcs-static-website-bucket\n    \u251c\u2500\u2500 LICENSE\n    \u251c\u2500\u2500 README.md\n    \u251c\u2500\u2500 website.tf\n    \u251c\u2500\u2500 outputs.tf\n    \u2514\u2500\u2500 variables.tf\n</code></pre> <p>\ud83d\udd18 <code>modules/website.tf</code> defines the <code>resource</code></p> <pre><code>resource \"google_storage_bucket\" \"bucket\" {\n}\n</code></pre> <p>\ud83d\udd18 <code>modules/variable.tf</code> and <code>modules/output.tf</code> are similar to previous file. There is no <code>main.tf</code> file in the module.</p> <p>\ud83d\udd18 <code>main.tf</code> can use module by referring it.</p> <pre><code>module \"gcs-static-website-bucket\" {\nsource = \"./modules/gcs-static-website-bucket\"\n...\n}\n</code></pre> <p>\ud83d\udd18 <code>output.tf</code> can access to the output of the module by</p> <pre><code>output \"bucket-name\" {\n  description = \"Bucket names.\"\n  value       = \"module.gcs-static-website-bucket.bucket\"\n}\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab2.automating_infrastructure_on_GC_terraform.html#4-managing-terraform-state","title":"4. Managing Terraform State","text":"<p>State is a necessary requirement for Terraform to function. </p> <p>Objectives</p> <ul> <li>Create a local backend.</li> <li>Create a Cloud Storage backend.</li> <li>Refresh your Terraform state.</li> <li>Import a Terraform configuration.</li> <li>Manage the imported configuration with Terraform.</li> </ul> <p>Why states?</p> <ul> <li>tracking the mappings between resources and remote objects(one remote object, one resource instance)</li> <li>track metadata such as resource dependencies(delete order)</li> <li>perform improvement, terraform stores a cache of the attribute values for all resources in the state</li> <li>sync for team use</li> <li>state locking to prevent file corrupt</li> </ul>"},{"location":"DevOps/GCPDevOps/lab2.automating_infrastructure_on_GC_terraform.html#working-with-backends","title":"Working with backends","text":"<p>A backend in Terraform determines how state is loaded and how an operation such as apply is executed.</p>"},{"location":"DevOps/GCPDevOps/lab2.automating_infrastructure_on_GC_terraform.html#import-terraform-configuration","title":"Import Terraform configuration","text":""},{"location":"DevOps/GCPDevOps/lab3.implement_devops_in_google_cloud.html","title":"LAB: Implement DevOps in Google Cloud","text":""},{"location":"DevOps/GCPDevOps/lab3.implement_devops_in_google_cloud.html#1-google-cloud-source-repositories-setup","title":"1. Google Cloud Source Repositories Setup","text":"<p>Google Cloud Source Repositories provides Git version control to support collaborative development of any application or service.</p> <p>Objectives</p> <ul> <li>create a local Git repository</li> <li>add a Google Source Repository as a remote</li> </ul> <ul> <li><code>gcloud source repos create</code> creates new repository</li> <li><code>gcloud source repos clone</code> command add Google Cloud Source repository as remote origin.</li> </ul> <pre><code>gcloud source repos create REPO_DEMO\ngcloud source repos clone REPO_DEMO\n\n# normal git operations until committed a file\ngit push origin master\n\ngcloud source repos list\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab3.implement_devops_in_google_cloud.html#2-managing-deployments-using-kubernetes-engine","title":"2. Managing Deployments Using Kubernetes Engine","text":"<p>Objectives</p> <ul> <li>Practice with kubectl tool</li> <li>Create deployment yaml files</li> <li>Launch, update, and scale deployments</li> <li>Practice with updating deployments and deployment styles</li> </ul>"},{"location":"DevOps/GCPDevOps/lab3.implement_devops_in_google_cloud.html#create-deployment","title":"Create deployment","text":"<p>\ud83d\udd18 Step 1: <code>kubectl explain</code> command can tell the detail of a deployment object.</p> <pre><code>kubectl explain deployment --recursive\nkubectl explain deployment.metadata.name\n</code></pre> <p>\ud83d\udd18 Step 2: setting deployment configuration</p> <p>Update the <code>deployments/auth.yaml</code> configuration file, setting the <code>auth</code> container to use image <code>\"kelseyhightower/auth:1.0.0\"</code>.</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: auth\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: auth\n  template:\n    metadata:\n      labels:\n        app: auth\n        track: stable\n    spec:\n      containers:\n        - name: auth\n          image: \"kelseyhightower/auth:1.0.0\"\n          ports:\n            - name: http\n              containerPort: 80\n            - name: health\n              containerPort: 81\n...\n</code></pre> <p>\ud83d\udd18 Step 3: create deployment object and inspect</p> <p>Use <code>kubectl create -f deployments/auth.yaml</code> to create deployment by the configuration file. After successfully created, it can be inspected by <code>kubectl get deployments</code>.</p> <p>A <code>ReplicaSet</code> will be created for the deployment, which can be seen by <code>kubectl get replicasets</code>.</p> <p>\ud83d\udd18 Step 3: create service object</p> <pre><code>kubectl create -f services/auth.yaml\n\n# create another deployment/service set.\nkubectl create -f deployments/hello.yaml\nkubectl create -f services/hello.yaml\n\n# add secret/configmap and use it to create deployment/service\nkubectl create secret generic tls-certs --from-file tls/\nkubectl create configmap nginx-frontend-conf --from-file=nginx/frontend.conf\nkubectl create -f deployments/frontend.yaml\nkubectl create -f services/frontend.yaml\n</code></pre> <p>\ud83d\udd18 Step 5: Scale a deployment</p> <p>Use <code>kubectl scale deploy</code> to scale a deployment, the number of replicas can be specified.</p> <pre><code>kubectl scale deployment hello --replicas=5\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab3.implement_devops_in_google_cloud.html#rolling-update","title":"Rolling update","text":"<p>When a deployment is updated with a new version, it creates a new ReplicaSet and slowly increases the number of replicas in the new ReplicaSet as it decreases the replicas in the old ReplicaSet.</p> <p>\ud83d\udd18 Step 1: trigger rolling update.</p> <p>When updating deployment using <code>kubectl edit deployment</code>, the rolling update can be triggered. </p> <pre><code>kubectl edit deployment hello\nkubectl get replicaset ## see the new replicaset\n    #hello-5d9887b889      5         5         4       50s\n    #hello-64fc59fc76      0         0         0       6m6s\n\nkubectl rollout history deployment/hello ## set the rollout history\n\n    # hello\n    # deployment.apps/hello \n    # REVISION  CHANGE-CAUSE\n    # 1         &lt;none&gt;\n    # 2         &lt;none&gt;\n</code></pre> <p>\ud83d\udd18 Step 2: pause a rolling update</p> <p>Rolling update can be paused.</p> <pre><code>kubectl rollout pause deployment/hello\nkubectl rollout status deployment/hello\n</code></pre> <p>\ud83d\udd18 Step 3: resume a rolling update</p> <p>The rollout is paused which means that some pods are at the new version and some pods are at the older version. The rolling process is resumed by: </p> <pre><code>kubectl rollout resume deployment/hello\n</code></pre> <p>\ud83d\udd18 Step 4: rollback an update</p> <p><code>undo</code> command will help to rollback to last stage.</p> <pre><code>kubectl rollout undo deployment/hello\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab3.implement_devops_in_google_cloud.html#canary-deployments","title":"Canary deployments","text":"<p>Canary deployments allow you to release a change to a small subset of your users to mitigate risk associated with new releases.</p> <p>In the <code>hello-canary.yaml</code>, specified the app name as <code>hello</code> but track as <code>canary</code>. This will create another deployment <code>hello-canary</code>. But in the service, it use <code>app:hello</code> selector which will match pods in both the prod deployment and canary deployment.  </p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: hello-canary\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: hello\n  template:\n    metadata:\n      labels:\n        app: hello\n        track: canary\n        # Use ver 2.0.0 so it matches version on service selector\n        version: 2.0.0\n</code></pre> <p>If want user to stay with same deployment, specified <code>sessionAffinity</code> in the <code>service</code> file. All clients with the same IP address will have their requests sent to the same version of the hello application.</p> <pre><code>kind: Service\napiVersion: v1\nmetadata:\n  name: \"hello\"\nspec:\n  sessionAffinity: ClientIP\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab3.implement_devops_in_google_cloud.html#blue-green-deployments","title":"Blue-green deployments","text":"<p>Some time we want load balancers to point to that new version only after it has been fully deployed. </p> <p>Kubernetes achieves this by creating two separate deployments. Once the new \"green\" version is up and running, you'll switch over to using that version by updating the Service.</p> <p>Note</p> <p>When using \"blue-green\" deployments, at least 2x the resources in cluster is necessary.</p>"},{"location":"DevOps/GCPDevOps/lab3.implement_devops_in_google_cloud.html#3-kubernetes-engine-pipeline-using-cloud-build","title":"3. Kubernetes Engine Pipeline using Cloud Build","text":"<p>Objectives</p> <ul> <li>Create Kubernetes Engine clusters</li> <li>Create Cloud Source Repositories</li> <li>Trigger Cloud Build from Cloud Source Repositories</li> <li>Automate tests and publish a deployable container image via Cloud Build</li> <li>Manage resources deployed in a Kubernetes Engine cluster via Cloud Build</li> </ul>"},{"location":"DevOps/GCPDevOps/lab3.implement_devops_in_google_cloud.html#create-the-git-repositories-in-cloud-source-repositories","title":"Create the Git repositories in Cloud Source Repositories","text":"<p>\ud83d\udd18 Step 1: create two gi repositories in GC.</p> <pre><code>gcloud source repos create hello-cloudbuild-app\ngcloud source repos create hello-cloudbuild-env\n</code></pre> <p>Use this repository as a base, add <code>hello-cloudbuild-app</code> repo as its remote.</p> <pre><code>git clone https://github.com/GoogleCloudPlatform/gke-gitops-tutorial-cloudbuild hello-cloudbuild-app\n\ncd ~/hello-cloudbuild-app\n# add REGION to each yaml file\nsed -i \"s/us-central1/$REGION/g\" cloudbuild.yaml\n\ngit remote add google \"https://source.developers.google.com/p/${PROJECT_ID}/r/hello-cloudbuild-app\"\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab3.implement_devops_in_google_cloud.html#create-a-container-image-with-cloud-build","title":"Create a container image with Cloud Build","text":"<p>Using the following docker file to create a container.</p> <pre><code>FROM python:3.7-slim\nRUN pip install flask\nWORKDIR /app\nCOPY app.py /app/app.py\nENTRYPOINT [\"python\"]\nCMD [\"/app/app.py\"]\n</code></pre> <p>To build the container with Cloud Build and store it in Artifact Registry, using <code>gcloud builds</code>.</p> <pre><code>cd ~/hello-cloudbuild-app\nCOMMIT_ID=\"$(git rev-parse --short=7 HEAD)\"\ngcloud builds submit --tag=\"${REGION}-docker\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab3.implement_devops_in_google_cloud.html#create-the-continuous-integration-ci-pipeline","title":"Create the Continuous Integration (CI) pipeline","text":"<p>\ud83d\udd18 Step1: create trigger for <code>hello-cloudbuild-app</code>, the event is <code>Push to a branch</code> and the build configuration is file <code>cloudbuild.yaml</code>.</p> <p>\ud83d\udd18 Step2: trigger the event by push new content into <code>hello-cloudbuild-app</code>.</p> <pre><code>cd ~/hello-cloudbuild-app\ngit add .\ngit commit -m \"Type Any Commit Message here\"\ngit push google master\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab3.implement_devops_in_google_cloud.html#create-the-test-environment-and-cd-pipeline","title":"Create the Test Environment and CD pipeline","text":"<p>In CD process, each time a commit is pushed to the <code>candidate</code> branch of the hello-cloudbuild-env repository, the pipeline applies the new version of the manifest to the Kubernetes cluster. If successful, itcopies the manifest over to the production branch.</p> <ul> <li>candidate branch -&gt; deployment attempts</li> <li>production branch -&gt; history of the successful deployments</li> <li>rollback to any previous deployment by re-executing the corresponding build in Cloud Build</li> </ul> <p>\ud83d\udd18 Step1 : Grant Cloud Build access to GKE. IAM policy of Kubernetes Engine Developer Identity need to be added to cloudbuild.</p> <pre><code>gcloud projects add-iam-policy-binding ${PROJECT_NUMBER} \\\n--member=serviceAccount:${PROJECT_NUMBER}@cloudbuild.gserviceaccount.com \\\n--role=roles/container.developer\n</code></pre> <p>\ud83d\udd18 Step 2: create new branches production/candidate.</p> <pre><code>cd ~\ngcloud source repos clone hello-cloudbuild-env\ncd ~/hello-cloudbuild-env\ngit checkout -b production\ngit checkout -b candidate\n</code></pre> <p>Copy original cloudbuild file to <code>hello-cloudbuild-env</code> repo and commit.</p> <pre><code>cp ~/hello-cloudbuild-app/cloudbuild-delivery.yaml ~/hello-cloudbuild-env/cloudbuild.yaml\ngit add .\ngit commit -m \"Create cloudbuild.yaml for deployment\"\n</code></pre> <p>Similar to previous step, create trigger for <code>hello-cloudbuild-env</code>, set only <code>^candidate$</code> branch.</p>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html","title":"LAB: Build a Website on Google Cloud","text":""},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#1-deploy-your-website-on-cloud-run","title":"1. Deploy Your Website on Cloud Run","text":"<p>Objectives</p> <ul> <li>How to build a Docker image using Cloud Build and upload it to Artifact Registry</li> <li>How to deploy Docker images to Cloud Run</li> <li>How to manage Cloud Run deployments</li> <li>How to setup an endpoint for an application on Cloud Run</li> </ul> <p>Work flow</p> <p>Local image -&gt; Artifact Registry Repository -&gt; Cloud Build -&gt; Cloud Run</p>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#clone-the-source-repository","title":"Clone the source repository","text":"<p>The website is a existed repository, first clone it and deploy it locally.</p> <pre><code>git clone https://github.com/googlecodelabs/monolith-to-microservices.git\ncd ~/monolith-to-microservices\n./setup.sh\ncd ~/monolith-to-microservices/monolith\nnpm start\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#create-a-docker-container-with-cloud-build","title":"Create a Docker container with Cloud Build","text":"<p>First create a repository in <code>Artifact Registry</code>.</p> <p>Enable the API and submit the previous buil image to <code>Cloud Build</code>\u3002</p> <pre><code>gcloud services enable artifactregistry.googleapis.com \\\n    cloudbuild.googleapis.com \\\n    run.googleapis.com\ngcloud builds submit --tag Region-docker.pkg.dev/${GOOGLE_CLOUD_PROJECT}/monolith-demo/monolith:1.0.0\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#deploy-the-container-to-cloud-run","title":"Deploy the container to Cloud Run","text":"<p>The website has been containerized in <code>Cloud Build</code>, now use <code>Cloud Run</code> to run it.</p> <pre><code>gcloud run deploy monolith --image Region-docker.pkg.dev/${GOOGLE_CLOUD_PROJECT}/monolith-demo/monolith:1.0.0 --region Region\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#create-new-revision-with-lower-concurrency","title":"Create new revision with lower concurrency","text":"<p>When deploy the containerized image to cloud run, <code>--concurrency</code> option can be specified the exact concurrency num.</p> <pre><code>gcloud run deploy monolith --image Region-docker.pkg.dev/${GOOGLE_CLOUD_PROJECT}/monolith-demo/monolith:1.0.0 --region Region --concurrency 1\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#make-changes-to-the-website","title":"Make changes to the website","text":"<p>First make change locally </p> <pre><code>cd ~/monolith-to-microservices/react-app/src/pages/Home\nmv index.js.new index.js\ncd ~/monolith-to-microservices/react-app\nnpm run build:monolith\n</code></pre> <p>Then submit it to <code>Cloud Build</code> with tag <code>2.0.0</code>.</p> <pre><code>cd ~/monolith-to-microservices/monolith\ngcloud builds submit --tag Region-docker.pkg.dev/${GOOGLE_CLOUD_PROJECT}/monolith-demo/monolith:2.0.0\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#update-website-with-zero-downtime","title":"Update website with zero downtime","text":"<p>To update the website without interruption to the users,  Cloud Run treats each deployment as a new Revision which will first be brought online, then have traffic redirected to it.</p> <p>By default the latest revision will be assigned 100% of the inbound traffic for a service. In command its just simple <code>run deploy</code> with second version.</p> <pre><code>gcloud run deploy monolith --image Region-docker.pkg.dev/${GOOGLE_CLOUD_PROJECT}/monolith-demo/monolith:2.0.0 --region Region\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#2-hosting-a-web-app-on-google-cloud-using-compute-engine","title":"2. Hosting a Web App on Google Cloud Using Compute Engine","text":"<p>Objectives</p> <ul> <li>Create Compute Engine instances</li> <li>Create instance templates from source instances</li> <li>Create managed instance groups</li> <li>Create and test managed instance group health checks</li> <li>Create HTTP(S) Load Balancers</li> <li>Create load balancer health checks</li> <li>Use a Content Delivery Network (CDN) for Caching</li> </ul>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#create-cloud-storage-bucket","title":"Create Cloud Storage bucket","text":"<p>Use a Cloud Storage bucket to house built code as well as startup scripts.</p> <pre><code>gsutil mb gs://fancy-store-$DEVSHELL_PROJECT_ID\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#clone-source-repository","title":"Clone source repository","text":"<p>Similarly build the image locally.</p> <pre><code>git clone https://github.com/googlecodelabs/monolith-to-microservices.git\ncd ~/monolith-to-microservices\n./setup.sh\nnvm install --lts\ncd microservices\nnpm start\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#create-compute-engine-instances","title":"Create Compute Engine instances","text":"<p>\ud83d\udd18 Step 1. startup script to bucket</p> <p>A startup script will be used to instruct the instance what to do each time it is started.</p> <pre><code>#!/bin/bash\n\n# Install logging monitor. The monitor will automatically pick up logs sent to\n# syslog.\ncurl -s \"https://storage.googleapis.com/signals-agents/logging/google-fluentd-install.sh\" | bash\nservice google-fluentd restart &amp;\n\n# Install dependencies from apt\napt-get update\napt-get install -yq ca-certificates git build-essential supervisor psmisc\n\n# Install nodejs\nmkdir /opt/nodejs\ncurl https://nodejs.org/dist/v16.14.0/node-v16.14.0-linux-x64.tar.gz | tar xvzf - -C /opt/nodejs --strip-components=1\nln -s /opt/nodejs/bin/node /usr/bin/node\nln -s /opt/nodejs/bin/npm /usr/bin/npm\n\n# Get the application source code from the Google Cloud Storage bucket.\nmkdir /fancy-store\ngsutil -m cp -r gs://fancy-store-[DEVSHELL_PROJECT_ID]/monolith-to-microservices/microservices/* /fancy-store/\n\n# Install app dependencies.\ncd /fancy-store/\nnpm install\n\n# Create a nodeapp user. The application will run as this user.\nuseradd -m -d /home/nodeapp nodeapp\nchown -R nodeapp:nodeapp /opt/app\n\n# Configure supervisor to run the node app.\ncat &gt;/etc/supervisor/conf.d/node-app.conf &lt;&lt; EOF\n[program:nodeapp]\ndirectory=/fancy-store\ncommand=npm start\nautostart=true\nautorestart=true\nuser=nodeapp\nenvironment=HOME=\"/home/nodeapp\",USER=\"nodeapp\",NODE_ENV=\"production\"\nstdout_logfile=syslog\nstderr_logfile=syslog\nEOF\n\nsupervisorctl reread\nsupervisorctl update\n</code></pre> <p>Copy the startup-script.sh file and source code into bucket.</p> <pre><code>gsutil cp ~/monolith-to-microservices/startup-script.sh gs://fancy-store-$DEVSHELL_PROJECT_ID\ngsutil -m cp -r monolith-to-microservices gs://fancy-store-$DEVSHELL_PROJECT_ID/\n</code></pre> <p>\ud83d\udd18 Step 2. Deploy backend</p> <p>The first instance to be deployed will be the backend instance which will house the Orders and Products microservices. Specified the startup script with <code>--metadata</code>.</p> <pre><code>gcloud compute instances create backend \\\n    --zone=$ZONE \\\n    --machine-type=e2-standard-2 \\\n    --tags=backend \\\n   --metadata=startup-script-url=https://storage.googleapis.com/fancy-store-$DEVSHELL_PROJECT_ID/startup-script.sh\n</code></pre> <p>\ud83d\udd18 Step 3. Connect backent and frontend </p> <p>To connect the frontend and backend, first edit <code>.env</code> file in frontend, point the url to <code>external_address</code> of backend instances.</p> <pre><code>REACT_APP_ORDERS_URL=http://[BACKEND_ADDRESS]:8081/api/orders\nREACT_APP_PRODUCTS_URL=http://[BACKEND_ADDRESS]:8082/api/products\n</code></pre> <p>Then in similar step, copy frontend source code and deploy frontend instance.</p> <pre><code>gsutil -m cp -r monolith-to-microservices gs://fancy-store-$DEVSHELL_PROJECT_ID/\ngcloud compute instances create frontend \\\n    --zone=$ZONE \\\n    --machine-type=e2-standard-2 \\\n    --tags=frontend \\\n    --metadata=startup-script-url=https://storage.googleapis.com/fancy-store-$DEVSHELL_PROJECT_ID/startup-script.sh\n</code></pre> <p>\ud83d\udd18 Step 4. Configure network</p> <p>Create firewall rules to allow access to port 8080 for the frontend, and ports 8081-8082 for the backend.</p> <pre><code>gcloud compute firewall-rules create fw-fe \\\n    --allow tcp:8080 \\\n    --target-tags=frontend\ngcloud compute firewall-rules create fw-be \\\n    --allow tcp:8081-8082 \\\n    --target-tags=backend\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#create-managed-instance-groups","title":"Create managed instance groups","text":"<p>To allow the application to scale, managed instance groups will be created and will use the frontend and backend instances as Instance Templates.</p> <p>A managed instance group (MIG) contains identical instances that you can manage as a single entity in a single zone.</p> <p>\ud83d\udd18 Step 1. Create instance template from source instance</p> <p>After stopping two instances, create the template like:</p> <pre><code>gcloud compute instance-templates create fancy-fe \\\n    --source-instance-zone=$ZONE \\\n    --source-instance=frontend\ngcloud compute instance-templates create fancy-be \\\n    --source-instance-zone=$ZONE \\\n    --source-instance=backend\n</code></pre> <p>Now we can delete the <code>backend</code> vm to save resource space.</p> <pre><code>gcloud compute instances delete backend --zone=$ZONE\n</code></pre> <p>\ud83d\udd18 Step 2. Create managed instance group</p> <p>Create managed instance from group.</p> <pre><code>gcloud compute instance-groups managed create fancy-fe-mig \\\n    --zone=$ZONE \\\n    --base-instance-name fancy-fe \\\n    --size 2 \\\n    --template fancy-fe\ngcloud compute instance-groups managed create fancy-be-mig \\\n    --zone=$ZONE \\\n    --base-instance-name fancy-be \\\n    --size 2 \\\n    --template fancy-be\n</code></pre> <p>Set ports for the group</p> <pre><code>gcloud compute instance-groups set-named-ports fancy-fe-mig \\\n    --zone=$ZONE \\\n    --named-ports frontend:8080\ngcloud compute instance-groups set-named-ports fancy-be-mig \\\n    --zone=$ZONE \\\n    --named-ports orders:8081,products:8082\n</code></pre> <p>\ud83d\udd18 Step 3. Configure autohealing</p> <p>An autohealing policy relies on an application-based health check to verify that an app is responding as expected.</p> <p>Separated health checks for load balancing and for autohealing</p> <p>Health checks for load balancing can and should be more aggressive because these health checks determine whether an instance receives user traffic. </p> <p><pre><code>gcloud compute health-checks create http fancy-fe-hc \\\n    --port 8080 \\\n    --check-interval 30s \\\n    --healthy-threshold 1 \\\n    --timeout 10s \\\n    --unhealthy-threshold 3\ngcloud compute health-checks create http fancy-be-hc \\\n    --port 8081 \\\n    --request-path=/api/orders \\\n    --check-interval 30s \\\n    --healthy-threshold 1 \\\n    --timeout 10s \\\n    --unhealthy-threshold 3\n</code></pre> Create a firewall rule to allow the health check probes to connect to the microservices on ports 8080-8081.</p> <pre><code>gcloud compute firewall-rules create allow-health-check \\\n    --allow tcp:8080-8081 \\\n    --source-ranges 130.211.0.0/22,35.191.0.0/16 \\\n    --network default\n</code></pre> <p>Apply the health checks to their respective services.</p> <pre><code>gcloud compute instance-groups managed update fancy-fe-mig \\\n    --zone=$ZONE \\\n    --health-check fancy-fe-hc \\\n    --initial-delay 300\ngcloud compute instance-groups managed update fancy-be-mig \\\n    --zone=$ZONE \\\n    --health-check fancy-be-hc \\\n    --initial-delay 300\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#create-load-balancers","title":"Create load balancers","text":"<p>Load balancer use mappings to send traffic to the proper backend services based on pathing rules. This exposes a single load balanced IP for all services.</p> <p>\ud83d\udd18 Step 1. create health check for load balancer:  this will be used to determine which instances are capable of serving traffic for each service.</p> <pre><code>gcloud compute http-health-checks create fancy-fe-frontend-hc \\\n  --request-path / \\\n  --port 8080 \ngcloud compute http-health-checks create fancy-be-orders-hc \\\n  --request-path /api/orders \\\n  --port 8081\ngcloud compute http-health-checks create fancy-be-products-hc \\\n  --request-path /api/products \\\n  --port 8082\n</code></pre> <p>\ud83d\udd18 Create backend services: . The backend services will use the health checks and named ports</p> <pre><code>gcloud compute backend-services create fancy-fe-frontend \\\n  --http-health-checks fancy-fe-frontend-hc \\\n  --port-name frontend \\\n  --global\ngcloud compute backend-services create fancy-be-orders \\\n  --http-health-checks fancy-be-orders-hc \\\n  --port-name orders \\\n  --global\ngcloud compute backend-services create fancy-be-products \\\n  --http-health-checks fancy-be-products-hc \\\n  --port-name products \\\n  --global\n</code></pre> <p>\ud83d\udd18 Step 3: add load balancer to backend service</p> <pre><code>gcloud compute backend-services add-backend fancy-fe-frontend \\\n  --instance-group-zone=$ZONE \\\n  --instance-group fancy-fe-mig \\\n  --global\ngcloud compute backend-services add-backend fancy-be-orders \\\n  --instance-group-zone=$ZONE \\\n  --instance-group fancy-be-mig \\\n  --global\ngcloud compute backend-services add-backend fancy-be-products \\\n  --instance-group-zone=$ZONE \\\n  --instance-group fancy-be-mig \\\n  --global\n</code></pre> <p>\ud83d\udd18 Step 4. Create a URL map:  The URL map defines which URLs are directed to which backend services. create a proxy which ties to this URL map.</p> <pre><code>gcloud compute url-maps create fancy-map \\\n  --default-service fancy-fe-frontend\ngcloud compute url-maps add-path-matcher fancy-map \\\n   --default-service fancy-fe-frontend \\\n   --path-matcher-name orders \\\n   --path-rules \"/api/orders=fancy-be-orders,/api/products=fancy-be-products\"\ngcloud compute target-http-proxies create fancy-proxy \\\n  --url-map fancy-map\n</code></pre> <p>\ud83d\udd18 Step 4: create a global forwarding rule: public IP address which be forwarding to the proxy.</p> <pre><code>gcloud compute forwarding-rules create fancy-http-rule \\\n  --global \\\n  --target-http-proxy fancy-proxy \\\n  --ports 80\n</code></pre> <p>\ud83d\udd18 Step 5: update frontend connection: the code on the frontend to point to this new address instead of the ephemeral address used earlier that pointed to the backend instance.</p> <pre><code>REACT_APP_ORDERS_URL=http://[LB_IP]/api/orders\nREACT_APP_PRODUCTS_URL=http://[LB_IP]/api/products\n</code></pre> <p>After upload the configuration to bucket, issue a rolling restart command. </p> <pre><code>gcloud compute instance-groups managed rolling-action replace fancy-fe-mig \\\n    --zone=$ZONE \\\n    --max-unavailable 100%\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#scaling-compute-engine","title":"Scaling Compute Engine","text":"<p>Create an autoscaler on the managed instance groups that automatically adds instances when utilization is above 60% utilization, and removes instances when the load balancer is below 60% utilization.</p> <pre><code>gcloud compute instance-groups managed set-autoscaling \\\n  fancy-fe-mig \\\n  --zone=$ZONE \\\n  --max-num-replicas 2 \\\n  --target-load-balancing-utilization 0.60\ngcloud compute instance-groups managed set-autoscaling \\\n  fancy-be-mig \\\n  --zone=$ZONE \\\n  --max-num-replicas 2 \\\n  --target-load-balancing-utilization 0.60\n</code></pre> <p>\ud83d\udd18 Step 2. Enable content delivery network: it can provide caching for the frontend.</p> <p>When a user requests content from the HTTP(S) load balancer, the request arrives at a Google Front End (GFE) which first looks in the Cloud CDN cache for a response to the user's request. If the GFE finds a cached response, the GFE sends the cached response to the user. This is called a cache hit.</p> <pre><code>gcloud compute backend-services update fancy-fe-frontend \\\n    --enable-cdn --global\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#update-the-website","title":"Update the website","text":"<p>Existing instance templates are not editable. Normally for stateless machine, we only need to edit template, create new instance than redirect.</p> <pre><code>gcloud compute instance-groups managed rolling-action replace fancy-fe-mig \\\n  --zone=$ZONE \\\n  --max-unavailable=100%\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#3-deploy-scale-and-update-your-website-on-google-kubernetes-engine","title":"3. Deploy, Scale, and Update Your Website on Google Kubernetes Engine","text":"<p>Objectives</p> <ul> <li>Create a GKE cluster</li> <li>Create a Docker container</li> <li>Deploy the container to GKE</li> <li>Expose the container via a service</li> <li>Scale the container to multiple replicas</li> <li>Modify the website</li> <li>Rollout a new version with zero downtime</li> </ul>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#create-a-gke-cluster","title":"Create a GKE cluster","text":"<pre><code>gcloud services enable container.googleapis.com\ngcloud container clusters create fancy-cluster --num-nodes 3\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#clone-source-repository-and-run","title":"Clone source repository and run","text":"<p>Trivial step, clone source code and run locally.</p> <pre><code>git clone https://github.com/googlecodelabs/monolith-to-microservices.git\ncd ~/monolith-to-microservices\n./setup.sh\nnvm install --lts\ncd ~/monolith-to-microservices/monolith\nnpm start\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#create-docker-container-with-cloud-build","title":"Create Docker container with Cloud Build","text":"<p>Basically this is same step as Section2</p> <pre><code>gcloud services enable cloudbuild.googleapis.com\ncd ~/monolith-to-microservices/monolith\ngcloud builds submit --tag gcr.io/${GOOGLE_CLOUD_PROJECT}/monolith:1.0.0\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#deploy-container-to-gke","title":"Deploy container to GKE","text":"<p>Create a Deployment named monolith on your cluster with 1 replica.</p> <pre><code>kubectl create deployment monolith --image=gcr.io/${GOOGLE_CLOUD_PROJECT}/monolith:1.0.0\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#expose-gke-deployment","title":"Expose GKE deployment","text":"<p>The application must explicitly expose to traffic from the Internet via a Service resource.</p> <pre><code>kubectl expose deployment monolith --type=LoadBalancer --port 80 --target-port 8080\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#scale-gke-deployment","title":"Scale GKE deployment","text":"<p>Scale deployment up to 3 replicas</p> <pre><code>kubectl scale deployment monolith --replicas=3\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#make-changes-to-the-website-and-push","title":"Make changes to the website and push","text":"<p>Similarly to previous lab, built locally first.</p> <pre><code>cd ~/monolith-to-microservices/react-app/src/pages/Home\nmv index.js.new index.js\ncd ~/monolith-to-microservices/react-app\nnpm run build:monolith\n</code></pre> <p>Submit new built with tag <code>2.0.0</code></p> <pre><code>cd ~/monolith-to-microservices/monolith\ngcloud builds submit --tag gcr.io/${GOOGLE_CLOUD_PROJECT}/monolith:2.0.0 .\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#update-website-with-zero-downtime-with-ks8","title":"Update website with zero downtime with ks8","text":"<pre><code>kubectl set image deployment/monolith monolith=gcr.io/${GOOGLE_CLOUD_PROJECT}/monolith:2.0.0\n</code></pre> <p>Thinking</p> <p>Using k8s is so convenience compare to lab 2...</p>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#4-migrating-a-monolithic-website-to-microservices-on-google-kubernetes-engine","title":"4. Migrating a Monolithic Website to Microservices on Google Kubernetes Engine","text":""},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#build-locally-and-create-gke-cluster","title":"Build locally and create GKE cluster","text":"<p>Similar to previous steps.</p> <pre><code>cd ~\ngit clone https://github.com/googlecodelabs/monolith-to-microservices.git\ncd ~/monolith-to-microservices\n./setup.sh\ngcloud services enable container.googleapis.com\ngcloud container clusters create fancy-cluster --num-nodes 3 --machine-type=e2-standard-4\ncd ~/monolith-to-microservices\n./deploy-monolith.sh\nkubectl get service monolith\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#migrate-orders-to-a-microservice","title":"Migrate orders to a microservice","text":"<p>Now that the monolith website is running on GKE, start breaking each service into a microservice.</p> <p>\ud83d\udd18 Step 1. Create new orders microservice</p> <pre><code>cd ~/monolith-to-microservices/microservices/src/orders\ngcloud builds submit --tag gcr.io/${GOOGLE_CLOUD_PROJECT}/orders:1.0.0\nkubectl create deployment orders --image=gcr.io/${GOOGLE_CLOUD_PROJECT}/orders:1.0.0\nkubectl expose deployment orders --type=LoadBalancer --port 80 --target-port 8081\n</code></pre> <p>\ud83d\udd18 Step 2. Reconfigure the monolith</p> <p>Modify the monolith to point to the new external Orders microservice.</p> <p>When breaking down a monolith,  pieces of code are removed from a single codebase to multiple microservices and deploying them separately. </p> <pre><code>cd ~/monolith-to-microservices/react-app\nnano .env.monolith\n\n# Edit content\nREACT_APP_ORDERS_URL=http://&lt;ORDERS_IP_ADDRESS&gt;/api/orders\nREACT_APP_PRODUCTS_URL=/service/products\n\nnpm run build:monolith\n</code></pre> <p>Then create a docker container and deploy it to GKE.</p> <pre><code>cd ~/monolith-to-microservices/monolith\ngcloud builds submit --tag gcr.io/${GOOGLE_CLOUD_PROJECT}/monolith:2.0.0\nkubectl set image deployment/monolith monolith=gcr.io/${GOOGLE_CLOUD_PROJECT}/monolith:2.0.0\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#migrate-products-to-microservice","title":"Migrate Products to microservice","text":"<p>The step is similar to migrate <code>order</code></p> <pre><code>cd ~/monolith-to-microservices/microservices/src/products\ngcloud builds submit --tag gcr.io/${GOOGLE_CLOUD_PROJECT}/products:1.0.0 .\nkubectl create deployment products --image=gcr.io/${GOOGLE_CLOUD_PROJECT}/products:1.0.0\nkubectl expose deployment products --type=LoadBalancer --port 80 --target-port 8082\ncd ~/monolith-to-microservices/react-app\nnano .env.monolith\n\n## edit content\nREACT_APP_ORDERS_URL=http://&lt;ORDERS_IP_ADDRESS&gt;/api/orders\nREACT_APP_PRODUCTS_URL=/service/products\n\nnpm run build:monolith\n\n# Create Docker Container with Cloud Build\ncd ~/monolith-to-microservices/monolith\ngcloud builds submit --tag gcr.io/${GOOGLE_CLOUD_PROJECT}/monolith:3.0.0\n\n# Deploy on GKE\nkubectl set image deployment/monolith monolith=gcr.io/${GOOGLE_CLOUD_PROJECT}/monolith:3.0.0\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#migrate-frontend-to-microservice","title":"Migrate frontend to microservice","text":"<p>Follow the same procedure as the last two steps to create a new frontend microservice.</p> <pre><code>cd ~/monolith-to-microservices/react-app\ncp .env.monolith .env\nnpm run build\n\ncd ~/monolith-to-microservices/microservices/src/frontend\ngcloud builds submit --tag gcr.io/${GOOGLE_CLOUD_PROJECT}/frontend:1.0.0 .\nkubectl create deployment frontend --image=gcr.io/${GOOGLE_CLOUD_PROJECT}/frontend:1.0.0\nkubectl expose deployment frontend --type=LoadBalancer --port 80 --target-port 8080\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#5-build-a-website-on-google-cloud-challenge-lab","title":"5. Build a Website on Google Cloud: Challenge Lab","text":""},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#download-the-monolith-code-and-build-your-container","title":"Download the monolith code and build your container","text":"<pre><code>git clone https://github.com/googlecodelabs/monolith-to-microservices\n./setup.sh\nnvm install --lts\n\ncd ~/monolith-to-microservices/monolith\ngcloud services enable cloudbuild.googleapis.com\ngcloud builds submit --tag gcr.io/${GOOGLE_CLOUD_PROJECT}/fancy-monolith-164:1.0.0\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#create-a-kubernetes-cluster-and-deploy-the-application","title":"Create a kubernetes cluster and deploy the application","text":"<pre><code>gcloud services enable container.googleapis.com\ngcloud container clusters create fancy-production-342 --num-nodes 3 --region=us-west1\n\nkubectl create deployment fancy-monolith-164 --image=gcr.io/${GOOGLE_CLOUD_PROJECT}/fancy-monolith-164:1.0.0\nkubectl expose deployment fancy-monolith-164 --type=LoadBalancer --port 80 --target-port 8080\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#create-new-microservices","title":"Create new microservices","text":"<pre><code>gcloud builds submit --tag gcr.io/${GOOGLE_CLOUD_PROJECT}/fancy-products-845:1.0.0\ngcloud builds submit --tag gcr.io/${GOOGLE_CLOUD_PROJECT}/fancy-orders-794:1.0.0\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#deploy-the-new-microservices","title":"Deploy the new microservices","text":"<p>Orders Microservice</p> <pre><code>kubectl create deployment fancy-orders-794 --image=gcr.io/${GOOGLE_CLOUD_PROJECT}/fancy-orders-794:1.0.0\nkubectl expose deployment fancy-orders-794 --type=LoadBalancer --port 80 --target-port 8081\n</code></pre> <p>Products Microservice</p> <pre><code>kubectl create deployment fancy-products-845 --image=gcr.io/${GOOGLE_CLOUD_PROJECT}/fancy-products-845:1.0.0\nkubectl expose deployment fancy-products-845 --type=LoadBalancer --port 80 --target-port 8082\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#configure-and-deploy-the-frontend-microservice","title":"Configure and deploy the Frontend microservice","text":"<pre><code>cd ~/monolith-to-microservices/react-app\nnano .env\n\nREACT_APP_ORDERS_URL=http://34.83.70.232/api/orders\nREACT_APP_PRODUCTS_URL=http://34.168.63.116/api/products\n\nnpm run build\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#create-a-containerized-version-of-the-frontend-microservice","title":"Create a containerized version of the Frontend microservice","text":"<pre><code>gcloud builds submit --tag gcr.io/${GOOGLE_CLOUD_PROJECT}/fancy-frontend-161:1.0.0\n</code></pre>"},{"location":"DevOps/GCPDevOps/lab4.build_a_website.html#deploy-the-frontend-microservice","title":"Deploy the Frontend microservice","text":"<pre><code>kubectl create deployment fancy-frontend-161 --image=gcr.io/${GOOGLE_CLOUD_PROJECT}/fancy-frontend-161:1.0.0\nkubectl expose deployment fancy-frontend-161 --type=LoadBalancer --port 80 --target-port 8080\n</code></pre>"},{"location":"DevOps/GCPSec/index.html","title":"GCP: Security Engineer Learning Path","text":"<p>Personal record of the course series Security Engineer Learning Path .</p> <p>A Security Engineer develops, implements, and monitors their organization\u2019s security infrastructure to protect sensitive information against cybercrime.</p>"},{"location":"DevOps/GCPSec/1.perpare.html","title":"Preparing for Your Professional Cloud Security Engineer Journey","text":""},{"location":"DevOps/GCPSec/1.perpare.html#1-secure-identity-and-access-foundation","title":"1. Secure identity and access foundation","text":"<p>Note</p> <ul> <li> configure cloud identity</li> <li> manage service account</li> <li> manage authentication</li> <li> manage and implement authorization controls</li> <li> define their resource hierarchy. </li> </ul> Purpose Tools / Means synchronize on-premises Active Directory users and groups to Cloud Identity Google Cloud Directory Sync Minimum Access Rule create separate service accounts"},{"location":"DevOps/ML/lab1.get_started_with_TensorFlow_on_GC.html","title":"LAB: Get Started with TensorFlow on Google Cloud","text":""},{"location":"DevOps/ML/lab1.get_started_with_TensorFlow_on_GC.html#1-tensorflow-qwik-start","title":"1. TensorFlow: Qwik Start","text":""},{"location":"DevOps/ML/Tensor-Flow-on-Google-Cloud/1.introduction_on_tensorflow_ecosystem.html","title":"1. Introduction to the TensorFlow Ecosystem","text":"<p>Take Away</p> <ul> <li>TensorFlow API hierarchy</li> <li>the building blocks of tensors and operations</li> <li>write low-level TensorFlow programs</li> </ul>"},{"location":"DevOps/ML/Tensor-Flow-on-Google-Cloud/1.introduction_on_tensorflow_ecosystem.html#11-introduction-to-the-tensorflow","title":"1.1 Introduction to the TensorFlow","text":"<p>TensorFlow is an open-source, high-performance library for numerical computation, any numerical computation, not just for machine learning.</p> <p>\ud83d\udd18 TensorFlow workflow</p> <ul> <li>The way tensorflow works: create a directed graph, or a DAG, to represent the computation.</li> <li>Nodes: represent mathematical operations.</li> <li>Edges: input and the output of those mathematical operations.</li> <li>ReLU layer: reshape data, the weight is then multiplied across that array of data in a matmul, or matrix multiplication operation.</li> </ul> <p>\ud83d\udd18 What is a tensor?</p> <p>A tensor is a N-dim array of data.</p> <p>Tensors flow through the graph, hence the name TensorFlow. Use directed graph brings portability(python -&gt; different platforms).</p> <p>\ud83d\udd18 Common development pattern</p> <ul> <li>Train a TensorFlow model on the cloud.</li> <li>Take the train model and put it on a device out on the edge.</li> <li>Do predictions with the model right on the device itself offline.(smaller model, but faster response during predictions).</li> </ul>"},{"location":"DevOps/ML/Tensor-Flow-on-Google-Cloud/1.introduction_on_tensorflow_ecosystem.html#12-tensorflow-api-hierarchy","title":"1.2 TensorFlow API hierarchy","text":"<p>\ud83d\udd18 From bottom to top explain</p> <ul> <li>1st: target the different hardware platforms(transparent if you are not dealing with hardware)</li> <li>2nd: TensorFlow C++ API, write a custom TensorFlow operation(operator? mainly for ML researcher)</li> <li>3rd: Python API contains much of the numeric processing code, <code>add</code>, <code>sub</code>, <code>div</code>, <code>mul</code>.</li> <li>4th: Python modules that have high-level representation of useful neural network components.(often don't need a custom neural network model, standard is enough and even best).</li> <li>5th: high-level APIs to do distributed training, data preprocessing, the model definition, compilation and overall training.</li> </ul>"},{"location":"DevOps/ML/Tensor-Flow-on-Google-Cloud/1.introduction_on_tensorflow_ecosystem.html#13-components-of-tensorflow-tensors-and-variables","title":"1.3 Components of Tensorflow: Tensors and variables","text":"<p>Take Away</p> <ul> <li><code>tf.constant()</code> create constant tensor</li> <li><code>tf.Variable()</code> create variable tensor</li> <li><code>tf.stack()</code> stack to create higher dimension tensor</li> <li><code>tf.reshape(x,[row,col])</code> reshape a tensor with <code>row * col</code> element to new shape.</li> <li><code>y = x[:,1]</code>slice: same to numpy array, slicing n-1 dim tensor.</li> </ul> <ul> <li>Use <code>tf.constant()</code> to create a constant tensor with scalar/n-dim vector.</li> <li>Another way is to create 1-dim <code>constant</code>, then level up by <code>stack</code>.</li> <li>The core is \"shape of data\".</li> </ul> <ul> <li>Use <code>tf.Variable(i, dtype=[], name=[])</code> to create variables. variable constructor requires an initial value <code>i</code> for the variable which can be a tensor of any shape and type.</li> <li>After construction, the type and shape of the variable are fixed.</li> <li>change value by <code>assign_op</code>, because tensorflow needs to remember all the operation in order to do the reverse op in backward pass.</li> </ul>"},{"location":"DevOps/ML/Tensor-Flow-on-Google-Cloud/2.design_and_build_an_input_data_pipeline.html","title":"2. Design and Build an Input Data Pipeline","text":"<p>Take Away</p> <ul> <li>train on Large Datasets with tf.data</li> <li>work with in-memory files</li> <li>get the data ready for training</li> <li>describe embeddings</li> <li>and understand scaling data with tf</li> </ul> <p>\ud83d\udd18 ML recap</p>"},{"location":"DevOps/ML/Tensor-Flow-on-Google-Cloud/2.design_and_build_an_input_data_pipeline.html#21-training-on-large-datasets-with-tfdata-api","title":"2.1 Training on large datasets with tf.data API","text":"<p><code>tf.data</code> API to build complex input pipelines from simple reusable pieces.</p> <p>\ud83d\udd18 Two distinct ways to create a dataset</p> <ul> <li>Data source: constructs a dataset from data stored in memory or in one or more files.</li> <li>Data transformation: constructs a dataset from one or more tf.dataset objects.</li> </ul> <p>\ud83d\udd18 Dataset</p> <p><code>tf.data.Dataset</code>: create input functions for your model that load data in progressively, throttling it.</p> <p>Example:</p> <ul> <li><code>TFRecord</code>: produces a variant Tensor, representing a dataset which is stored in the corresponding Python object.</li> <li> <p><code>shuffle</code>: maintains a fixed-size buffer and uniformly randomly selects the next element from the buffer</p> <pre><code>dataset = tf.data.Dataset.range(3)\ndataset = dataset.shuffle(3, reshuffle_each_iteration=True)\ndataset = dataset.repeat(2)\n# [1, 0, 2, 1, 2, 0]\n</code></pre> </li> <li> <p><code>map</code>: user-defined function to transform dataset.</p> <pre><code>dataset = Dataset.range(1, 6)  # ==&gt; [ 1, 2, 3, 4, 5 ]\ndataset = dataset.map(lambda x: x + 1)\nlist(dataset.as_numpy_iterator())\n[2,3,4,5,6]\n</code></pre> </li> <li> <p><code>batch</code>: Combines consecutive elements of this dataset into batches.</p> <pre><code>dataset = tf.data.Dataset.range(8)\ndataset = dataset.batch(3)\nlist(dataset.as_numpy_iterator())\n[array([0,1,2]),array([3,4,5]),array([6,7])]\n</code></pre> </li> </ul>"},{"location":"DevOps/ML/Tensor-Flow-on-Google-Cloud/2.design_and_build_an_input_data_pipeline.html#22-working-in-memory-and-with-files","title":"2.2 Working in-memory and with files","text":"<p>When data used to train a model sits in-memory, we can create an input pipeline by constructing a dataset using <code>tf.data.from_tensor_slices((X,Y))</code></p> <pre><code># Slicing a tuple of 1D tensors produces tuple elements containing\n# scalar tensors.\ndataset = tf.data.Dataset.from_tensor_slices(([1, 2], [3, 4], [5, 6]))\nlist(dataset.as_numpy_iterator())\n[(1,3,5),(2,4,6)]\n</code></pre>"},{"location":"DevOps/ML/Tensor-Flow-on-Google-Cloud/2.design_and_build_an_input_data_pipeline.html#23-getting-the-data-ready-for-model-training","title":"2.3 Getting the data ready for model training","text":""},{"location":"DevOps/ML/Tensor-Flow-on-Google-Cloud/2.design_and_build_an_input_data_pipeline.html#24-embeddings","title":"2.4 Embeddings","text":""},{"location":"Leetcode/1207.%20Unique%20Number%20of%20Occurrences.html","title":"1207. Unique Number of Occurrences","text":"<p>Takeaways</p> <p>If the given data has a small range, use array instead of set/map. </p>","tags":["Easy","Hash Table","Array"]},{"location":"Leetcode/1207.%20Unique%20Number%20of%20Occurrences.html#solution-1-unordered_map-unordered_set","title":"Solution 1: unordered_map + unordered_set","text":"<p>Iterate through <code>arr</code>, use hashmap <code>m</code> to record the occurrence number of each element. Then use hashset <code>s</code> to check the uniqueness of the number of occurrence.</p> <pre><code>class Solution {\npublic:\n    bool uniqueOccurrences(vector&lt;int&gt;&amp; arr) {\n        unordered_map&lt;int,int&gt; m;\n        unordered_set&lt;int&gt; s;\n        for(auto&amp;i:arr){\n            if(m.find(i) == m.end()) m[i] =0;\n            else ++m[i];\n        }\n        for(auto [i,p]: m){\n            if(s.find(p) != s.end()) return false;\n            s.insert(p);\n        }\n        return true;\n\n    }\n};\n</code></pre>","tags":["Easy","Hash Table","Array"]},{"location":"Leetcode/1207.%20Unique%20Number%20of%20Occurrences.html#solution-2-array","title":"Solution 2: Array","text":"<p>Because of the Constraints:</p> <ul> <li>1 &lt;= arr.length &lt;= 1000</li> <li>-1000 &lt;= arr[i] &lt;= 1000</li> </ul> <p>The hashmap <code>m</code> can be replaced by an array with 2000 length. Every element is mapped to <code>j = i + 1000</code>.</p> <p>The hashset <code>s</code> can also be replaced by an array with 1001 length, because an element can occurrence at most 1001 times.</p> <pre><code>class Solution {\npublic:\n    bool uniqueOccurrences(vector&lt;int&gt;&amp; arr) {\n        int m[2000] = {0};\n        bool s[1001] = {false};\n        for(auto&amp;i:arr){\n            ++m[i+1000];\n        }\n        for(auto&amp; p: m){\n            if(p==0) continue;\n            if(s[p]) return false;\n            s[p] = true;\n        }\n        return true;\n\n    }\n};\n</code></pre>","tags":["Easy","Hash Table","Array"]},{"location":"Leetcode/134.%20Gas%20Station.html","title":"134. Gas Station","text":"","tags":["Medium","Greedy","Array"]},{"location":"Leetcode/134.%20Gas%20Station.html#solution-1-greedy","title":"Solution 1: Greedy","text":"<ul> <li>The cur can travel a circle if the total amount of gas is greater than cost. <code>int total</code> record the total difference of gas and cost.</li> <li><code>int cur</code> record the amount of gas in the car when it starts at <code>pos</code> and reached current index. If <code>cur &lt; 0</code>, the <code>pos</code> cannot be the starting point, so it is adjust to next index.</li> </ul> <pre><code>class Solution {\npublic:\n    int canCompleteCircuit(vector&lt;int&gt;&amp; gas, vector&lt;int&gt;&amp; cost) {\n        int n = gas.size();\n        int cur = 0, pos = 0, total = 0;\n        for(int i =0; i &lt; n; i++){\n            cur = cur + gas[i] - cost[i]; // when arrive (i+1) the amount of gas\n            total = total + gas[i] - cost[i];\n            if(cur &lt; 0) {\n                pos = i+1;\n                cur = 0;\n            }\n            // if(pos == -1 &amp;&amp; gas[i] - cost[i] &gt;= 0) pos = i;//(i+1)%n;\n\n        }\n\n        return total &lt; 0 ? -1 : pos;\n    }\n};\n</code></pre>","tags":["Medium","Greedy","Array"]},{"location":"Leetcode/135.%20Candy.html","title":"135. Candy","text":""},{"location":"Leetcode/230.%20Kth%20Smallest%20Element%20in%20a%20BST.html","title":"230. Kth Smallest Element in a BST","text":"","tags":["Medium","Tree","BST"]},{"location":"Leetcode/230.%20Kth%20Smallest%20Element%20in%20a%20BST.html#solution-1-dfs-in-preorder","title":"Solution 1: DFS in preorder","text":"<p>For BST, doing preorder-traversal can have a ordered list. When travel to the kth node, record it and return.</p> <pre><code>class Solution {\npublic:\n    void dfs(TreeNode* root, int&amp; k, int&amp; tar){\n        if(!root) return;\n        dfs(root -&gt; left, k, tar);\n        --k;\n        if(k == 0) {\n            tar = root -&gt; val;\n            return;\n        }\n        dfs(root -&gt; right, k, tar);\n\n    }\n    int kthSmallest(TreeNode* root, int k) {\n        int ans = 0, a = k;\n        dfs(root, a, ans);\n        return ans;\n    }\n};\n</code></pre>","tags":["Medium","Tree","BST"]},{"location":"Leetcode/380.%20Insert%20Delete%20GetRandom%20O%281%29.html","title":"380. Insert Delete GetRandom O(1)","text":"","tags":["Medium","Hash Table","Array"]},{"location":"Leetcode/380.%20Insert%20Delete%20GetRandom%20O%281%29.html#solution-1-use-unordered_set","title":"Solution 1: Use unordered_set","text":"<p>Use <code>unordered_set</code> as the base structure.</p> <ul> <li><code>insert</code> and <code>remove</code> calls <code>find</code> method to test the existence of <code>val</code>.</li> <li><code>getRandom</code> choose a random index in the range of <code>(0,size()-1)</code>, and use iterator to get the value;</li> </ul> <pre><code>class RandomizedSet {\npublic:\n    unordered_set&lt;int&gt; s;\n\n    RandomizedSet() {\n    }\n\n    bool insert(int val) {\n        if(s.find(val) == s.end()){\n            s.insert(val);\n            return true;\n        }\n        return false;\n    }\n\n    bool remove(int val) {\n        auto it = s.find(val);\n        if(it == s.end()) return false;\n        else{\n            it = s.erase(it);\n            return true;\n        }\n    }\n\n    int getRandom() {\n        int random = rand() % s.size();\n        auto it = s.begin();\n        it =  next(it, random);\n        return *it;\n    }\n};\n</code></pre>","tags":["Medium","Hash Table","Array"]},{"location":"Leetcode/380.%20Insert%20Delete%20GetRandom%20O%281%29.html#solution-2-use-unordered_map-vector","title":"Solution 2: Use unordered_map + vector","text":"<p><code>getRandom</code> function in solution 1 takes \\(o(n)\\) time because the iterator takes at most \\(n\\) times to travel to its destination. An additional <code>vector</code> is added for quicker fetch of value.</p> <p>In the following code:</p> <ul> <li><code>m</code> stores the pairs of <code>(val, i)</code>, while in the vector <code>v[i] = val</code>.</li> <li>when <code>insert</code> a new element, current index <code>i</code> is incremented by 1. New value is inserted in both <code>m</code> and <code>v</code>.</li> <li>when <code>remove</code> a existed element , the current back element of <code>v</code> is swapped with the deleted one, and the pair in <code>m</code> is updated according. </li> <li>Example: When <code>v={a,b,c}, m = {(a,0),(b,1),(c,2)}, i = 2</code>, try to remove <code>val</code> = <code>a</code> get the result of <code>v={c,b}, m = {(b,1), (c,0)}, i = 1</code>.</li> <li><code>getRandom</code> only need to choose a random value from the vector, while is done by indexing \\(\\to o(1)\\).</li> </ul> <pre><code>class RandomizedSet {\npublic:\n    unordered_map&lt;int,int&gt; m;\n    vector&lt;int&gt; v;\n    int i ;\n    RandomizedSet() {\n        i = 0;\n    }\n\n    bool insert(int val) {\n        if(m.find(val) != m.end()) return false;\n        v.push_back(val);\n        m[val] = i++;\n        return true;\n    }\n\n    bool remove(int val) {\n        if(m.find(val) == m.end()) return false;\n        auto x = v.back();\n        v[m[val]] = x;\n        v.pop_back();\n        m[x] = m[val];\n        m.erase(val);\n        i --;\n        return true;\n    }\n\n    int getRandom() {\n        return v[rand() % v.size()];\n    }\n};\n</code></pre>","tags":["Medium","Hash Table","Array"]},{"location":"Leetcode/530.%20Minimum%20Absolute%20Difference%20in%20BST.html","title":"530. Minimum Absolute Difference in BST","text":"","tags":["Easy","Tree","BST"]},{"location":"Leetcode/530.%20Minimum%20Absolute%20Difference%20in%20BST.html#solution-1-dfs-to-vector","title":"Solution 1: DFS to vector","text":"<ul> <li>Use dfs to go through the tree, and collect the result to a vector.</li> <li>Sort the vector and get the minimum difference</li> </ul> <pre><code>class Solution {\npublic:\n    void dfs(TreeNode* root, vector&lt;int&gt;&amp; v){\n        if(!root) return;\n        v.push_back(root -&gt; val);\n        dfs(root-&gt;left,v);\n        dfs(root-&gt;right, v);\n    }\n    int getMinimumDifference(TreeNode* root) {\n        vector&lt;int&gt; v;\n        dfs(root, v);\n        sort(v.begin(), v.end());\n        int minn = INT_MAX;\n        for(int i = 0; i &lt; v.size() - 1; i ++) minn = min(minn, v[i+1] - v[i]);\n        return minn;\n    }\n};\n</code></pre>","tags":["Easy","Tree","BST"]},{"location":"Leetcode/530.%20Minimum%20Absolute%20Difference%20in%20BST.html#solution-2-dfs-with-o1-space","title":"Solution 2: DFS with O(1) space","text":"<p>Solution 1 ignore the fact the the tree is a BST. If doing postorder traversal, we can get the same result of a reverse-sorted vector. Since we only need the difference of neighbor, we use <code>next</code> to record the next bigger neighbor, and <code>minn</code> to record the minimum difference.</p> <pre><code>class Solution {\npublic:\n    void dfs(TreeNode* root, int&amp; minn, int&amp; next){\n        if(!root) return;\n        dfs(root-&gt;right, minn, next);\n        minn = min(minn, next - root -&gt; val);\n        next = root -&gt; val;\n        dfs(root-&gt;left, minn, next);\n\n    }\n    int getMinimumDifference(TreeNode* root) {\n        int next = INT_MAX, minn = INT_MAX;\n        dfs(root, minn, next);\n        return minn;\n    }\n};\n</code></pre> <p>Note</p> <p>If travel in preorder traversal(left-root-right), then we need to add a <code>abs</code> operation. In preorder, if define <code>prev = INT_MAX</code>, then it cannot deal with the first node. <pre><code>void dfs(TreeNode* root, int&amp; minn, int&amp; prev){\n    if(!root) return;\n    dfs(root-&gt;left, minn, prev);\n    minn = min(minn, abs(root -&gt; val - prev));\n    prev = root -&gt; val;\n    dfs(root-&gt;right, minn, prev);\n}\n</code></pre></p>","tags":["Easy","Tree","BST"]},{"location":"Leetcode/98.%20Validate%20Binary%20Search%20Tree.html","title":"98. Validate Binary Search Tree","text":"","tags":["Medium","Tree","BST"]},{"location":"Leetcode/98.%20Validate%20Binary%20Search%20Tree.html#solution-1-dfs-with-long-long","title":"Solution 1: DFS with long long","text":"<p>For BST, doing preorder-traversal can have a ordered list. We can only compare the ordered in one direction rather than both. Every time we record the previous node and compare if it is less than next node. We need to use <code>long long</code> to deal with the edge case [-2147483648].</p> <pre><code>class Solution {\npublic:\n    bool dfs(TreeNode* root, long long &amp; prev){\n        if(!root) return true;\n        bool ans = true;\n        ans &amp;= dfs(root -&gt; left, prev);\n        if(prev &gt;= root -&gt; val) return false;\n        prev = root-&gt; val;\n        ans &amp;= dfs(root -&gt; right, prev);\n        return ans;\n    }\n    bool isValidBST(TreeNode* root) {\n        long long prev = INT_MIN;\n        prev--;\n        return dfs(root, prev);\n    }\n};\n</code></pre>","tags":["Medium","Tree","BST"]},{"location":"Leetcode/tags.html","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"},{"location":"Leetcode/tags.html#array","title":"Array","text":"<ul> <li>1207. Unique Number of Occurrences</li> <li>134. Gas Station</li> <li>380. Insert Delete GetRandom O(1)</li> </ul>"},{"location":"Leetcode/tags.html#bst","title":"BST","text":"<ul> <li>230. Kth Smallest Element in a BST</li> <li>530. Minimum Absolute Difference in BST</li> <li>98. Validate Binary Search Tree</li> </ul>"},{"location":"Leetcode/tags.html#easy","title":"Easy","text":"<ul> <li>1207. Unique Number of Occurrences</li> <li>530. Minimum Absolute Difference in BST</li> </ul>"},{"location":"Leetcode/tags.html#greedy","title":"Greedy","text":"<ul> <li>134. Gas Station</li> </ul>"},{"location":"Leetcode/tags.html#hash-table","title":"Hash Table","text":"<ul> <li>1207. Unique Number of Occurrences</li> <li>380. Insert Delete GetRandom O(1)</li> </ul>"},{"location":"Leetcode/tags.html#medium","title":"Medium","text":"<ul> <li>134. Gas Station</li> <li>230. Kth Smallest Element in a BST</li> <li>380. Insert Delete GetRandom O(1)</li> <li>98. Validate Binary Search Tree</li> </ul>"},{"location":"Leetcode/tags.html#tree","title":"Tree","text":"<ul> <li>230. Kth Smallest Element in a BST</li> <li>530. Minimum Absolute Difference in BST</li> <li>98. Validate Binary Search Tree</li> </ul>"},{"location":"Misc/index.html","title":"Better than unknown","text":"<p>This is a column for self-study. I will choose some topics of interest and spend 30 minutes every day to acquire basic understand them. If the topics </p>"},{"location":"Misc/index.html#topics","title":"Topics","text":"<ul> <li> slurm </li> <li> xterm</li> <li> jenkins</li> <li> SOAP</li> <li> redis</li> <li> qiskit</li> <li> ebpf</li> <li> ansible</li> </ul>"},{"location":"Misc/slurm.html","title":"Slurm","text":"<p>Slurm is an open source, fault-tolerant, and highly scalable cluster management and job scheduling system for large and small Linux clusters.</p>"},{"location":"Network/0.topic.html","title":"Topics in Network","text":""},{"location":"Network/0.topic.html#application-layer","title":"Application Layer","text":"<ul> <li> HTTP</li> <li> SMTP/IMAP </li> <li> DNS</li> <li> P2P</li> <li> Video Streaming</li> </ul>"},{"location":"Network/0.topic.html#transport-layer","title":"Transport Layer","text":"<p>Design principles:</p> <ul> <li> Multiplexing/Demultiplexing</li> <li> Reliable Data</li> <li> Congestion Control</li> </ul> <p>Concrete protocols:</p> <ul> <li> UDP</li> <li> TCP</li> <li> TCP:Congestion Control</li> </ul> <p>Other Topics:</p> <ul> <li> Evolution of Transport Layer Functionality(QUIC)</li> </ul>"},{"location":"Network/0.topic.html#the-network-layer","title":"The Network Layer","text":""},{"location":"Network/0.topic.html#data-plane","title":"Data Plane","text":"<ul> <li> Router</li> <li> IPv4</li> <li> IPv6</li> <li> DHCP</li> <li> NAT</li> <li> General Forwarding and SDN</li> <li> Middlebox</li> </ul>"},{"location":"Network/0.topic.html#control-plane","title":"Control plane","text":"<ul> <li> Routing algorithm</li> <li> OSPF</li> <li> BGP</li> <li> SDN control</li> <li> ICMP</li> <li> Network Manage</li> </ul>"},{"location":"Network/0.topic.html#the-link-layer","title":"The Link Layer","text":""},{"location":"Network/0.topic.html#wireless-and-mobile-network","title":"Wireless and Mobile Network","text":""},{"location":"Network/0.topic.html#security-in-network","title":"Security in Network","text":""},{"location":"Network/1.basic/1.basic_concepts.html","title":"\u57fa\u672c\u6982\u5ff5","text":""},{"location":"Network/1.basic/1.basic_concepts.html#1","title":"1. \u200b\u7f51\u7edc\u200b\u6784\u9020","text":"<ul> <li>hosts(end systems): Devices hook up to the Internet.</li> <li>Internet Service Providers (ISPs): End systems access the Internet through ISPs.(local cable/ telephone companies)</li> <li>socket interface: specifies how a program running on one end system asks the Internet infrastructure to deliver data to a specific destination program running on another end system</li> </ul>"},{"location":"Network/1.basic/1.basic_concepts.html#2-network-edge","title":"2. Network Edge","text":""},{"location":"Network/1.basic/1.basic_concepts.html#21-access-network","title":"2.1 Access Network","text":"<ul> <li>access network: the network that physically connects an end system to the first router(edge router).</li> </ul> <p>\ud83d\udd18 Home access Two most prevalent types of broadband residential access:</p> <ul> <li>digital subscriber line(DSL): local telephone company, short distance, single use</li> <li>cable: cable television company, fast, shared use</li> </ul> <p>Some other kinds:</p> <ul> <li>fiber to the home (FTTH): an optical fiber path from the CO directly to the home.</li> <li>5G fixed wireless: without cable</li> </ul> <p>\ud83d\udd18 Access in the Enterprise (and the Home)</p> <ul> <li>local area network(LAN): used to connect an end system to the edge router</li> </ul> <p>LAN Types:</p> <ul> <li>Ethernet: twisted-pair copper wire, ethernet switch</li> <li>Wifi: transmit/receive packets to/from an access point</li> </ul>"},{"location":"Network/1.basic/1.basic_concepts.html#3-network-core","title":"3. Network core","text":""},{"location":"Network/1.basic/1.basic_concepts.html#33-the-network-of-network","title":"3.3 The network of network","text":"<p>\ud83d\udd18 Network Structure Type</p> <p>\ud83d\udd35 Network structure 1: A single global transit ISP</p> <p>\ud83d\udd35 Network structure 2: Two-tier hierarchy, with global transit providers residing at the top tier and access ISPs at the bottom tier.</p> <p>\ud83d\udd35 Network structure 3: Multi-tier hierarchy, tier1 -- regional -- access</p> <p>\ud83d\udd35 Network structure 4: ecosystem\u2014consisting of access ISPs, regional ISPs, tier-1 ISPs, PoPs, multi-homing, peering, and IXPs</p> <p>Concepts Explain</p> <ol> <li>PoPs(Point of presence): a group of one or more routers (at the same location) in the provider\u2019s network where customer ISPs can connect into the provider ISP.</li> <li>multi-homes: A lower tier ISP connect to multi provider ISPs.</li> <li>peer: Same tier ISPs directly connect their networks together so that all the traffic between them passes over the direct connection rather than through upstream intermediaries.</li> <li>IXP(Internet Exchange Point): third-party company creates a meeting point where multiple ISPs can peer together.</li> </ol> <p>\ud83d\udd35 Network structure 5(today): builds on top of Network Structure 4 by adding content-provider networks.</p> <ul> <li>For example, Google's data centers distribute across the world and interconnected to Google's private network(not public network), so that they can bypass the tier-1 ISP.</li> <li>By creating its own network, a content provider not only reduces its payments to upper-tier ISPs, but also has greater control of how its services are ultimately delivered to end users.</li> </ul>"},{"location":"Network/1.basic/1.basic_concepts.html#4-delay","title":"4. Delay","text":"<p>There are four types of delay in End-to-End system:</p> <ul> <li>Processing Delay</li> <li>Queuing Delay</li> <li>Transmission Delay</li> <li>Propagation Delay</li> </ul>"},{"location":"Network/1.basic/1.basic_concepts.html#5-layers","title":"5. Layers","text":"<p>Layers (1) performing certain actions within that layer and by (2) using the services of the layer directly below it.</p> <p>A protocol layer can be implemented in software, in hardware, or in a combination of the two.</p> <p>\ud83d\udd18 These layers are:</p> <ol> <li> <p>Application layer</p> <ul> <li>provide services that are frequently required by applications</li> <li>incorporated presentation and secession layers in OSI</li> </ul> </li> <li> <p>Transport layer</p> <ul> <li>End-to-end transfer of messages</li> <li>break long messages into shorter segments</li> <li>port numbers enable multiplexing</li> <li>congestion control</li> <li>TCP, UDP</li> </ul> </li> <li> <p>Network layer</p> <ul> <li>transfer packets across multiple links</li> <li>sometimes called IP layer</li> <li>IP protocol, numerous routing protocols</li> </ul> </li> <li> <p>Link layer</p> <ul> <li>transfer frames across direct connections between 2nodes</li> <li>control, addressing and error correction</li> <li>Examples: Ethernet, WiFi, the cable access network\u2019s DOCSIS protocol, PPP, HDLC</li> </ul> </li> <li> <p>Physical layer</p> </li> <li> <p>move the individual bits within the frame from one node to the next</p> </li> <li>depend on actual transmission medium</li> </ol>"},{"location":"Network/1.basic/2.network_tools.html","title":"Network tools","text":""},{"location":"Network/1.basic/2.network_tools.html#traceroute","title":"traceroute","text":"<p>\ud83d\udd18 \u200b\u539f\u7406\u200b \u200b\u5047\u8bbe\u200b\u6e90\u200b\u548c\u200b\u76ee\u7684\u5730\u200b\u4e4b\u95f4\u200b\u5171\u6709\u200b N-1 \u200b\u4e2a\u200b\u8def\u7531\u5668\u200b\uff0c\u200b\u5219\u200b\u6e90\u200b\u53d1\u9001\u200b N \u200b\u4e2a\u200b\u5305\u200b\u3002 \u200b\u7b2c\u200b i \u200b\u4e2a\u200b\u8def\u7531\u5668\u200b\u63a5\u53d7\u200b\u5230\u200b\u7b2c\u200b i \u200b\u4e2a\u200b\u5305\u65f6\u200b\u5c06\u200b\u5176\u200b\u4e22\u5f03\u200b\uff0c\u200b\u5e76\u200b\u5411\u6e90\u200b\u56de\u590d\u200b\u6536\u5230\u200b\u4fe1\u606f\u200b\u3002 \u200b\u6e90\u200b\u8bb0\u5f55\u200b\u4e0b\u200b\uff1a\u200b\u53d1\u51fa\u200b\u65f6\u95f4\u200b\u3001\u200b\u56de\u590d\u200b\u65f6\u95f4\u200b\u3001\u200b\u56de\u590d\u200b\u8def\u7531\u5668\u200b\u7684\u200bip\u200b\u5730\u5740\u200b\u53ca\u200b\u540d\u79f0\u200b\u3002</p> <p>traceroute \u200b\u91cd\u590d\u200b\u4ee5\u4e0a\u200b\u8fc7\u7a0b\u200b 3 \u200b\u904d\u200b\uff0c\u200b\u5b9e\u9645\u4e0a\u200b\u53d1\u9001\u200b 3N \u200b\u4e2a\u200b\u5305\u200b\u3002[RFC1393]</p>"},{"location":"Network/2.application/1.basic.html","title":"Principles of Network Applications","text":""},{"location":"Network/2.application/1.basic.html#1-network-application-architectures","title":"1. Network Application Architectures","text":"Client-serverPeer-to-peer <ul> <li>clients do not directly communicate with each other</li> <li>server has a fixed, well-known IP address</li> </ul> <ul> <li>minimal (or no) reliance on dedicated servers in data centers</li> <li>the peers communicate without passing through a dedicated server</li> <li>self-scalability</li> </ul>"},{"location":"Network/2.application/1.basic.html#2-processes-communicating","title":"2. Processes Communicating","text":"<p>Process</p> <ul> <li>Def: a program is running within an end system</li> <li>Communication: </li> <li>interproces: governed by the end system\u2019s operating system</li> <li>different hosts: across computer network</li> </ul> <p>Client &amp; Server</p> <ul> <li>client: The process that initiates the communication (that is, initially contacts the other process at the beginning of the session) is labeled as the client</li> <li>server: The process that waits to be contacted to begin the session is the server.</li> </ul> <p>Interface Between the Process and Network</p> <ul> <li>socket: A process sends messages into, and receives messages from, the network through a software interface called a socket.<ul> <li>the interface between the application layer and the transport layer within a host</li> </ul> </li> <li>API: Socket is also referred to as the Application Programming Interface (API) between the application and the network.   </li> </ul> <p>Addressing</p> <p>Sockets identify target receiving process by:</p> <ol> <li>IP address(Network layer)</li> <li>port number(Transport layer)</li> </ol>"},{"location":"Network/2.application/1.basic.html#3-transport-service-available-to-applications","title":"3. Transport Service Available to Applications","text":"<p>There are different transport layer protocols, providing four abilities to applications:</p> <p>reliable data transfer</p> <ul> <li>Guarantee that the data sent by one end of the application is delivered correctly and completely to the other end of the application.</li> <li>\u2705 loss-tolerant applications: media applications like audio/video, can tolerate some amount of data loss.</li> </ul> <p>throughput</p> <ul> <li>Guarantee available throughput at some specified rate ( \\(r\\) bits/sec).</li> <li>\u274c bandwidth-sensitive applications: multimedia applications, use adaptive coding techniques to encode digitized voice or video at a rate that matches the currently available throughput.</li> <li>\u2705 elastic applications: electronic mail, file transfer, and Web transfers and so on.</li> </ul> <p>timing</p> <ul> <li>Guarantee messages receives within how much time.</li> <li>E.g: \\(k\\) bits in \\(t\\) sec (for real-time apps)</li> </ul> <p>security</p> <ul> <li>confidentiality</li> <li>integrity</li> </ul>"},{"location":"Network/2.application/1.basic.html#4-transport-services-provided-by-the-internet","title":"4. Transport Services Provided by the Internet","text":"<p>The Internet provide 2 transport layer protocols: UDP and TCP.</p> <p>TCP</p> <ul> <li>Connection-oriented service</li> <li>handshaking</li> <li>TCP connection between the sockets of two processes. </li> <li>Reliable data transfer service</li> <li>deliver all data sent without error and in the proper order</li> <li>congestion-control</li> </ul> <p>UDP</p> <ul> <li>minimal services</li> <li>unreliable data transfer</li> </ul> <p>Services Not Provided by Internet Transport Protocols</p> <ul> <li>Encryption: TLS</li> <li>throughput or timing guarantees</li> </ul>"},{"location":"Network/2.application/1.basic.html#5-application-layer-protocols","title":"5. Application-Layer Protocols","text":"<p>An application-layer protocol defines:</p> <ul> <li>The types of messages exchanged<ul> <li>e.g: request messages and response messages</li> </ul> </li> <li>The syntax of the various message types<ul> <li>e.g: the fields in the message and how the fields are delineated</li> </ul> </li> <li>The semantics of the fields<ul> <li>the meaning of the information in the fields</li> </ul> </li> <li>Rules for determining when and how a process sends messages and responds to messages</li> </ul>"},{"location":"Network/2.application/2.HTTP.html","title":"The Web and HTTP","text":""},{"location":"Network/2.application/2.HTTP.html#1-http-overview","title":"1. HTTP overview","text":"<p>Web Concepts</p> <ul> <li>web page: a series of objects</li> <li>object: a file which is addressable by a simlple url</li> <li>an HTML file, a JPEG image, a Javascrpt file, a CCS style sheet file, or a video clip</li> <li>usually a base HTML file, several referenced objects</li> <li>URL: 2 components: the hostname of the server that houses the object and the object\u2019s path name.</li> </ul> <p>HTTP defines how Web clients request Web pages from Web servers and how servers transfer Web pages to clients.</p> <p>HTTP</p> <ul> <li>lying protocols: TCP(data integrity)</li> <li>stateless: no any state information about  clients</li> <li>client-server architecture</li> <li>history<ul> <li>HTTP/1.0, 1990s, [RFC 1945]</li> <li>HTTP/1.1, 2020, [RFC 7230]</li> <li>HTTP/2,   now,  [RFC 7540]</li> </ul> </li> </ul>"},{"location":"Network/2.application/2.HTTP.html#2-non-persistent-and-persistent-connections","title":"2. Non-Persistent and Persistent Connections","text":"<p>The series of requests may be made</p> <ul> <li>back-to-back</li> <li>periodically at regular intervals</li> <li>intermittently</li> </ul> <p>So designer must decide to use either  </p> <ul> <li>non-persistent connections: each request/response pair be sent over a separate TCP connection</li> <li>persistent connections(default): all of the requests and their corresponding responses be sent over the same TCP connection?</li> </ul>"},{"location":"Network/2.application/2.HTTP.html#21-non-persistent-connections","title":"2.1 non-persistent connections","text":"<p>Def: each TCP connection is closed after the server sends the object.(aka: 1 request 1 response)</p> <ol> <li>client initiates a TCP connection (port 80), get corresponding sockets at both client and server</li> <li>client sends an HTTP request (includes path name)</li> <li>server receives the request, processes, retrieves object from storage, encapsulates and sends back in a HTTP response.</li> <li>server tells client to close TCP connection.</li> <li>client terminate TCP connection, extracts the files.</li> </ol> <p>HTTP has nothing to do with how a Web page is interpreted by a client.</p>"},{"location":"Network/2.application/2.HTTP.html#22-persistent-connections","title":"2.2 persistent connections","text":"<ol> <li>the server leaves the TCP connection open after sending a response</li> <li>an entire Web page can be sent over a single persistent TCP connection.</li> <li>These requests for objects can be made back-to-back, without waiting for replies to pending requests (pipelining).</li> <li>HTTP server closes a connection when it isn\u2019t used for a certain time (a configurable timeout interval)</li> </ol>"},{"location":"Network/2.application/2.HTTP.html#3-http-message-format","title":"3. HTTP Message Format","text":"<p> general format of HTTP</p> <p>Both request and response consist of: <pre><code>general message = { start-line }\n                  { *message -header CRLF } &lt;-(0 or more)\n                  { CRLF }\n                  { message body } &lt;-(optional)\n</code></pre></p>"},{"location":"Network/2.application/2.HTTP.html#31-request-message","title":"3.1 request message","text":"<p>An HTTP request message is wriiten in ordinary ASCII text:</p> <pre><code>GET /somedir/page.html HTTP/1.1\nHost: www.someschool.edu\nConnection: close\nUser-agent: Mozilla/5.0\nAccept-language: fr\n</code></pre> <ol> <li>request line: <code>{ method | URL | HTTP version }</code><ul> <li><code>method</code>: GET(majority), POST, HEAD, PUT, and DELETE</li> </ul> </li> <li>header line: key-value<ul> <li><code>Host: www.someschool.edu</code>, specifies the host on which the object resides</li> <li><code>Connection: close</code>, telling the server to use non-persistent connections</li> <li><code>User-agent: Mozilla/5.0</code>, a Firefox browser</li> <li><code>Accept-language: fr</code>, a French version</li> </ul> </li> </ol> <p>request methods</p> <ul> <li><code>GET</code> method is used when the browser requests an object, with the requested object identified in the URL field.The <code>entity body</code> is empty.</li> <li><code>POST</code> method usually used when user fill out a form. The user is still requesting a Web page from the server, but the specific contents of the Web page depend on what the user entered into <code>entity body</code> fields.</li> <li><code>HEAD</code> method is similar to <code>GET</code>, just leaves out objects.</li> <li><code>PUT</code> method is often used in conjunction with Web publishing tools.</li> <li><code>DELETE</code> method allows a user, or an application, to delete an object on a Web server.</li> </ul>"},{"location":"Network/2.application/2.HTTP.html#32-response-message","title":"3.2 response message","text":"<pre><code>HTTP/1.1 200 OK\nConnection: close\nDate: Tue, 18 Aug 2015 15:44:04 GMT\nServer: Apache/2.2.3 (CentOS)\nLast-Modified: Tue, 18 Aug 2015 15:11:03 GMT\nContent-Length: 6821\nContent-Type: text/html\n(data data data data data ...)\n</code></pre> <ol> <li>status line: <code>{ protocol version | status code | corresponding status message }</code></li> <li>header lines<ul> <li><code>Connection: close</code>, server will close connection</li> <li><code>Date: Tue, ..</code>, response create time</li> <li><code>Server: Apache/2.2.3 (CentOS)</code>, the message was generated by an Apache Web server, analogous to the <code>User-agent</code></li> <li><code>Last-Modified: Tue, ...</code>, indicates the time and date when the object was created or last modified.</li> <li><code>Content-Length/Type</code>, number of bytes in the object, file type.</li> </ul> </li> <li>entity body<ul> <li><code>(data data data data data ...)</code>, that is the meat, the requested object itself.</li> </ul> </li> </ol> <p>status code</p> <ul> <li><code>1xx</code>: informational - Request received, continuing</li> <li><code>2xx</code>: success<ul> <li><code>200 OK</code>: Request succeeded and the information is returned in the response.</li> </ul> </li> <li><code>3xx</code>: redirection<ul> <li><code>301 Moved Permanently</code>: Requested object has been permanently moved; the new URL is specified in Location header of the response message. The client software will automatically retrieve the new URL.</li> </ul> </li> <li><code>4xx</code>: client error<ul> <li><code>400 Bad Request</code>: This is a generic error code indicating that the request could not be understood by the server.</li> <li><code>404 Not Found</code>: The requested document does not exist on this server.</li> </ul> </li> <li><code>5xx</code>: Server error<ul> <li><code>505 HTTP Version Not Supported</code>: The requested HTTP protocol version is not supported by the server.</li> </ul> </li> </ul>"},{"location":"Network/2.application/2.HTTP.html#4-cookies","title":"4. Cookies","text":"<p>Cookies, defined in [RFC 6265], allow sites to keep track of users.</p> <p>cookie technology has four components:</p> <ol> <li>a cookie header line in the HTTP response message</li> <li>a cookie header line in the HTTP request message</li> <li>a cookie file kept on the user\u2019s end system and managed by the user\u2019s browser</li> <li>a back-end database at the Web site.</li> </ol>"},{"location":"Network/2.application/2.HTTP.html#5-web-caching","title":"5. Web Caching","text":"<p>A Web cache\u2014also called a proxy server\u2014is a network entity that satisfies HTTP requests on the behalf of an origin Web server. They have own disk storage to copies of recently requested objects.</p> <p>Client requests to cache first. Only when cache doesn't have the object, it request from origin server (and store the copies).</p> <p>A cache is both a server and a client at the same time.</p> <p>\u2705 Web caching advantages</p> <ol> <li>reduce the response time for a client request( high-speed connection between the client and the cache)</li> <li>reduce traffic on an institution\u2019s access link to the Internet.</li> </ol> <p>Web caching problem: the copy of an object residing in the cache may be stale. HTTP has a mechanism that allows a cache to verify that its objects are up to date. This mechanism is called the conditional GET [RFC 7232].</p> <ul> <li>the request message uses the GET method</li> <li>the request message includes an <code>If-Modified-Since</code>: header line</li> </ul> <p>The cache stores the last-modified date along with the object. Next time retrieval, cahce performs an up-to-date check. Web server's  response like</p> <pre><code>HTTP/1.1 304 Not Modified\nDate: Sat, 10 Oct 2015 15:39:29\nServer: Apache/1.3.0 (Unix)\n(empty entity body)\n</code></pre> <p><code>304 Not Modified</code> in the status line, which tells the cache that it can go ahead and forward its (the proxy cache\u2019s) cached copy of the object to the requesting browser.</p>"},{"location":"Network/2.application/2.HTTP.html#6-http2","title":"6. HTTP/2","text":"<p>Goals for HTTP/2 are 1 web page, 1 TCP connection: </p> <ul> <li>to reduce perceived latency by enabling request response multiplexing over a single TCP connection</li> <li>provide request prioritization and server push</li> <li>provide efficient compression of HTTP header fields.</li> </ul> <p>Main change is how the data is formatted and transported between the client and server.</p> <p>\u274c Head of Line (HOL) blocking problem</p> <ul> <li>Large object will block network, take a long time to pass through the bottleneck link. So while the small objects are delayed as they wait behind.</li> </ul>"},{"location":"Network/2.application/2.HTTP.html#61-http2-framing","title":"6.1 HTTP/2 Framing","text":"<p>The HTTP/2 solution for HOL blocking is to break each message into small frames, and interleave(\u200b\u4ea4\u53c9\u200b) the request and response messages on the same TCP connection.</p> <p>The framing is done by the framing sub-layer of the HTTP/2 protocol. </p> <ul> <li>The header field of the response becomes one frame.</li> <li>The body of the message is broken down into one for more additional frames.</li> </ul>"},{"location":"Network/2.application/2.HTTP.html#62-response-message-prioritization-and-server-pushing","title":"6.2 Response Message Prioritization and Server Pushing","text":"<p>\ud83d\udd18 Prioritization</p> <p>When a client sends concurrent requests to a server, it can prioritize the responses it is requesting by assigning a weight between 1 and 256 to each message.The higher number indicates higher priority.</p> <p>Server can </p> <ul> <li>send first the frames for the responses with the highest priority.</li> <li>states each message\u2019s dependency on other messages by specifying the ID of the message on which it depends.</li> </ul> <p>\ud83d\udd18 Pushing</p> <p>In addition to the response to the original request, the server can push additional objects to the client, before receiving explicit requests for these objects.</p> <p>-&gt; Because HTML base page indicates the objects.</p>"},{"location":"Network/2.application/2.HTTP.html#63-http3","title":"6.3 HTTP/3","text":"<p>HTTP/3 is yet a new HTTP protocol that is designed to operate over QUIC.</p> <p>Features:</p> <ul> <li>message multiplexing (interleaving)</li> <li>per-stream</li> <li>flow control</li> <li>low-latency connection establishment</li> </ul>"},{"location":"Network/2.application/3.Email.html","title":"Email","text":"<p>Email is an asynchronous communication medium. </p> <p>Three major components: </p> <ul> <li>user agents</li> <li>mail server</li> <li>the Simple Mail Transfer Protocol (SMTP).</li> </ul>"},{"location":"Network/2.application/3.Email.html#1-smtp","title":"1. SMTP","text":"<p>SMTP is the principal application-layer protocol for Internet electronic mail, relying on TCP(persistent connections).</p> <p>SMTP transfers messages from senders\u2019 mail servers to the recipients\u2019 mail servers.</p> <p>basic operation of SMTP</p> <ol> <li>A invokes user agent, provide B address, composes a message, and instructs the user agent to send the message.</li> <li>A's user agent sends the message to her mail server, where it is placed in a message queue.</li> <li>A's SMTP server sees the message and opens a TCP connection to B's SMTP server.</li> <li>SMTP handshaking. A's SMTP server sends message to TCP connection.</li> <li>B's mail server then places the message in B's mailbox.</li> <li>B invokes his user agent to read the message at his convenience. </li> </ol>"},{"location":"Network/2.application/3.Email.html#11-how-smtp-transfers-a-message","title":"1.1 How SMTP transfers a message?","text":"<ol> <li>Client SMTP (running on the sending mail server host) has TCP establish a connection to port 25 at the server SMTP (running on the receiving mail server host).</li> <li>Handshaking: the SMTP client indicates the e-mail address of the sender and recipient.</li> <li>Client sends the message. Repeats step 3 over the same TCP connection if it has other messages to send to the server.</li> <li>Client instructs TCP to close the connection.</li> </ol> <p>SMTP commands</p> <p>HELO, MAIL FROM, RCPT TO, DATA, CRLF.CRLF, and QUIT</p>"},{"location":"Network/2.application/3.Email.html#2-mail-formats","title":"2. Mail Formats","text":"<p>Every header must have a <code>From:</code> header line and a <code>To:</code> header line; a header may include a <code>Subject:</code> header line as well as other optional header lines.</p> <pre><code>From: alice@crepes.fr\nTo: bob@hamburger.edu\nSubject: Searching for the meaning of life.\n &lt;!-- 1 blank line --&gt;\n message body\n</code></pre> <p>These header lines are different from the SMTP commands.</p>"},{"location":"Network/2.application/3.Email.html#3-mail-access-protocols","title":"3. Mail Access Protocols","text":"<p>A typical user runs a user agent on the local host but accesses its mailbox stored an always-on shared mail server.</p> <p>Two step SMTP approach</p> <p>agent <code>-(SMTP)-&gt;</code> mail server <code>-(SMTP)-&gt;</code> mail server<code>-(HTTP/IMAP)-&gt;</code> agent - Without relaying through Alice\u2019s mail server, Alice\u2019s user agent doesn\u2019t have any recourse to an unreachable destination mail server. - Alice\u2019s mail server can repeatedly try to send the message to Bob\u2019s mail server.</p> <p>Both the HTTP and IMAP(Internet Mail Access Protocol) approaches allow Bob to manage folders, maintained in Bob\u2019s mail server.</p>"},{"location":"Network/2.application/4.DNS.html","title":"DNS","text":"<p>Hostname \u2014such as www.facebook.com, www.google.com\u2014are mnemonic and are therefore appreciated by humans.</p> <p>But hostname provide little information about the location within the Internet of the host. Hosts are also identified by so-called IP addresses (full location information).</p>"},{"location":"Network/2.application/4.DNS.html#1services-provided-by-dns","title":"1.Services Provided by DNS","text":"<p>Domain name system (DNS) is the dictionary service of Internet. It is</p> <ol> <li>a distributed database implemented in a hierarchy of DNS servers</li> <li>an application-layer protocol that allows hosts to query the distributed database</li> </ol> <p>The DNS protocol runs over UDP and uses port 53.</p> <p>DNS adds an additional delay, but the desired IP address is often cached in a \u201cnearby\u201d DNS server, which helps to reduce DNS network traffic as well as the average DNS delay.</p> <p>DNS service</p> <ol> <li>Host aliasing: DNS can be invoked by an application to obtain the canonical hostname for a supplied alias hostname as well as the IP address of the host.</li> <li>Mail server aliasing</li> <li>Load distribution: load distribution among replicated servers. The DNS database contains a set of IP addresses relying to one hostname. When it responds to client, it rotates the order, so the traffic are distributed. </li> </ol>"},{"location":"Network/2.application/4.DNS.html#2how-dns-works","title":"2.How DNS Works","text":"<p>From the perspective of users, DNS is a black box providing a simple translation service.</p> <p>But in fact, the black box that implements the service is complex, consisting of a large number of DNS servers distributed around the globe, as well as an application-layer protocol that specifies how the DNS servers and querying hosts communicate.</p>"},{"location":"Network/2.application/4.DNS.html#21-a-distributed-hierarchical-database","title":"2.1 A Distributed, Hierarchical Database","text":"<p>DNS uses a large number of servers, organized in a hierarchical fashion and distributed around the world.</p> <p>three classes of DNS servers</p> <ul> <li>root DNS servers<ul> <li>1707 instances(in 2023.6.22) , are copies of 13 different root servers, managed by 12 different organizations</li> </ul> </li> <li>top-level domain (TLD) DNS servers<ul> <li>top-level domains such as <code>com, org, net, edu, and gov</code></li> <li>country top-level domains such as <code>uk, fr, ca, and jp</code></li> <li>maintain by companies like Verisign(<code>com,net,cc</code>),educause(<code>edu</code>)</li> </ul> </li> <li>authoritative DNS servers<ul> <li>Every organization with publicly accessible hosts on the Internet must provide publicly accessible DNS records that map the names of those hosts to IP addresses.</li> <li>implement own authoritative DNS server or pay to have these records stored in an authoritative DNS server</li> </ul> </li> </ul> <ul> <li>local DNS server<ul> <li>A local DNS server does not strictly belong to the hierarchy</li> <li>Each ISP has a local DNS server</li> <li>When a host connects to an ISP, the ISP provides the host with the IP addresses of its local DNS servers(through DHCP), forwarding the query into the DNS server hierarchy. </li> </ul> </li> </ul> <p>recursive and iterative queries</p> <ul> <li>iterative: upper server return message to the client, the client makes a second call. (2-7)</li> <li>recursive: chain call, only return the final message(1,8)</li> <li>Normally, the query from the requesting host to the local DNS server is recursive, and the remaining queries are iterative. </li> </ul>"},{"location":"Network/2.application/4.DNS.html#22-dns-caching","title":"2.2 DNS Caching","text":"<p>In a query chain, when a DNS server receives a DNS reply, it can cache the mapping in its local memory.</p> <p>Because of caching, root servers are bypassed for all but a very small fraction of DNS queries.</p>"},{"location":"Network/2.application/4.DNS.html#3-dns-records-and-messages","title":"3. DNS Records and Messages","text":"<p>resource records (RRs)</p> <ul> <li>four tuple: <code>(Name, Value, Type, TTL)</code></li> <li><code>TTL</code> is the time to live of the resource record; it determines when a resource should be removed from a cache.</li> </ul> <ul> <li><code>Type=A</code><ul> <li><code>Name</code> is a hostname, <code>Value</code> is the IP address</li> <li><code>(relay1.bar.foo.com, 145.37.93.126, A)</code></li> </ul> </li> <li><code>Type=NS</code><ul> <li><code>Name</code> is a domain (such as foo.com) and <code>Value</code> is the hostname of an authoritative DNS server that knows how to obtain the IP addresses for hosts in the domain</li> <li><code>(foo.com, dns.foo.com, NS)</code></li> </ul> </li> <li><code>Type=CNAME</code><ul> <li><code>Value</code> is a canonical hostname for the alias hostname <code>Name</code>.</li> <li><code>(foo.com, relay1.bar.foo.com, CNAME)</code></li> </ul> </li> <li><code>Type=MX</code><ul> <li><code>Value</code> is the <code>canonical name</code> of a mail server that has an alias hostname <code>Name</code>.</li> <li><code>(foo.com, mail.bar.foo.com, MX)</code></li> </ul> </li> </ul>"},{"location":"Network/2.application/4.DNS.html#31-dns-messages","title":"3.1 DNS Messages","text":"<p>These are the only two kinds of DNS messages. Furthermore, both query and reply messages have the same format.</p> <ul> <li>header section(12 bytes)<ul> <li>identification(16 bit): pair reply - query</li> <li>flag: reply(1)/query(0) -- authoritative -- recursion-desired -- recursion-available</li> </ul> </li> <li>question section<ul> <li>a name field that contains the name that is being queried.</li> <li>a type field that indicates the type of question being asked about the name.</li> </ul> </li> <li>answer section<ul> <li>contains the RRs for the name that was originally queried.</li> </ul> </li> <li>authority section<ul> <li>contains records of other authoritative servers.</li> </ul> </li> <li>additional section<ul> <li>contains other helpful records. eg. canonical hostname</li> </ul> </li> </ul> <p>nslookup program</p> <ul> <li>can send a DNS query message directly from the host </li> </ul>"},{"location":"Network/2.application/4.DNS.html#32-inserting-records-into-the-dns-database","title":"3.2 Inserting Records into the DNS Database","text":"<p>Step of insert</p> <ol> <li>register in registrar</li> <li>provide the registrar with the names and IP addresses of your primary and secondary authoritative DNS servers</li> <li>registrar make sure that a Type NS and a Type A record are entered into the TLD com servers.</li> <li>you make sure that the Type A resource record for your Web server and the Type MX resource record for your mail server are entered into your authoritative DNS servers.</li> </ol> <p>A registrar is a commercial entity that verifies the uniqueness of the domain name, enters the domain name into the DNS database, and collects a small fee from you for its services.</p> <p>A complete list of accredited registrars is available at internic.</p>"},{"location":"Network/2.application/5.P2P.html","title":"Peer-to-Peer","text":""},{"location":"Network/2.application/5.P2P.html#1-scalability-of-p2p-architectures","title":"1. Scalability of P2P Architectures","text":"<p>Assume that:</p> <ul> <li>server/client upload rate \\(u_s/u_i\\)</li> <li>server/client download rate \\(d_s/d_i\\)</li> <li>file size \\(F\\)</li> <li>client number \\(N\\)</li> </ul> <p>In Client-Sever architecture, theyhe time to distribute the file is bound by server upload time and client download time:</p> \\[D_{cs} \\ge \\max\\big\\{\\frac{NF}{u_s},\\frac{F}{d_{min}}\\big\\}\\] <p>In P2P architecture, when a peer receives some file data, it can use its own upload capacity to redistribute the data to other peers.</p> \\[D_{P2P}\\ge \\big\\{\\frac{F}{u_s},\\frac{F}{d_{min}}, \\frac{NF}{u_s + \\sum_{i=1}^{N}u_i} \\big\\}\\]"},{"location":"Network/2.application/5.P2P.html#2-bittorrent","title":"2. BitTorrent","text":"<p>A Torrent means the collection of all peers joint in a particular file distribution.</p> <p>Peers in a torrent download equal-size chunks of the file from one another, with a typical chunk size of 256 KBytes. Any peer can leaves a torrent with or without enough trunks. </p> <p>Each torrent has an infrastructure node called a tracker.</p> <ul> <li>Alice registers itself and inform to track that it is still in torrent.</li> <li>Tracker randomly selects a subset of peers, and send their IP addresses to Alice. They form a TCP connection, which is called neighboring peers.(Since peers may leave, the neighbor are fluctuated.)</li> <li>Alice can ask for trunks from her neighbor.</li> <li>rarest first:  Alice will first asks for the chunks that have the fewest repeated copies among her neighbors.</li> <li>trading algorithm: Alice gives priority to the neighbors that are currently supplying her data at the highest rate.</li> </ul>"},{"location":"Network/2.application/6.video.html","title":"Video streaming and Content Distribution Network","text":""},{"location":"Network/2.application/6.video.html#1-internet-video","title":"1. Internet Video","text":"<p>A video is a sequence of images, typically being displayed at a constant rate.</p> <p>Today\u2019s off-the-shelf compression algorithms can compress a video to essentially any bit rate desired.</p>"},{"location":"Network/2.application/6.video.html#2-http-streaming-and-dash","title":"2. HTTP Streaming and DASH","text":"<p>In HTTP streaming, the video is simply stored at an HTTP server as an ordinary file with a specific URL. User gets video by HTTP <code>GET</code>, and use a buffer to receive HTTP data, then reform to video.</p> <p>Problem in same video stream</p> <p>\u2753 In HTTP Streaming, clients have different bandwidth but the video data are same.</p> <p>Solution: DASH.</p> <p>DASH</p> <p>In dynamic Adaptive Streaming over HTTP(DASH), video is encoded into several different versions, with each version having a different bit rate and, correspondingly, a different quality level.</p> <p>With DASH, each video version is stored in the HTTP server, each with a different URL.</p> <p>The HTTP server also has a manifest file, which provides a URL for each version along with its bit rate.</p>"},{"location":"Network/2.application/6.video.html#3-content-distribution-networks","title":"3. Content Distribution Networks","text":"<p>Problem in HTTP Streaming</p> <p>\u2753freezing delay: the end-to-end throughput below the video consumption rate.  \u2753hot video: transfer multiple times, waste of bandwidth, pay more to ISP. \u2753availability: single data center represents a single point of failure</p> <p>Content Distribution Networks (CDNs)</p> <p>A CDN manages servers in multiple geographically distributed locations, stores copies of the videos (and other types of Web content, including documents, images, and audio) in its servers, and attempts to direct each user request to a CDN location that will provide the best user experience.</p> <ul> <li>private CDN: google CDN for YouTube</li> <li>third-party CDN</li> </ul> <p>CDNs have two server placement philosophies:</p> <ul> <li>Enter Deep: deploying server clusters in access network of ISPs. The goal is to get closer to user. The challenge is how to maintain and manage the clusters.</li> <li>Bring Home: building large clusters at a smaller number (for example, tens) of sites(typically IXPs). lower maintenance and management overhead, but higher delay and lower throughput.</li> </ul> <p>CDN's tasks: </p> <ul> <li>(1) determine a suitable CDN server cluster for that client at that time  -&gt;3.2</li> <li>(2) redirect the client\u2019s request to a server in that cluster -&gt;3.1</li> </ul>"},{"location":"Network/2.application/6.video.html#31-cdn-operation","title":"3.1 CDN Operation","text":"<p>CDN's operation steps:</p> <ol> <li>Users clicks video url, send a DNS request.</li> <li>Local DNS Server relays the DNS query to an authoritative DNS server.</li> <li>Instead of returning an IP address, the authoritative DNS server returns a hostname in CDN\u2019s domain.</li> <li>The user\u2019s LDNS then sends a second query for the hostname. </li> <li>CDN's DNS system eventually returns the IP addresses of a content server.</li> <li>The LDNS forwards the IP address of the content-serving CDN node to the user\u2019s host. Client establishes a direct TCP connection for video.</li> </ol>"},{"location":"Network/2.application/6.video.html#32-cluster-selection-strategies","title":"3.2 Cluster Selection Strategies","text":"<p>cluster selection strategy</p> <p>a mechanism for dynamically directing clients to a server cluster or a data center within the CDN.</p> <ul> <li>geographically closest: each LDNS IP address is mapped to a geographic location, CNS choose the geographically closest cluster.     \u2753If user configures to use remote LDNS, the geographically closest method will lose efficiency.</li> <li>periodic real-time measurements: send probes(ping, DNS) to measure delay and loss performance between their clusters and clients     \u2753many LDNSs are configured to not respond to such probes</li> </ul>"},{"location":"Network/2.application/6.video.html#4-case-studies-netflix-and-youtube","title":"4. Case Studies: Netflix and YouTube","text":""},{"location":"Network/2.application/6.video.html#41-netflix","title":"4.1 Netflix","text":"<p>Netflix video distribution has two major components: the Amazon cloud and its own private CDN infrastructure.</p> <ul> <li>Content ingestion: Ingest and process the movie, upload to Amazon cloud.</li> <li>Content processing: Create many different formats for each movie, suitable for a diverse array of client video players.</li> <li>Uploading versions to its CDN</li> </ul>"},{"location":"Network/2.application/6.video.html#42-youtube","title":"4.2 YouTube","text":"<p>Google uses its own private CDN to distribute YouTube videos, and has installed server clusters in many hundreds of different IXP and ISP locations.</p> <p>Google uses pull caching, as described in Section 2.2.5, and DNS redirect, as described in Section 2.6.3.</p> <p>YouTube does not employ adaptive streaming (such as DASH), but instead requires the user to manually select a version.</p>"},{"location":"Network/2.application/7.socket_programming.html","title":"Socket Programming: Creating Network Applications","text":"<p>network applications types:</p> <ol> <li>open: specified in RFC.</li> <li>proprietary: an application-layer protocol that has not been openly published in an RFC or elsewhere.</li> </ol> <p>In <code>UDP</code> programming, there is no connection. Every time client's address is attached to its messages.  </p> <pre><code>message, clientAddress = serverSocket.recvfrom(2048)\n</code></pre> <p>In <code>TCP</code> programming, server needs to specify the connection numbers.</p> <pre><code>serverSocket.listen(1)\n</code></pre> <p>And it needs to <code>accept</code> a new connection, forms a new <code>socket</code>. Every next operation should works in the new socket.</p> <pre><code>connectionSocket, clientAddress = serverSocket.accept()\n# accept(), creating a TCP connection between the client\u2019s clientSocket and the server's connectionSocket.\nmessage = connectionSocket.recv(2048)\n</code></pre>"},{"location":"Network/3.transport/1.basic.html","title":"Overview of transport layer","text":"<p>The aim of transport layer:</p> <ul> <li>Implemented in the end-systems, not routers.</li> <li>Provide for logical communication between application processes, which means the ignorance of any physical infrastructure.</li> <li>Convert the application-layer messages it receives from a sending application process into transport-layer packets(or transport-layer segments).</li> </ul>"},{"location":"Network/3.transport/1.basic.html#1-relationship-between-transport-and-network-layers","title":"1. Relationship Between Transport and Network Layers","text":"<ul> <li>Network:   logical communication between hosts, often provide some guarantee services.</li> <li>Transport: logical communication between processes, transport-layer protocols live in the end systems. Intermediate routers have nothing to do with it.</li> </ul>"},{"location":"Network/3.transport/1.basic.html#2-overview-of-the-transport-layer-in-the-internet","title":"2. Overview of the Transport Layer in the Internet","text":"<p>The most fundamental responsibility: extend host-to-host delivery to process-to-process delivery, which is called transport-layer multiplexing and demultiplexing.</p> <ul> <li>TCP(Transport Control Protocol): reliable</li> <li>UDP(User Datagram Protocol): unreliable</li> </ul>"},{"location":"Network/3.transport/2.multiplexing.html","title":"Multiplexing and Demultiplexing","text":"<p>A multiplexing/demultiplexing service is needed for all computer networks. The service requires (1) that sockets have unique ids, and (2) that each segment have special fields that indicate the socket to which the segment is to be delivered.</p> <ul> <li>Multiplexing: gathering data chunks at the source host from different sockets, encapsulating each data chunk with header information to create segments, and passing the segments to the network layer.<ul> <li>from socket get data chunks-&gt; multiplexing -&gt; network layer</li> </ul> </li> <li>Demultiplexing: delivering the data in a transport-layer segment to the correct socket.<ul> <li>from newtork layer -&gt; demultiplexing -&gt; socket</li> </ul> </li> </ul> <p>The source port number field and the destination port number field are identifiers of socket.</p> <ul> <li>16-bit number, ranging from 0 to 65535</li> <li>0 to 1023 are called well-known port numbers and are restricted</li> </ul> <p>## 1. Connectionless Multiplexing and Demultiplexing(UDP)\\</p> <pre><code>clientSocket = socket(AF_INET, SOCK_DGRAM)\n</code></pre> <p>When a UDP socket is created, a unique port number(1024 to 65535) is assigned automatically.</p> <p>The port number can also manully specified.</p> <pre><code>clientSocket.bind((\u2019\u2019, 19157))\n</code></pre> <p>UDP socket is fully identified by a two-tuple consist ing of a <code>(destination IP address, destination port number)</code>.</p>"},{"location":"Network/3.transport/2.multiplexing.html#2-connection-oriented-multiplexing-and-demultiplexingtcp","title":"2. Connection-Oriented Multiplexing and Demultiplexing(TCP)","text":"<p>TCP socket is identified by a four-tuple: <code>(source IP address, source port number, destination IP address, destination port number)</code></p>"},{"location":"Network/3.transport/2.multiplexing.html#3-web-servers-and-tcp","title":"3. Web Servers and TCP","text":"<p>High-performing Web servers often use only one process, and create a new thread with a new connection socket for each new client connection.</p>"},{"location":"Network/3.transport/3.UDP.html","title":"Connectionless Transport: UDP","text":"<p>UDP is a no-frills, bare-bones transport protocol, only provide a multiplexing/demultiplexing service in order to pass data between the network layer and the correct application-level process.</p> <p>UDP advantages</p> <ul> <li>Finer application-level control over what data is sent, and when.</li> <li>No connection establishment delay.</li> <li>No connection state, servers are easier to support many more active clients.</li> <li>Small packet header overhead, 20 bytes for TCP, 8 bytes for UDP.</li> </ul> <p>\u274c But he lack of congestion control in UDP can result in high loss rates between a UDP sender and receiver, and the crowding out of TCP sessions.</p>"},{"location":"Network/3.transport/3.UDP.html#1udp-segment-structure","title":"1.UDP Segment Structure","text":"<p>The UDP header has only four fields, each consisting of two bytes.</p> <ul> <li><code>length</code>: the number of bytes in the UDP segment (header plus data).</li> <li><code>checksum</code>: calculated over a few of the fields in the IP header and UDP segment.</li> </ul>"},{"location":"Network/3.transport/3.UDP.html#2-udp-checksum","title":"2. UDP Checksum","text":"<p>The checksum is used to determine whether bits within the UDP segment have been altered.</p> <p>checksum process</p> <ul> <li>Sender: sum of all the 16-bit words in the segment, with any overflow encountered during the sum being wrapped around.</li> <li>Receiver: all four 16-bit words are added, including the checksum. Result should be 1111111111111111.</li> </ul> <p>Why UDP has checksum when link layer provide similar thing?</p> <ul> <li>there is no guarantee that all the links between source and destination provide error checking.</li> <li>bit errors could be introduced when a segment is stored in a router\u2019s memory</li> </ul> <p>Warning</p> <p>Checksum can only provide a weak protection. It is designed to detect possible transit error, not carefully designed one.</p>"},{"location":"Network/3.transport/4.reliable-data.html","title":"Principles of Reliable Data Transfer","text":"<p>Main task: How to transfer reliable data(no packet loss, no bit error, in order, etc.) when the layer below are unreliable.</p>"},{"location":"Network/3.transport/4.reliable-data.html#1-building-a-reliable-data-transfer-protocol","title":"1. Building a Reliable Data Transfer Protocol","text":""},{"location":"Network/3.transport/4.reliable-data.html#11-rdt-over-a-perfectly-reliable-channel-rdt10","title":"1.1 RDT over a Perfectly Reliable Channel: rdt1.0","text":"<p>The underlying channal is completely reliable. So in rdt1.0, sender and receiver are simply send/read message to/from the underlying layer.</p> <p>rdt1.0</p> <ul> <li>The FSM(finite-state machine) is     </li> <li>no difference between a unit of data and a packet</li> <li>receiver side need not provide feedback.</li> </ul>"},{"location":"Network/3.transport/4.reliable-data.html#12-rdt-over-a-channel-with-bit-errors-rdt20","title":"1.2 RDT over a Channel with Bit Errors: rdt2.0","text":"<p>The bits in a packet may be corrupted. It requires some control message including positive/negative acknowledgement.</p> <p>In a computer network setting, reliable data transfer protocols based on such retransmission are known as ARQ (Automatic Repeat reQuest) protocols.</p> <p>ARQ (Automatic Repeat reQuest) protocols</p> <ul> <li>reliable data transfer protocols based on such retransmission are known as ARQ.</li> <li>Requires 3 capabilities:<ul> <li>Error detection: by redundant bits</li> <li>Receiver feedback: explicit ACK and NAK message</li> <li>Retransmission</li> </ul> </li> </ul> <p>rdt2.0</p> <ul> <li>FSM state:     </li> <li>stop-and-wait protocols</li> <li>\u274c ACK or NAK packet could be corrupted!</li> </ul> <p>A simple and common solution to this corrupted problem is to add a new field. In this case a sequence number field, and for rdt2.0's stop-and-wait scenario, 1-bit seq is enough.</p> <p>rdt2.1</p> <ul> <li>FSM state:      </li> </ul>"},{"location":"Network/3.transport/4.reliable-data.html#13-rdt-over-a-lossy-channel-with-bit-errors-rdt30","title":"1.3 RDT over a Lossy Channel with Bit Errors: rdt3.0","text":"<p>The underlying channel can lose packets as well, a not-uncommon event in today\u2019s computer networks.</p> <p>\u2754how to detect packet loss? \u2754what to do when packet loss occurs?</p> <p>\u2747\ufe0f Solution: Sender picks a certain time which packets are likely loss if receiver doesn't respond. Sender waits until countdown timer passed, then retransmits.</p> <p>\u2754 What about duplicate packets?</p> <p>\u2747\ufe0f Solution: Same as RDT2.1, make sequence numbers and drop same packet.</p> <p>rdt3.0</p> <ul> <li>FSM state:     </li> <li>Packet sequence numbers alternate between 0 and 1, protocol rdt3.0 sometimes known as the alternating-bit protocol.</li> </ul>"},{"location":"Network/3.transport/4.reliable-data.html#2-pipelined-reliable-data-transfer-protocols","title":"2. Pipelined Reliable Data Transfer Protocols","text":"<p>\u274c rdt3.0: slow performance because stop-and-wait.</p> <p>\u2747\ufe0f Solution: pipelining. rather than operate in a stop-and-wait manner, the sender is allowed to send multiple packets without waiting for acknowledgments.</p> <p>Pipelining consequences(or things that protocol needs to change):</p> <ul> <li>Increased SEQ number: multiple packets, unique number.</li> <li>Both side buffer: to hold correctly received packets.</li> <li>Error recovery method: Go-Back-N and ]selective repeat.</li> </ul>"},{"location":"Network/3.transport/4.reliable-data.html#3go-back-n-gbn","title":"3.Go-Back-N (GBN)","text":"<p>Go-Back-N (GBN) protocol\uff1a</p> <ul> <li>the sender is allowed to transmit multiple packets (when available) without waiting for an acknowledgment</li> <li>is constrained to have no more than some maximum allowable number \\(N\\), of unacknowledged packets in the pipeline.</li> <li>known as sliding-window protocol, \\(N\\) is the window size.</li> </ul> <p>GBN explain</p> <ul> <li><code>base</code>: the sequence number of the oldest unacknowledged packet</li> <li> <p><code>nextseqnum</code>: the smallest unused sequence number </p> </li> <li> <p><code>[0,base)</code>, have sent, have ack</p> </li> <li><code>[base,nextseqnum)</code>, have sent, no ack</li> <li><code>[nextseqnum,base + N)</code>, no sent, can be sent immediately</li> <li><code>[base+N,...)</code>, can not be sent</li> </ul> <p>The window slides forward over the sequence number space.</p> <p>SEQ number are in the ring of size \\(2^k\\), in TCP, \\(k = 32\\).</p> <p>Sender's FSM:</p> <p>Receiver's FSM:</p> <p>The GBN sender must respond to three types of events:</p> <ol> <li>Invocation from above: check whether the windows are full, send, buffer or return the message</li> <li>Receipt of an ACK: SEQ number is cumulative acknowledgment. When received ana ACK, timer restarts.</li> <li>Timeout: retransmit all window messages.</li> </ol>"},{"location":"Network/3.transport/4.reliable-data.html#4selective-repeat-sr","title":"4.Selective Repeat (SR)","text":"<p>\u2754GBN performance problem: A single packet error can thus cause GBN to retransmit a large number of packets.</p> <p>That brings to selective-repeat protocols which avoid unnecessary retransmissions by having the sender retransmit only those packets that it suspects were received in error at received.</p> <ul> <li>each packet must now have its own logical timer</li> <li>The SR receiver will acknowledge a correctly received packet whether or not it is in order. If the packets are out-of-order, they will be buffered.</li> <li>The sender will have already received ACKs for some of the packets in the window. If the packet\u2019s sequence number is equal to send_base, the window base is moved forward to the unacknowledged packet with the smallest sequence number.</li> </ul> <p>For SR protocols, this means that the sender and receiver windows will not always coincide.</p> <p>The window size must be less than or equal to half the size of the sequence number space for SR protocols.</p>"},{"location":"Network/3.transport/5.TCP.html","title":"Connection-Oriented Transport: TCP","text":""},{"location":"Network/3.transport/5.TCP.html#1-the-tcp-connection","title":"1. The TCP Connection","text":"<ul> <li>connection-oriented</li> <li>full-duplex service</li> <li>point-to-point</li> <li>three-way handshake</li> </ul>"},{"location":"Network/3.transport/5.TCP.html#2-tcp-segment-structure","title":"2. TCP Segment Structure","text":"<ul> <li><code>Seq num</code>: The first transmitted byte index in whole message, started from a random number.</li> <li><code>Ack num</code>: The <code>Seq num</code> the next byte receiver expected to receive from sender.</li> </ul>"},{"location":"Network/3.transport/5.TCP.html#3-round-trip-time-estimation-and-timeout","title":"3. Round-Trip Time Estimation and Timeout","text":"<ul> <li>timeout/retransmit mechanism</li> <li>round-trip time (RTT)</li> </ul> <p>\u2754 How to decide timeout?</p>"},{"location":"Network/3.transport/5.TCP.html#31-estimating-the-round-trip-time","title":"3.1 Estimating the Round-Trip Time","text":"<p><code>SampleRTT</code>: the amount of time between when the segment is sent and the acknowledgement is received.</p> <p>Most TCP implementation only estimate <code>SampleRTT</code> once and use that value.</p> <p>TCP maintains an average, called <code>EstimatedRTT</code>, of the <code>SampleRTT</code> values. Upon obtaining a new SampleRTT, TCP updates <code>EstimatedRTT</code> according to the following formula:</p> <pre><code>EstimatedRTT = (1 \u2013 \u03b1) * EstimatedRTT + \u03b1 * SampleRTT\n</code></pre> <p>This average method is called exponential weighted moving average (EWMA), because each <code>SampleRTT</code>'s influence decays exponentially.</p> <p><code>DevRTT</code> is an EWMA of the difference between <code>SampleRTT</code> and <code>EstimatedRTT</code>.</p> <pre><code>DevRTT = (1 \u2013 \u03b2) * DevRTT + \u03b2 * abs(SampleRTT \u2013 EstimatedRTT)\n</code></pre> <p>Recommend: \\(\\alpha=0.125, \\beta = 0.25\\)</p>"},{"location":"Network/3.transport/5.TCP.html#32-setting-and-managing-the-retransmission-timeout-interval","title":"3.2 Setting and Managing the Retransmission Timeout Interval","text":"<p>It is therefore desirable to set the timeout equal to the <code>EstimatedRTT</code> plus some margin.</p> <p>The margin should be larger when the fluctuation is large. Therefore the margin is related to <code>DevRTT</code>.</p> <p>TCP timeout</p> <pre><code>TimeoutInterval = EstimatedRTT + 4 * DevRTT\n</code></pre>"},{"location":"Network/3.transport/5.TCP.html#4-reliable-data-transfer","title":"4. Reliable Data Transfer","text":"<ul> <li>The recommended TCP standard uses only a single timer, which is Go-Back-N method.</li> </ul> <p>There are 3 major event in TCP:</p> <ul> <li>Data receive from above layer<ul> <li>create segment with <code>NextSeqNum</code></li> <li>start timer</li> <li>pass segment to IP</li> <li>increase <code>NextSeqNum += length(data)</code></li> </ul> </li> <li>Timeout<ul> <li>retransmit</li> <li>restart timer</li> </ul> </li> <li>Receive <code>ACK</code><ul> <li>if <code>AckNum &gt; SendBase</code>, then <code>SendBase=AckNum</code>, start timer</li> <li>else ignore</li> </ul> </li> </ul>"},{"location":"Network/3.transport/5.TCP.html#41-doubling-the-timeout-interval","title":"4.1 Doubling the timeout interval","text":"<p>\u2754 Should the length of the timeout interval after a timer expiration be modified</p> <p>TCP do the following:</p> <ul> <li>Timeout occurs: Each time TCP retransmits, it sets the next timeout interval to twice the previous value.</li> <li>Two other events occur: Whenever the timer is started after either of the two other events, the <code>TimeoutInterval</code> is derived from the most recent values of <code>EstimatedRTT</code> and <code>DevRTT</code>.</li> </ul>"},{"location":"Network/3.transport/5.TCP.html#42-fast-retransmit","title":"4.2 Fast Retransmit","text":"<p>\u2754 Timeout period can be relatively long</p> <p>The sender can often detect packet loss well before the timeout event occurs by noting so-called duplicate ACKs.</p> <p>In the case that 3 duplicate ACKs are received, the TCP sender performs a fast retransmit</p>"},{"location":"Network/3.transport/5.TCP.html#43-go-back-n-or-selective-repeat","title":"4.3 Go-Back-N or Selective Repeat?","text":"<p>A hybrid of GBN and SR protocols.</p> <p>Many TCP implementations will buffer correctly received but out-of-order segments. Still they use a cumulative acknowledgement.</p>"},{"location":"Network/3.transport/5.TCP.html#5-flow-control","title":"5. Flow Control","text":"<p>\u2754If the application is relatively slow at reading the data, the sender can very easily overflow the connection\u2019s receive buffer by sending too much data too quickly.</p> <ul> <li>flow-control service: to eliminate the possibility of the sender overflowing the receiver\u2019s buffer. It's a speed match service.</li> </ul> <p>TCP do flow control by:</p> <ul> <li><code>RcvBuffer</code>: The sender maintain a variable called the receive window(free buffer space is available at the receiver).</li> <li><code>LastByteRead</code>: The last byte receiver read.</li> <li><code>LastByteRcvd</code>: The last byte receiver received.</li> <li><code>LastByteRcvd - LastByteRead &lt; RcvBuffer</code></li> <li>remain receive window size: <code>rwnd = RcvBuffer \u2013 [LastByteRcvd \u2013 LastByteRead]</code></li> <li>Sender keeps the amount of unacknowledged data less than the value of <code>rwnd</code>.</li> <li>When <code>rwnd=0</code>, sender sends 1 byte data to ensure itself not be blocking.</li> </ul>"},{"location":"Network/3.transport/5.TCP.html#6-tcp-connection-management","title":"6. TCP Connection Management","text":"<p>\u2754 Problem in TCP connection establishment</p> <ul> <li>TCP connection establishment can significantly add to perceived delays.</li> <li>Also cause attacks like SYN flood</li> </ul>"},{"location":"Network/3.transport/5.TCP.html#tcp-connection-and-disconnection","title":"TCP connection and disconnection","text":"<p>\ud83d\udd18 TCP connection steps:</p> <ol> <li>SYN segment: <code>[SYN_bit = 1, SYN = c]</code>, in an IP datagram, no application-layer data</li> <li>SYNACK segment: <code>[SYN_bit = 1, ACK_bit = 1, SYN = s, ACK = c + 1]</code>, server allocates the TCP buffers and variables</li> <li>ACK segment: <code>[SYN_bit = 0, SYN = c + 1, ACK = s + 1]</code>, may carry client-toserver data in the segment payload.</li> </ol> <p>\ud83d\udd18 TCP disconnection steps:</p> <ul> <li>Either of the two processes participating in a TCP connection can end the connection.</li> <li><code>FIN</code> - <code>ACK</code> - <code>FIN</code> - <code>ACK</code></li> </ul>"},{"location":"Network/3.transport/5.TCP.html#62-tcp-state","title":"6.2 TCP state","text":"<p>TCP client state:</p> <p>TCP server state:</p> <ul> <li>If server receive a package's IP address doesn't match any on-going connection, it will send an RST package.</li> </ul>"},{"location":"Network/3.transport/6.congestion-control.html","title":"Principles of Congestion Control","text":""},{"location":"Network/3.transport/6.congestion-control.html#1-the-causes-and-the-costs-of-congestion","title":"1. The Causes and the Costs of Congestion","text":"<ul> <li>\\(\\lambda_{in}\\): The sender sending rate of original data(byte/sec)</li> <li>\\(\\lambda'_{in}\\)(offered load): The Sender sending rate of original data &amp; retransmit data(byte/sec)</li> <li> <p>\\(\\lambda_{out}\\): The router sending rate of original data(byte/sec)</p> </li> <li> <p>per-connection throughput: number of bytes per second at the receiver</p> </li> </ul> <p>TakeAway</p> <p>Type of packets in the Network:</p> <ul> <li>Original packets</li> <li>Retransmitted packets for lost(dropped) packet</li> <li>Retransmitted packets for delay(queued) packet</li> </ul> <p>Congestion control goal: </p>"},{"location":"Network/3.transport/6.congestion-control.html#11-scenario-1-two-senders-a-router-with-infinite-buffers","title":"1.1 Scenario 1: Two Senders, a Router with Infinite Buffers","text":"<p>The most ideal scenarios: the buffer space is infinite.</p> <p>Consider Two hosts (A and B) each have a connection that shares a single hop between source and destination:</p> <ul> <li>For a sending rate between \\(0\\) and \\(\\frac{R}{2}\\), the throughput at the receiver equals the sender\u2019s sending rate</li> <li>Everything sent by the sender is received at the receiver with a finite delay.</li> <li>When the sending rate is above \\(\\frac{R}{2}\\), however, the throughput is only \\(\\frac{R}{2}\\).</li> </ul> <p>\ud83d\udcad Reason of \\(\\frac{R}{2}\\): the sharing of link capacity between two connections.</p> <p>\u274c The delay become larger when the sending rate approach \\(\\frac{R}{2}\\). If it exceed \\(\\frac{R}{2}\\), the delay is infinite. </p>"},{"location":"Network/3.transport/6.congestion-control.html#12-scenario-2-two-senders-and-a-router-with-finite-buffers","title":"1.2 Scenario 2: Two Senders and a Router with Finite Buffers","text":"<p>The amount of router buffering is assumed to be finite. When exceeding the capacity of router, new packets will be dropped and retransmitted.</p> <p>If the sender has perfect knowledge, it sends packets only when the router has free space, then \\(\\lambda_{in} = \\lambda'_{out}\\). No loss occur.</p> <p>If the sender retransmits only when a packet is known for certain to be lost and \\(\\lambda_{out} = \\frac{R}{3}\\).</p> <ul> <li>When \\(\\lambda'_{in}\\) is small, there is almost no retransmission, the \\(\\lambda_{out}\\) is roughly equals to \\(\\lambda'_{in}\\).</li> <li>When \\(\\lambda'_{in}\\) approaches \\(\\frac{R}{2}\\), retransmission packet may be retransmit. In \\(\\frac{R}{2}\\) packets transmitted, \\(0.333R\\) bytes/sec (on average) are original data and \\(0.166R\\) bytes/sec (on average) are retransmitted data.</li> </ul> <p>If sender time out prematurely and retransmit a packet that has been delayed in the queue but not yet lost. Unneeded retransmissions occurs.</p> <ul> <li>In extreme case, each packets is transmitted twice. So \\(\\lambda_{out} = \\frac{R}{4}\\)</li> </ul>"},{"location":"Network/3.transport/6.congestion-control.html#13-scenario-3-four-senders-routers-with-finite-buffers-and-multihop-paths","title":"1.3 Scenario 3: Four Senders, Routers with Finite Buffers, and Multihop Paths","text":""},{"location":"Network/3.transport/6.congestion-control.html#2-approaches-to-congestion-control","title":"2. Approaches to Congestion Control","text":"<p>Two approach:</p> <ul> <li>End-to-end congestion control: TCP mechanism, indicate by segment loss / delay, manipulate window size.</li> <li>Network-assisted congestion control: routers provide explicit feedback.</li> </ul>"},{"location":"Network/3.transport/7.TCP-congestion.html","title":"TCP Congestion Control","text":""},{"location":"Network/3.transport/7.TCP-congestion.html#1-classic-tcp-congestion-control","title":"1. Classic TCP Congestion Control","text":"<p>TCP does congestion control by limiting sender's rate.</p> <p>\u2754 How to limit rate?</p> <p>Sender keeps an additional variable: <code>cwnd</code>(congestion window). It imposes a constraint on the rate at which a TCP sender can send traffic into the network.</p> <pre><code>LastByteSent \u2013 LastByteAcked = min{cwnd, rwnd}\n</code></pre> <p>By limiting the amount of unacknowledged segment, TCP can limit sender's send rate. </p> <p>The sender's send rate is roughly <code>cwnd/RTT</code> bytes/sec.</p> <p>\u2754 How to perceive congestion?</p> <p>When timeout or 3 duplicate ACK packages occur, the congestion must be large.</p> <p>TCP is self-clocking. When ACKs arrive, which means the packages arrive at destination, then the <code>cwnd</code> should increase. The increase size should link to ACKs arrive rate. </p> <p>\u2754 What algorithm can be used to calculate new rate?</p> <p>Some principles:</p> <ul> <li>A lost segment implies congestion, and hence, the TCP sender\u2019s rate should be decreased when a segment is lost.</li> <li>An acknowledged segment indicates that the network is delivering the sender\u2019s segments to the receiver, and hence, the sender\u2019s rate can be increased when an ACK arrives for a previously unacknowledged segment.</li> <li>Bandwidth probing: probe for the rate that at which congestion onset begins, backs off from that rate</li> </ul>"},{"location":"Network/3.transport/7.TCP-congestion.html#11-tcp-congestion-control-algorithm","title":"1.1 TCP congestion-control algorithm","text":"<p>\ud83d\udd18 Slow Start</p> <p><code>cwnd</code> begins at a small value of 1 MSS, resulting in an initial sending rate of roughly MSS/RTT.</p> <p>In Slow Start state, <code>cwnd</code> increase 1 MSS every time when receive an ACK. <code>cwnd=cwnd+MSS</code></p> <p>This process results in a doubling of the sending rate every RTT.</p> <p>When will slow start ends?</p> <ul> <li>If there is a loss event indicated by a timeout, the TCP sender sets the value of to 1 and begins the slow start <code>cwnd</code> process anew. It also sets the value of a second state variable, <code>ssthresh</code> (slow start threshold) to <code>cwnd/2</code>, half of the value of the congestion window value when congestion was detected.</li> <li>If slow start rate arrived <code>ssthresh</code>(<code>cwnd &gt;= ssthresh</code>),  \u27a1\ufe0f congestion avoidance mode.</li> <li>If 3 duplicated ACKs are received, \u27a1\ufe0f fast transmitted mode</li> </ul> <p>\ud83d\udd18 Congestion Avoidance</p> <p>In congestion avoidance mode, TCP increases the value of <code>cwnd</code> by just a single MSS every RTT. <code>cwnd=cwnd+ MSS *(MSS/cwnd)</code></p> <p>When will congestion avoidance ends?</p> <ul> <li>If timeout occurs, <code>ssthresh=cwnd/2, cwnd=1 MSS</code>\u27a1\ufe0f slow start state</li> <li>If 3 duplicated ACKs are received, <code>ssthresh</code> should be decreased, <code>ssthresh= cwnd/2, cwnd=ssthresh+3*MSS</code>\u27a1\ufe0f fast recovery state.</li> </ul> <p>\ud83d\udd18 Fast recovery</p> <p>In fast recovery, the value of cwnd is increased by <code>1 MSS</code> for every duplicate ACK received for the missing segment that caused TCP to enter the fast-recovery state. <code>cwnd=cwnd+MSS</code></p> <ul> <li>If timeout occurs, <code>ssthresh=cwnd/2, cwnd=1 MSS</code>\u27a1\ufe0f slow start state</li> <li>If new ACK received, cwnd=ssthresh, \u27a1\ufe0f fast transmitted mode</li> </ul> <p>Typical TCP congestion window size:</p> <ul> <li>TCP Tahoe(early version): unconditionally cut its congestion window to 1 MSS and entered the slow-start phase when loss event</li> <li>TCP Reno(newer version): fast recovery.</li> </ul>"},{"location":"Network/3.transport/7.TCP-congestion.html#12-analysis","title":"1.2 Analysis","text":"<p>TCP congestion control is often referred to as an additive-increase multiplicative-decrease(AIMD) form of congestion control.</p> <p>When the window size is <code>w</code> bytes and the current round-trip time is <code>RTT</code> seconds,then TCP\u2019s transmission rate is roughly <code>w/RTT</code>.</p> <p>TCP then probes for additional bandwidth by increasing <code>w</code> by <code>1 MSS</code> each <code>RTT</code> until a loss event occurs.</p> <p>TCP transmission rate ranges from <code>W/(2 * RTT)</code> to <code>W/RTT</code>.</p> <p>Average throughput of a connection<code>0.75 * W/RTT</code>.   </p>"},{"location":"Network/3.transport/7.TCP-congestion.html#2-network-assisted-explicit-congestion-notification-and-delayed-based-congestion-control","title":"2. Network-Assisted Explicit Congestion Notification and Delayed-based Congestion Control","text":"<p>\ud83d\udd18 Explicit Congestion Notification</p>"},{"location":"Network/3.transport/8.Evolution.html","title":"Evolution of Transport-Layer Functionality","text":"<p>TCP has many version, CUBIC and CTCP are more widely deployed than classic Reno.</p> <p>The only common features of these TCP protocols is that they use the TCP segment format.</p>"},{"location":"Network/3.transport/8.Evolution.html#1-quic-quick-udp-internet-connections","title":"1. QUIC: Quick UDP Internet Connections","text":"<p>QUIC is a new application-layer protocol designed from the ground up to improve the performance of transport-layer services for secure HTTP.</p> <p>QUIC using UDP as its underlying transport-layer protocol, HTTP/3 will natively incorporate QUIC.</p> <p>Main features:</p> <ul> <li>Connection-Oriented and Secure<ul> <li>handshake, encrypted when connected.</li> <li>In compare, TCP establishment and TLS establishment are separated.</li> </ul> </li> <li>Streams:<ul> <li>multiplexing several application-layer streams in a single QUIC connection.</li> <li>new streams can be added quickly.</li> <li>connection ID + stream ID.</li> </ul> </li> <li>Reliable, TCP-friendly congestion-controlled data transfer<ul> <li>QUIC provides a reliable in-order delivery on a per-stream basis</li> <li>QUIC provides reliable data transfer using acknowledgment mechanisms similar to TCP\u2019s.</li> <li>QUIC's congestion control is based on TCP NewReno</li> </ul> </li> </ul>"},{"location":"Network/4.network-data/1.Basic.html","title":"Introduction of Network Layer","text":"<ul> <li>data-plane: each router is to forward datagrams from its input links to its output links</li> <li>network-control plane: coordinate these local, per-router forwarding actions so that datagrams are ultimately transferred end-to-end, along paths of routers between source and destination hosts.</li> </ul>"},{"location":"Network/4.network-data/1.Basic.html#1-forwarding-and-routing-the-data-and-control-planes","title":"1. Forwarding and Routing: The Data and Control Planes","text":"<p>Two important network-layer functions:</p> <ul> <li>Forwarding: move the packet to the appropriate output link; router-local action.</li> <li>Routing: determine the route or path taken by packets as they flow from a sender to a receiver; network-wide process.</li> </ul>"},{"location":"Network/4.network-data/1.Basic.html#11-control-plane-the-traditional-approach","title":"1.1 Control Plane: The Traditional Approach","text":"<p>The routing algorithm determines the contents of the routers' forwarding tables.</p> <p>Each router having a routing component that communicates with the routing component of other routers.</p>"},{"location":"Network/4.network-data/1.Basic.html#12-control-plane-the-sdn-approach","title":"1.2 Control Plane: The SDN Approach","text":"<p>A physically separate, remote controller computes and distributes the forwarding tables.</p> <p>The routing device performs forward only, and the routing functionality is separated.</p> <p>The remote controller might be implemented in a remote data center with high reliability and redundancy, and might be managed by the ISP or some    .</p>"},{"location":"Network/4.network-data/1.Basic.html#2-network-service-model","title":"2. Network Service Model","text":"<p>The network service model defines the characteristics of end-to-end delivery of packets between sending and receiving hosts.</p> <p>The Internet\u2019s network layer provides a single service, known as best-effort service\uff0c which means NOTHING is guaranteed.</p> <ul> <li>\u274c no guaranteed to be received in order</li> <li>\u274c no their eventual delivery</li> <li>\u274c no guarantee on the end-to-end delay</li> <li>\u274c no minimal bandwidth guarantee</li> </ul>"},{"location":"Network/4.network-data/2.Router.html","title":"What\u2019s Inside a Router?","text":"<p>A high-level view of a generic router architecture:</p> <p>Components:</p> <ul> <li>Input ports<ul> <li>performs the physical-layer function of terminating an incoming physical link at a router.</li> <li>performs link-layer functions needed to interoperate with the link layer at the other side of the incoming link.</li> <li>performs network-layer functions of lookup.</li> </ul> </li> <li>Switching fabric<ul> <li>connects the router\u2019s input ports to its output ports</li> </ul> </li> <li>Output ports<ul> <li>stores packets, transmits on the outgoing link.</li> <li>when the link is bidirectional, the output port and input port will typically be paired.</li> </ul> </li> <li>Routing processor<ul> <li>executes the routing protocols</li> <li>In SDN routers, the routing processor is responsible for communicating with the remote controller</li> </ul> </li> </ul> <p>Input ports lookup method: match + action</p> <ul> <li>Destination-based forwarding<ul> <li>forward based on IP address.</li> </ul> </li> <li>Generalized forwarding<ul> <li>forward based on any value in header field.</li> </ul> </li> </ul>"},{"location":"Network/4.network-data/2.Router.html#1-input-port-processing-and-destination-based-forwarding","title":"1. Input Port Processing and Destination-Based Forwarding","text":"<p>\ud83d\udd18 Matching</p> <ul> <li>The router use longest prefix matching rule, hardware logic just searches through the forwarding table looking for the longest prefix match.</li> <li>Often use Ternary Content Addressable Memories(TCAM), can be done in nanoseconds.</li> </ul> <p>\ud83d\udd18 Sending to switching fabric</p> <p>When fabric is busy, the entering of packets from one input port may be temporarily blocked.</p> <p>They will be queued at the input port and then scheduled to cross the fabric at a later point in time.</p> <p>\ud83d\udd18 Other actions</p> <ul> <li>physical and link layer process</li> <li>checksum and TTL field need to be checked and rewrited</li> <li>update counters.</li> </ul>"},{"location":"Network/4.network-data/2.Router.html#2-switching","title":"2. Switching","text":"<p>Switching can be accomplished in a number of ways:</p> <ul> <li>Switching via memory<ul> <li>1-gen switching</li> <li>switch under direct control of the CPU (routing processor).</li> <li>packets copied to memory, speed limit by memory bandwidth.</li> </ul> </li> <li>Switching via a bus<ul> <li>the input port pre-pend a switch-internal label (header) to the packet indicating the targeted local output port and transmitting the packet onto the shared bus.</li> <li>All output ports receive the packet, but only the port that matches the label  keep the packet.</li> <li>speed limit by bus bandwidth.</li> </ul> </li> <li>Switching via an interconnection network.<ul> <li>most modern way</li> <li>Use crossbar switch, which is an interconnection network consisting of \\(2N\\) buses that connect \\(N\\) input ports to \\(N\\) output ports.</li> <li>forwarding multiple packets in parallel</li> <li>non-blocking: as long as the output port is free, the packet won't be blocked.</li> </ul> </li> </ul> <p>More advance interconnection network use multi-stage of switching, allowed multiple packets from different input ports forward to same output port in parallel.</p>"},{"location":"Network/4.network-data/2.Router.html#3-output-port-processing","title":"3. Output Port Processing","text":"<ul> <li>select (i.e., scheduling)</li> <li>de-queue packets for transmission</li> <li>perform the needed link-layer and physical-layer transmission functions.</li> </ul>"},{"location":"Network/4.network-data/2.Router.html#4-where-does-queuing-occur","title":"4. Where Does Queuing Occur?","text":"<p>As queues grow large, the router\u2019s memory can eventually be exhausted and packet loss will occur when no memory is available to store arriving packets.</p> <p>symbol</p> <ul> <li>assume that all packets have the same fixed length, and that packets arrive to input ports in a synchronous manner.</li> <li>\\(R_{line}\\): the transmission rate of input and output port (packets/per second).</li> <li>\\(N\\): the number of input and output port, suppose the amount is the same.</li> <li>\\(R_{switch}\\): switching fabric transfer rate.</li> </ul> <p>\ud83d\udd18 Case 1:  \\(R_{switch} &gt;= N * R_{line}\\)</p> <p>The queuing in input port is negligible. In worst case, \\(N\\) input port have 1 packet, target at the same output port. The fiber switch can transmit this batch before next arrived.</p>"},{"location":"Network/4.network-data/2.Router.html#41-input-queuing","title":"4.1 Input Queuing","text":"<p>\ud83d\udd18 Case 2:  \\(R_{switch} &lt; N * R_{line}\\), and \\(x&gt;=2\\) input ports forward to \\(1\\) output port.</p> <p>In case2, packets have same destination will be queued.</p> <p>Head-of-the-line (HOL) blocking problem in input queue: Event though output port is free, the fabric is occupied.</p>"},{"location":"Network/4.network-data/2.Router.html#42-output-queuing","title":"4.2 Output Queuing","text":"<p>\ud83d\udd18 Case 3:  \\(R_{switch} &gt;= N * R_{line}\\), \\(N\\) packets arrive to \\(1\\) output port.</p> <p>It takes time for output port transmitting the packets to outgoing link.</p> <p>When the buffer is not enough, port may have these active queue management (AQM)</p> <ul> <li>drop-tail: drop new arrived packets.</li> <li>drop-front: drop already-queued packets.</li> <li>provide a congestion signal</li> </ul>"},{"location":"Network/4.network-data/2.Router.html#43-how-much-buffering-is-enough","title":"4.3 How Much Buffering Is \u201cEnough?\u201d","text":"<p>The rule of thumb: buffer sizing was that the amount of buffering ( \\(B\\) ) should be equal to an average round-trip time ( \\(RTT\\) , say 250 msec) times the link capacity ( \\(C\\) ).</p> \\[ B = RTT \\times C\\] <p>That makes queuing dynamics of a relatively small number of TCP flows.</p> <p>Most recent work: a large number of independent TCP flows ( \\(N\\) ) pass through a link, the amount of buffering needed is $$ B = \\frac{RTT \\times C}{\\sqrt{N}}$$</p> <p>Warning</p> <p>Too much buffer increase delays, long RTTs.</p>"},{"location":"Network/4.network-data/2.Router.html#5-packet-scheduling","title":"5. Packet Scheduling","text":""},{"location":"Network/4.network-data/2.Router.html#51-first-in-first-out-fifo","title":"5.1 First-in-First-Out (FIFO)","text":""},{"location":"Network/4.network-data/2.Router.html#52-priority-queuing","title":"5.2 Priority Queuing","text":"<p>Packets arriving at the output link are classified into priority classes upon arrival at the queue.</p> <p>Priority may based on:</p> <ul> <li>source or destination TCP/UDP port</li> <li>real-time voice-over-IP packets might receive priority</li> </ul>"},{"location":"Network/4.network-data/2.Router.html#53-round-robin-and-weighted-fair-queuing-wfq","title":"5.3 Round Robin and Weighted Fair Queuing (WFQ)","text":"<p>Packets are sorted into classes as with non-strict priority queuing.</p> <p>A so-called work-conserving queuing discipline will never allow the link to remain idle whenever there are packets (of any class) queued for transmission.</p> <p>A generalized form of round robin queuing that has been widely implemented in routers is the so-called weighted fair queuing (WFQ) discipline.</p> <p>WFQ differs from round robin in that each class may receive a differential amount of service in any interval of time.</p>"},{"location":"Network/4.network-data/3.IP.html","title":"The Internet Protocol (IP): IPv4, Addressing, IPv6, and More","text":""},{"location":"Network/4.network-data/3.IP.html#1-ipv4-datagram-format","title":"1. IPv4 Datagram Format","text":"<ul> <li>IP datagram has a total of 20 bytes of header.</li> </ul>"},{"location":"Network/4.network-data/3.IP.html#2-ipv4-addressing","title":"2. IPv4 Addressing","text":"<p>\u2754When we talk about IP address, who owns a IP address?</p> <p>The boundary between the host and the physical link is called an interface.</p> <ul> <li>A host typically has only 1 interface.</li> <li>The router has multiple interfaces.</li> </ul> <p>Thus, an IP address is technically associated with an interface, rather than with the host or router containing that interface.</p> <p>Each interface on every host and router in the global Internet must have an IP address that is globally unique(except behind NAT).</p> <p>\ud83d\udd18Subnet</p> <p>A subnet is also called an IP network or simply, a network in the Internet literature.</p> <p>It's device interfaces that can physically reach each other without passing through an intervening router.</p> <p>\ud83d\udd18 IP address format</p> <p>Each IP address is 32 bits  long(equivalently, 4 bytes), and there are thus a total of 232 (or approximately 4 billion) possible IP addresses.</p> <p>IP address have structure:</p> <ul> <li>subnet part: devices in same subject have common high order bits(subnet mask).</li> <li>host part: remaining low order bits.</li> </ul> <p>Based on subnet size, 3 kinds of IP address are defined: </p> IP types range amount prefix bits A 16777214 8 B 645534 16 C 254 24 <p>\ud83d\udd18 CIDR</p> <p>The Internet\u2019s address assignment strategy is known as Classless InterDomain Routing (CIDR\u2014pronounced cider).</p> <ul> <li>subnet portion of address of arbitrary length</li> <li>address format: <code>a.b.c.d/x</code>, where <code>x</code> is the prefix, the portion of subnet bits.</li> </ul> <p>\ud83d\udd18 Special IP address</p> <ul> <li>255.255.255.255: all hosts on the same subnet</li> <li>127.0.0.1\uff1aloopback address, can only be the destination address of a packet.</li> </ul>"},{"location":"Network/4.network-data/3.IP.html#21-obtaining-a-block-of-addresses","title":"2.1 Obtaining a Block of Addresses","text":"<p>In order to obtain a block of IP addresses for use within an organization\u2019s subnet:</p> <ol> <li>Step 1: contact ISP</li> <li>Step 2: ISP provide addresses from a larger block of addresses that had already been allocated to the it.</li> </ol> <p>IP addresses are managed under the authority of the s.</p>"},{"location":"Network/4.network-data/3.IP.html#22-obtaining-a-host-address-the-dynamic-host-configuration-protocol","title":"2.2 Obtaining a Host Address: The Dynamic Host Configuration Protocol","text":"<p>Once an organization has obtained a block of addresses, it can assign individual IP addresses to the host and router interfaces in its organization.</p> <p>\ud83d\udd18 Dynamic Host Configuration Protocol (DHCP)</p> <p>DHCP is a plug-and-play or zeroconf protocol, c-s structure.</p> <ul> <li>host receives the same IP address each time it connects to the network</li> <li>host may be assigned a temporary IP address that will be different each time</li> <li>DHCP also allows a host to learn additional information<ul> <li>its subnet mask</li> <li>the address of its first-hop router (often called the default gateway)</li> <li>address of its local DNS server</li> </ul> </li> </ul> <p>DHCP message:     - DHCP discover [optional]: brodecast to 255.255.255.255     - DHCP offer [optional]: brodecast to 255.255.255.255. Each server offer message contains the transaction ID of the received discover message, the proposed IP address for the client, the network mask, and an IP address lease time.     - DHCP request: Client chooses one and confirm it to DHCP server, proving its configuration.     - DHCP ack: Server confirming the requested parameters.</p>"},{"location":"Network/4.network-data/3.IP.html#3-network-address-translationnat","title":"3. Network Address Translation(NAT)","text":"<p>\u2754 What if we run out of IPv4 address? (Indeed we have already run out.)</p> <p>\ud83d\udd18 NAT</p> <p>All devices in local network share just 1 IPv4 address as far as the outside world is concerned. And in private IP address namespace, all devices have 32-bits IP address.  </p> <p>The NAT-enabled router does not look like a router to the outside world. NAT router behaves to the outside world as a single device with a single IP address.</p> <p>Advantages:</p> <ul> <li>Only need 1 IP address from ISP.</li> <li>Can change address of host in local network withou notify the outside world.</li> <li>Can change ISP without changing address of devices.</li> <li>Security: devices inside local net not directly addressable.</li> </ul> <p>Implementation:</p> <ul> <li>outgoing datagrams: replace <code>(src IP, port)</code> to <code>(NAT IP, new port)</code>.</li> <li>NAT translation table: remember all the translation pair.</li> <li>incoming datagrams: replace <code>(NAT IP, new port)</code> to <code>(src IP, port)</code>.</li> </ul> <p>\u2753 Port numbers are meant to be used for addressing processes, not for addressing hosts. How can one peer connect to another peer that is behind a NAT server?</p> <p>NAT traversal: 1. Find IP address and port which is meaningful to outside world 2. share to the peer.</p>"},{"location":"Network/4.network-data/3.IP.html#4-ipv6","title":"4. IPv6","text":""},{"location":"Network/4.network-data/3.IP.html#41-ipv6-datagrams-format","title":"4.1 IPv6 Datagrams Format","text":"<p>The most significant change:</p> <ul> <li>Expanded addressing capabilities: 32 to 128 bits. A new type of address, called an anycast address, that allows a datagram to be delivered to any one of a group of hosts.</li> <li>A streamlined 40-byte header</li> <li>Flow labeling: labeling of packets belonging to particular flows for which the sender requests special handling, such as a non-default quality of service or real-time service.</li> </ul>"},{"location":"Network/4.network-data/3.IP.html#42-transitioning-from-ipv4-to-ipv6","title":"4.2 Transitioning from IPv4 to IPv6","text":"<p>\u2754How will the public Internet, which is based on IPv4, be transitioned to IPv6?</p> <p>\ud83d\udd18 Tunneling</p> <p>Tunnel refers to intervening set of IPv4 routers between two IPv6 routers.</p> <p>The main idea: IPv6 datagrams are carried as payload between IPv4 routers. </p>"},{"location":"Network/4.network-data/4.Forwarding-SDN.html","title":"Generalized Forwarding and SDN","text":"<p>More general \u201cmatch-plus-action\u201d paradigm.</p> <ul> <li>Match: can be made over multiple header fields.</li> <li>Action: forward, load balance, rewrite value, drop...</li> </ul> <p>Generalizes the notion of the destination-based forwarding table</p> <p>In flow table above, there are three fields:</p> <ul> <li>header field value: to be matched</li> <li>counter: the number of packets that have been matched by that table entry, and the time since the table entry was last updated.</li> <li>actions: to be taken when matched</li> </ul>"},{"location":"Network/4.network-data/4.Forwarding-SDN.html#1-match","title":"1. Match","text":"<ul> <li>11 packet-header fields and the incoming port ID that can be matched in an OpenFlow 1.0 match-plus-action rule.</li> <li>does not allow matching on the basis of TTL field or datagram length field.</li> </ul>"},{"location":"Network/4.network-data/4.Forwarding-SDN.html#2-action","title":"2. Action","text":"<p>Actions include:</p> <ul> <li>Forwarding: may be encapsulated and sent; may installing new flow table entries</li> <li>Dropping</li> <li>Modify-field</li> </ul>"},{"location":"Network/4.network-data/4.Forwarding-SDN.html#3-openflow-examples-of-match-plus-action-in-action","title":"3. OpenFlow Examples of Match-plus-action in Action","text":"<p>Structure of SDN:</p>"},{"location":"Network/4.network-data/4.Forwarding-SDN.html#31-simply-forward","title":"3.1 Simply forward","text":"<p>3 field can use to decide forward port:</p> <ul> <li>ingress port</li> <li>IP Dst</li> <li>IP Src</li> </ul>"},{"location":"Network/4.network-data/4.Forwarding-SDN.html#32-load-balancing","title":"3.2 Load Balancing","text":"<p>Case: (<code>h3 -&gt; 10.1.*.*(h1/h2)</code>) + (<code>h4 -&gt; 10.1.*.*(h1/h2)</code>)</p> <p>In direct forward, they are conflict.</p> <p>But in below flow table:</p> <p>The packet from port 3(h3) are directly forward to  port 2; while packet from port 4(h4) are forward to port 1(s1), then to s2.</p>"},{"location":"Network/4.network-data/4.Forwarding-SDN.html#33-firewall","title":"3.3 Firewall","text":"<p>If <code>default</code> is not set, then flow table acts like a white list. Only packets whose IP addresses existing in the table will be forward.</p>"},{"location":"Network/4.network-data/5.Middlebox.html","title":"Middleboxes","text":"<p>Definition of Middleboxes</p> <p>Any intermediary box performing functions apart from normal, standard functions of an IP router on the data path between a source host and destination host.</p> <p>3 types of services of Middleboxes</p> <ul> <li>NAT Translation</li> <li>Security Service: deep packet inspection (DPI). Intrusion Detection Systems (IDS); Application-level e-mail filters.</li> <li>Performance Enhancement: compression, content caching, and load balancing.</li> </ul> <p>\u2754How to use commodity hardware, software stack to serve middleboxes, instead of a specialized one which brings significant cost?</p> <p>\ud83d\udcad 1. network function virtualization (NFV): special application on top of a common software stack, exactly like SDN.</p> <p>\ud83d\udcad 2. outsource middlebox functionality to the cloud</p>"},{"location":"Network/5.network-control/1.Routing-Algo.html","title":"Routing Algorithms","text":"<p>TakeAway</p> <ul> <li>LS algorithm: Dijkstra to get shortest path</li> <li>D_V algorithm: guess, then replace own guess with neighbor's guess plus neighbor's cost.</li> </ul> <p>The goal is to determine good paths, from senders to receivers, through the network of routers with the least cost.</p> <p>We use graph \\(G = (N,E)\\) to represent the network. The routers are represented as a sequence of nodes \\(x_1,\\dots,x_p\\), while the packet-forwarding decisions are the edges \\((x_1,x_2),(x_2,x_3),\\dots,(x_{p-1},x_p)\\).</p> <p>The total cost is \\(c(x_1,x_2)+c(x_2,x_3),\\dots+c(x_{p-1},x_p)\\).</p> <p>classify routing algorithm by centralization</p> <ul> <li>Centralized routing algorithm: using a complete, global knowledge about the network. Aka, obtain information about all nodes and all link cost before calculation. (Ls algorithm)</li> <li>Decentralized routing algorithm: each node begins with only the knowledge of the costs of  its own directly attached links.(D_V algorithm)</li> </ul> <p>classify routing algorithm by dynamic</p> <ul> <li>Static routing algorithm: routes change slowly, often as a result of human intervention.</li> <li>Dynamic routing algorithm: routes change as the network traffic loads change or topology or link cost changes.</li> </ul> <p>classify routing algorithm by load-sensitivity</p> <ul> <li>load-sensitive algorithm: link costs vary dynamically to reflect the current level of congestion.</li> <li>load-insensitive algorithm: link's cost does not explicitly reflect its current level of congestion.(Today's algorithm, RIP, OSPF, BGP)</li> </ul>"},{"location":"Network/5.network-control/1.Routing-Algo.html#1-the-link-state-ls-routing-algorithm","title":"1. The Link-State (LS) Routing Algorithm","text":"<p>\ud83d\udd18link-state broadcast: each node broadcast link-state packets to all other nodes in the network.</p> <p>The LS routing algorithm use Dijkstra's algorithm to compute the least-cost path.</p> <p>Link-State (LS) Algorithm for Source Node <code>u</code>:</p> <pre><code>Initialization:\n    N\u2019 = {u}\n    for all nodes v\n        if v is a neighbor of u\n            then D(v) = c(u,v)\n    else D(v) = \u221e\n\nLoop\n    find w not in N\u2019 such that D(w) is a minimum\n    add w to N\u2019\n    update D(v) for each neighbor v of w and not in N\u2019:\n        D(v) = min(D(v), D(w)+ c(w,v) )\n    /* new cost to v is either old cost to v or known\n    least path cost to w plus cost from w to v */\nuntil N\u2019= N\n</code></pre> <p>The iteration if \\(\\frac{n(n+1)}{2}\\), the complexity if \\(O(n^2)\\).</p> <p>\u274c Oscillation: When LS algorithm runs, and two routers find a better route, they change routes at the same time, which will centralize all the cost to one route, resulting original route a less cost one. \ud83d\udcad ensure that not all routers run the LS algorithm at the same time. \ud83d\udcad avoid such self-synchronization is for each router to randomize the time it sends out a link ad_vertisement.</p>"},{"location":"Network/5.network-control/1.Routing-Algo.html#2-the-distance-vector-d_v-routing-algorithm","title":"2. The Distance-Vector (D_V) Routing Algorithm","text":"<p>\ud83d\udd18Iterative, asynchronous, and distributed: </p> <ul> <li>Each node receives some information from one or more of its directly attached neighbors.</li> <li>Do not require all of the nodes to operate lockstep with each other.</li> </ul> <p>\ud83d\udd18 The D_V routing algorithm use Bellman-Ford equation to compute the least-cost path.</p> \\[ D_x(y) = \\min_v\\{c(x,v) + d_v(y)\\}\\] <p>Each node x begins with \\(D_x(y)\\), an estimate of cost of the least cost path. then</p> <ul> <li>For each neighbor \\(v\\), the cost \\(c(x,v)\\) from \\(x\\) to directly attached neighbor \\(v\\).</li> <li>Node \\(x\\)\u2019s distance vector \\(D_x = [D_x(y): y in N]\\), containing \\(x\\)\u2019s estimate of its cost to all destinations, \\(y\\) in \\(N\\).</li> <li>The distance vectors of each of its neighbors \\(D_v = [D\\)v(y): y in N]$ for each neighbor \\(v\\).</li> </ul> <p>Neighbors exchange the distance vector, and replace its own vector by</p> \\[ D_x(y) = \\min_v\\{c(x,v) + d_v(y)\\}\\] <p>Distance-Vector (D_V) Algorithm</p> <pre><code>At each node, x:\nInitialization:\n    for all destinations y in N:\n        D_x(y)= c(x,y)/* if y is not a neighbor then c(x,y)= \u221e */\n    for each neighbor w\n        D_w(y) = ? for all destinations y in N\n    for each neighbor w\n        send distance vector D_x = [D_x(y): y in N] to w\nloop\n    wait (until I see a link cost change to some neighbor w or\n    until I receive a distance vector from some neighbor w)\n\n    for each y in N:\n        D_x(y) = min_v{c(x,v) + D_v(y)}\n\n    if D_x(y) changed for any destination y\n        send distance vector D_x = [D_x(y): y in N] to all neighbors\n\nforever\n</code></pre> <p>\u274c routing loop: If a \\(c(v,x)\\) increase, it propagate to neighbor.</p>"},{"location":"Network/5.network-control/2.OSPF.html","title":"Intra-AS Routing in the Internet: OSPF","text":"<p>\u2754 Is Internet = routers +end system? Are all routers execute same routing algorithm? What are the benefits and disadvantages? \u2705 Scale: number of routers grow, memory for storing routing information grows. \ud83d\udcad Reduce the complexity of route computation in a network as large as Internet. \u2705 Administrative autonomy: An ISP, consisting of its own routers, desires to operate its network as it pleases.</p> <p>The routers are organizing into autonomous systems(ASs).</p> <ul> <li>intra-AS routing protocol: determined entries for dst within an AS.</li> <li>inter-AS routing protocol: determined entries for external dst, together with intra-AS protocol.</li> </ul>"},{"location":"Network/5.network-control/2.OSPF.html#1-open-shortest-path-first-ospf","title":"1. Open Shortest Path First (OSPF)","text":"<p>OSPF is a LS protocol that uses flooding of LS information and a Dijkstra's least-cost path algorithm.</p> <ul> <li>Each router constructs a complete topological map of the entire autonomous system. They locally runs Dijkstra to determine a shortest-path tree to all subnets, with itself as the root node.</li> <li>The weight of each link is decided by admin, can have multiple link cost metrics(bandwidth, delay...)</li> <li>With OSPF, a router broadcasts routing information to all other routers in the AS.</li> </ul>"},{"location":"Network/5.network-control/2.OSPF.html#11-advance-in-ospf","title":"1.1 Advance in OSPF","text":"<ul> <li>Security: All OSPF message are authenticated.</li> <li>Multiple same-cost paths: When multiple paths to a destination have the same cost, OSPF allows multiple paths to be used.</li> <li>Integrated support for unicast and multicast routing: uses the existing OSPF link database and adds a new type of LS advertisement.</li> <li>Support for hierarchy within a single AS.</li> </ul>"},{"location":"Network/5.network-control/2.OSPF.html#12-hierarchical-ospf","title":"1.2 Hierarchical OSPF","text":"<p>Two-level: local area, backbone.</p> <ul> <li>LS advertisement flooded only in area, or backbone.</li> <li>Each node has detailed area topology; only knows direction to reach other destinations.</li> </ul>"},{"location":"Network/5.network-control/3.BGP.html","title":"Routing Among the ISPs: BGP","text":"<p>BGP(Border Gateway Protocol): Glue that hold Internet together.</p> <p>Since an inter-AS routing protocol involves coordination among multiple ASs, communicating ASs must run the same inter-AS routing protocol.</p> <p>\u2757BGP is much about policy than performance.</p>"},{"location":"Network/5.network-control/3.BGP.html#1-the-role-of-bgp","title":"1. The Role of BGP","text":"<p>\u2754How to route to a destination outside of the AS?</p> <p>BGP allows subnet to advertise its existence, its reaching dst.</p> <p>BGP provide each AS a means to:</p> <ul> <li>Obtain prefix reachability information from neighboring</li> <li>Determine the \u201cbest\u201d routes to the prefixes.</li> </ul>"},{"location":"Network/5.network-control/3.BGP.html#2-advertising-bgp-route-information","title":"2. Advertising BGP Route Information","text":"<p>BGP kinds</p> <ul> <li>eBGP: external BGP, between ASs</li> <li>iBGP: internal BGP, inside AS</li> </ul> <p>router kinds</p> <ul> <li>gateway routers: connected to other ASs, run both eBGP and iBGP.</li> <li>internal router: connects only to hosts and routers within its own AS, run iBGP.</li> </ul> <p>In BGP, pairs of routers exchange routing information over semi-permanent TCP connections using port 179.</p> <p>The typical BGP workflow:</p> <ul> <li>eBGP request to gateway router.</li> <li>iBGP request from gateway router to internal routers.</li> <li>eBGP response to sender.</li> <li>iBGP response to internal routers.</li> </ul> <p>BGP protocol messages</p> <ul> <li><code>OPEN</code>: OPEN TCO connection and authenticate.</li> <li><code>UPDATE</code>: advertise new path.</li> <li><code>KEEPALIVE</code>: keeps connection alive, ACK OPEN request.</li> <li><code>NOTIFICATION</code>: reporting errors in previous msg, close connection.</li> </ul>"},{"location":"Network/5.network-control/3.BGP.html#3-determining-the-best-routes","title":"3. Determining the Best Routes","text":"<p>BGP advertised path: prefix + attributes.</p> <ul> <li>prefix: destination  being advertised</li> <li>attributes<ul> <li><code>AS-PATH</code>: list of ASs through which prefix advertisement has passed.</li> <li><code>NEXT-HOP</code>: indicates specific internal-AS router to next-hop AS. The <code>NEXT-HOP</code> is the IP address of the router interface that begins the <code>AS-PATH</code>.</li> </ul> </li> </ul> <p>policy-based routing</p> <ul> <li>router uses policy to accept/reject a path(e.g., never route through AS W, or country Y).</li> <li>router uses policy to decide whether to advertise a path to neighbor(does the router want to route traffic forward from neighbor X to Y?).</li> </ul>"},{"location":"Network/5.network-control/3.BGP.html#31-hot-potato-routing","title":"3.1 Hot Potato Routing","text":"<p>In hot potato routing, the chosen route has the least cost to the <code>NEXTHOP</code> router. It is a greedy algorithm, enabling least cost of its own AS, regardless of the end-to-end costs outside its AS.</p> <p>Steps of adding an outside-AS prefix into a forwarding table(both inter/intra-AS routing protocol are used):</p>"},{"location":"Network/5.network-control/3.BGP.html#32-route-selection-algorithmpractical-used","title":"3.2 Route-Selection Algorithm(practical used)","text":"<ul> <li>If there is only one such route, then BGP selects that route.</li> <li>If two or more, BGP do the following:<ol> <li>A route is assigned a local preference value as its attributes. It's a policy decision by AS's admin.</li> <li>From all route with the same highest local preference value, BGP choose the shortest <code>AS-PATH</code>.</li> <li>From all route with the same highest local preference value and same shortest <code>AS-PATH</code>, BGP choose the closest <code>NEXT-HOP</code>(hot-potato).</li> <li>If three are same, the router uses BGP identifiers to determine.</li> </ol> </li> </ul>"},{"location":"Network/5.network-control/3.BGP.html#4-ip-anycast","title":"4. IP-Anycast","text":"<p>BGP is often used to implement the IP-anycast service, which is commonly used in DNS.</p> <p>Consider following problems:</p> <ul> <li>replicating the same content on different servers in many different dispersed geographical locations.</li> <li>having each user access the content from the server that is closest.</li> </ul>"},{"location":"Network/5.network-control/3.BGP.html#5-routing-policy","title":"5. Routing Policy","text":""},{"location":"Network/5.network-control/3.BGP.html#6-putting-the-pieces-together-obtaining-internet-presence","title":"6. Putting the Pieces Together: Obtaining Internet Presence","text":""},{"location":"Network/5.network-control/4.SDN-control.html","title":"The SDN Control Plane","text":"<p>Four key characteristics of an SDN architecture:</p> <ul> <li>Flow-based forwarding: based on any field of transport-/network-/link- layer header.</li> <li>Separation of data plane and control plane: </li> <li>Network control functions: </li> <li>programmable network:</li> </ul>"},{"location":"Network/5.network-control/5.ICMP.html","title":"ICMP: The Internet Control Message Protocol","text":"<p>ICMP is used by hosts and routers to communicate network-layer information to each other(e.g. error reporting).</p> <p>ICMP is often considered part of IP, but architecturally it lies just above IP.</p> <p>ICMP messages construction:</p> <ul> <li><code>type</code> field: type 3(destination problem); type 4(source problem); type 8(echo request)...</li> <li><code>code</code> field: the specific kind below a <code>type</code>.</li> <li>IP info field: The first 8 bytes of the problematic IP datagrams.</li> </ul> <p>ping program</p> <p>Ping sends a ICMP type 8 code 0 message to the specific host. Ping echo is a ICMP type 0 code 0.</p> <p>traceroute program</p> <ul> <li>request: a series of (IP + UDP) packets with unlikely UDP port number, with TTL increasing from 1.</li> <li>reply: when nth packets arrive nth router, the router send a ICMP type 11 code 0(TTL expire).</li> <li>when to end: the destination return a ICMP type 3 code 3(destination unreachable).</li> </ul>"},{"location":"Network/8.questions/Chapter1.html","title":"Chapter 1\"","text":""},{"location":"Network/8.questions/Chapter1.html#section-11","title":"SECTION 1.1\"","text":"<p>What is the difference between a host and an end system? List several different types of end systems. Is a Web server an end system?</p> <ol> <li>Host \"</li> </ol> <p>---\"</p> <p>Describe the protocol that might be used by two people having a telephonic conversation to initiate and end the conversation, i.e., the way that they talk.</p> <p>Why are standards important for protocols?</p> <p>There are millions of end systems and routers on the Internet. In order to communicate with each other, it'is important that they agree on a same standard. Otherwise, they may interpret differently for the very same message, or they may not be able to understand the bit stream.\"</p>"},{"location":"Network/8.questions/Chapter1.html#section-12","title":"SECTION 1.2\"","text":"<p>List four access technologies. Classify each one as home access, enterprise access, or wide-area wireless access.</p> <ol> <li>home access\"</li> </ol> <p>cable\"</p> <p>DSL, digital subscriber line\"</p> <p>FTTH, fiber to home\"</p> <ol> <li>enterprise access\"</li> </ol> <p>Ethernet\"</p> <p>wifi\"</p> <ol> <li>wide-area wireless access\"</li> </ol> <p>3G, 4G, 5G\"</p> <p>Is HFC transmission rate dedicated or shared among users? Are collisions possible in a downstream HFC channel? Why or why not?</p> <p>What access network technologies would be most suitable for providing internet access in rural areas?</p> <p>Dial-up modems and DSL both use the telephone line (a twisted-pair copper cable) as their transmission medium. Why then is DSL much faster than dial up access?</p> <p>What are some of the physical media that Ethernet can run over?</p> <p>HFC, DSL, and FTTH are all used for residential access. For each of these access technologies, provide a range of transmission rates and comment on whether the transmission rate is shared or dedicated.</p> <p> Describe the different wireless technologies you use during the day and their characteristics. If you have a choice between multiple technologies, why do you prefer one over another?</p>"},{"location":"Network/8.questions/Chapter1.html#section-13","title":"SECTION 1.3\"","text":"<p>11. Suppose there is exactly one packet switch between a sending host and a receiving host. The transmission rates between the sending host and the switch and between the switch and the receiving host are R1 and R2, respectively. Assuming that the switch uses store-and-forward packet switching, what is the total end-to-end delay to send a packet of length L? (Ignore queuing, propagation delay, and processing delay.)</p> <p>12. What advantage does a circuit-switched network have over a packet-switched network? What advantages does TDM have over FDM in a circuit-switched network?</p> <p>13. Suppose users share a 2 Mbps link. Also suppose each user transmits continuously at 1 Mbps when transmitting, but each user transmits only 20 percent of the time. (See the discussion of statistical multiplexing in Section 1.3.)</p> <p>a. When circuit switching is used, how many users can be supported? </p> <p>b. For the remainder of this problem, suppose packet switching is used. Why will there be essentially no queuing delay before the link if two or fewer users transmit at the same time? Why will there be a queuing delay if three users transmit at the same time? </p> <p>c. Find the probability that a given user is transmitting. </p> <p>d. Suppose now there are three users. Find the probability that at any given time, all three users are transmitting simultaneously. Find the fraction of time during which the queue grows. </p> <p>14. Why will two ISPs at the same level of the hierarchy often peer with each other? How does an IXP earn money?</p> <p>15. Why is a content provider considered a different Internet entity today? How does a content provider connect to other ISPs? Why? SECTION 1.4</p> <p>16. Consider sending a packet from a source host to a destination host over a fixed route. List the delay components in the end-to-end delay. Which of these delays are constant and which are variable?</p> <p>17. Visit the Transmission Versus Propagation Delay interactive animation at the Companion Website. Among the rates, propagation delay, and packet sizes available, find a combination for which the sender finishes transmitting before the first bit of the packet reaches the receiver. Find another combination for which the first bit of the packet reaches the receiver before the sender finishes transmitting.</p> <p>18. A user can directly connect to a server through either long-range wireless or a twisted-pair cable for transmitting a 1500-bytes file. The transmission rates of the wireless and wired media are 2 and 100 Mbps, respectively. Assume that the propagation speed in air is 3 * 108 m/s, while the speed in the twisted</p>"},{"location":"Network/8.questions/Chapter2.html","title":"Chapter 2","text":""},{"location":"Network/8.questions/Chapter2.html#section-21","title":"SECTION 2.1","text":"<p>List five nonproprietary Internet applications and the application-layer protocols that they use.</p> <p>What is the difference between network architecture and application architecture?</p> <ol> <li>network architecture is about layers(five-layer Internet architecture / OSI 7-layer), which set the rule for how messages communicate with each other. From the application developer\u2019s perspective, the network architecture is fixed and provides a specific set of services to applications.</li> <li>application architecture is how applications are structured. Namely, who provide the services and how end system interact with the service providers. There are two main kind: Client-Server architecture and Peer-to-Per(P2P) architecture. \"</li> </ol> <p>For a communication session between a pair of processes, which process is the client and which is the server?</p> <p>The process which initiates the communication is called client; the process that waits to be contacted is called server.\"</p> <p>Why are the terms client and server still used in peer-to-peer applications?</p> <p>What information is used by a process running on one host to identify a process running on another host?</p> <p>What is the role of HTTP in a network application? What other components are needed to complete a Web application?</p> <p>Referring to Figure 2.4, we see that none of the applications listed in Figure 2.4 requires both no data loss and timing. Can you conceive of an application that requires no data loss and that is also highly time-sensitive?</p> <p>List the four broad classes of services that a transport protocol can provide. For each of the service classes, indicate if either UDP or TCP (or both) provides such a service.</p> <p>Recall that TCP can be enhanced with TLS to provide process-to-process security services, including encryption. Does TLS operate at the transport layer or the application layer? If the application developer wants TCP to be enhanced with TLS, what does the developer have to do?</p>"},{"location":"Network/8.questions/Chapter2.html#sections-2225","title":"SECTIONS 2.2\u20132.5\"","text":"<p>What is meant by a handshaking protocol?</p> <p>What does a stateless protocol mean? Is IMAP stateless? What about SMTP?</p> <p>How can websites keep track of users? Do they always need to use cookies?</p> <p>Describe how Web caching can reduce the delay in receiving a requested object. Will Web caching reduce the delay for all objects requested by a user or for only some of the objects? Why?</p> <p>Telnet into a Web server and send a multiline request message. Include in the request message the If-modified-since: header line to force a response message with the 304 Not Modified status code.</p> <p>Are there any constraints on the format of the HTTP body? What about the email message body sent with SMTP? How can arbitrary data be transmitted over SMTP?</p> <p>Suppose Alice, with a Web-based e-mail account (such as Hotmail or Gmail), sends a message to Bob, who accesses his mail from his mail server using IMAP. Discuss how the message gets from Alice\u2019s host to Bob\u2019s host. Be sure to list the series of application-layer protocols that are used to move the message between the two hosts.</p> <p>Print out the header of an e-mail message you have recently received. How many Received: header lines are there? Analyze each of the header lines in the message.</p> <p>What is the HOL blocking issue in HTTP/1.1? How does HTTP/2 attempt to solve it?</p> <p>Why are MX records needed? Would it not be enough to use a CNAME record? (Assume the email client looks up email addresses through a Type A query and that the target host only runs an email server.)</p> <p>What is the difference between recursive and iterative DNS queries?</p>"},{"location":"Network/8.questions/Chapter2.html#section-25","title":"SECTION 2.5\"","text":"<p>Under what circumstances is file downloading through P2P much faster than through a centralized client-server approach? Justify your answer using Equation 2.2.</p> <p>Consider a new peer Alice that joins BitTorrent without possessing any chunks. Without any chunks, she cannot become a top-four uploader for any of the other peers, since she has nothing to upload. How then will Alice get her first chunk?</p> <p>Assume a BitTorrent tracker suddenly becomes unavailable. What are its consequences? Can files still be downloaded?</p>"},{"location":"Network/8.questions/Chapter2.html#section-26","title":"SECTION 2.6\"","text":"<p>CDNs typically adopt one of two different server placement philosophies. Name and briefly describe them.</p> <p>Besides network-related considerations such as delay, loss, and bandwidth performance, there are other important factors that go into designing a CDN server selection strategy. What are they?</p>"},{"location":"Network/8.questions/Chapter2.html#section-27","title":"SECTION 2.7\"","text":"<p>In Section 2.7, the UDP server described needed only one socket, whereas the TCP server needed two sockets. Why? If the TCP server were to support n simultaneous connections, each from a different client host, how many sockets would the TCP server need?</p> <p>For the client-server application over TCP described in Section 2.7, why must the server program be executed before the client program? For the client-server application over UDP, why may the client program be executed before the server program?</p>"},{"location":"Network/8.questions/Chapter3.html","title":"Chapter 3","text":"<p>1. Suppose Client A requests a web page from Server S through HTTP and its socket is associated with port 33000.</p> <p>a. What are the source and destination ports for the segments sent from A to S?</p> <p>b. What are the source and destination ports for the segments sent from S to A?</p> <p>c. Can Client A contact to Server S using UDP as the transport protocol?</p> <p>d. Can Client A request multiple resources in a single TCP connection?</p>"},{"location":"Supercomputing/1.introduction_to_HPC.html","title":"1. Introduction to HPC","text":""},{"location":"Supercomputing/1.introduction_to_HPC.html#11-what-is-high-performance-computing","title":"1.1 What is high-performance computing?","text":"<p>Supercomputer is defined as using computing power that is vastly larger than available in a typical desktop computer.</p>"},{"location":"Supercomputing/1.introduction_to_HPC.html#paradigms-of-science","title":"Paradigms of science","text":"<p>\ud83d\udd18 The three paradigms of science</p> <ul> <li>Experimental science: observations and measurements</li> <li>Theoretical science: develops models which fit or \u201cexplain\u201d measurements</li> <li>Computational science: design, implementation, and use of mathematical models to analyse and solve scientific problems via computer simulations and numerical analysis</li> </ul> <p>\ud83d\udd18 Data science: new paradigm</p> <p>Data science can be defined as a field that uses various mathematical methods and algorithms to extract knowledge and insight from data.</p> <p>Related to machine learning(probabilistic models) and artificial intelligence(as a system, it learns from itself).</p>"},{"location":"Supercomputing/1.introduction_to_HPC.html#hpc","title":"HPC","text":"<p>Problem with traditional desktop computer</p> <p>Solving the problem which contains enormous computing work with standard computers might take years or be impossible as the problem cannot fit into memory.</p> <p>Compared to single-used measure machines(particle accelerator, radiotelescope...) in different field, supercomputers can be used in multitude of application areas.</p> <ul> <li>Fundamental sciences such as particle physics and cosmology</li> <li>Climate, weather and earth sciences</li> <li>Life sciences and medicine</li> <li>Chemistry and material science</li> <li>Energy, e.g oil and gas exploration and fusion research</li> <li>Engineering, e.g. infrastructure and manufacturing</li> <li>Data analysis</li> <li>Artificial intelligence and machine learning</li> </ul>"},{"location":"Supercomputing/1.introduction_to_HPC.html#12-key-terms","title":"1.2  Key terms","text":"<p>\ud83d\udd18 CPU</p> <ul> <li>central processing unit which performs logical, arithmetic, controlling and input/output operations.</li> <li>Household computers usually have 4-8 cores(processing units), while server processors may have 64 cores.</li> </ul> <p>\ud83d\udd18 GPU</p> <ul> <li>graphics processing unit which specialized in very simple but fast arithmetic.</li> <li>called \"accelerators\" because it accelerates the massive amount of calculations done in HPC.</li> </ul> <p>\ud83d\udd18 Disk : long term storage used by a computer. Slow read and write.</p> <p>\ud83d\udd18 Memory : random access memory (RAM), temporary storage from runtime program data. Fast R/W but wiped after shutting off computer. </p> <p>\ud83d\udd18 Cache : special memory, extremely small and fast.</p> <p>\ud83d\udd18 Node :</p> <ul> <li>Basic block of supercomputer, contains CPUs and memory.</li> <li>equivalent to a desktop computer. In reverse, laptops/desktop can be a node in supercomputer.</li> </ul> <p>\ud83d\udd18 Cluster/Supercomputer : formed by connecting a set of nodes together via a fast network.</p> <p>\ud83d\udd18 Interconnect : high-speed network connecting hundreds or thousands of nodes</p> <p>\ud83d\udd18 Virtualization : simulating the necessary hardware for a guest operating system. Virtualization makes \\(x\\) nodes to be treated as a whole vm.</p> <p>\ud83d\udd18 Virtual Machine : independent computer that is simulated using virtualization technology.</p> <p>\ud83d\udd18 MPI</p> <ul> <li>message passing interface, allowing multiple nodes or cores to communicate with each other, and execute computation in parallel.</li> <li>MPI allocates isolated memory for each task.</li> <li>different levels of abstraction: CPU, nodes...</li> </ul> <p>\ud83d\udd18 OpenMP :</p> <ul> <li>a parallel programming approach that is based on a shared memory model</li> <li>Program is split into multiple tasks which can exchange information by directly R/W to the common shared memory.</li> <li>levels of abstraction: only within a single node</li> </ul>"},{"location":"Supercomputing/1.introduction_to_HPC.html#3-examples-of-hpc-applications","title":"3. Examples of HPC applications","text":"<ul> <li>Collisions of nanoparticles</li> <li>Spreading of aerosols in the air</li> <li>Climate change</li> <li>Natural language processing</li> <li>Cancer diagnosis</li> </ul>"},{"location":"Supercomputing/2.what_is_a_supercomputer.html","title":"2. What is a supercomputer?","text":""},{"location":"Supercomputing/2.what_is_a_supercomputer.html#21-history-of-supercomputing","title":"2.1 History of supercomputing","text":"<ul> <li>gears, levers, curved plates computer, not for programming</li> <li>1945 ENIAC, electronic programmable general-purpose computer</li> <li>1964 CDC 6600, term of supercomputer created</li> <li>1990s, supercomputer based more on commodity processors.</li> <li>2005, no longer follows Moore's law. Instead performance has been increased by adding multiple cores to a single CPU.</li> </ul>"},{"location":"Supercomputing/2.what_is_a_supercomputer.html#22-supercomputing-in-finland-and-at-csc","title":"2.2 Supercomputing in Finland and at CSC","text":""},{"location":"Supercomputing/2.what_is_a_supercomputer.html#23-modern-supercomputer","title":"2.3 Modern supercomputer","text":""},{"location":"Supercomputing/2.what_is_a_supercomputer.html#components-of-high-performance-computing","title":"Components of High Performance Computing","text":"<p>Modern supercomputers are built using the same basic elements, such as CPUs(processors), GPU, memory, and disk, found in desktop computers. It also utilizes interconnect.</p> <p>A supercomputer gets its power from all these CPU cores and GPUs working together simultaneously \u2013 working in parallel.</p>"},{"location":"Supercomputing/2.what_is_a_supercomputer.html#24-supercomputer-performance","title":"2.4 Supercomputer performance","text":"<p>\ud83d\udd18 Measurement Standard:  floating-point operations per second (FLOP/s)</p> <p>\ud83d\udd18 Theoretical Computing Power of a CPU core: \\(\\text{clock speed} * \\text{FLOP/s}\\).</p> <p>\ud83d\udd18 Real performance is less than theoretical capability. (bounded by speed of CPU access to the memory; intercommunicate with other nodes)</p> <p>\ud83d\udd18 Mahti has a theoretical peak performance of 7.5 PFLOP/s. LUMI has 428.70 PFLOP/s.</p>"},{"location":"Supercomputing/2.what_is_a_supercomputer.html#25-data-storage","title":"2.5 Data storage","text":"<p>Storage is an important factor of supercomputer performance.</p> <p>\ud83d\udd18 Two common types of disk drives</p> <ul> <li>Hard disk drives (HDD) that use one or more rotating discs and rely on magnetic storage. [Cheap, slow, used for main storage]</li> <li>Solid-state drives (SSD) that have no moving mechanical parts but use flash memory like the one in a USB flash drive. [Expensive, fast, used for high-speed storage]</li> </ul> <p>\ud83d\udd18 Parallel file system: applications R/W multiple disks simultaneously; multiple users to utilize the same storage simultaneously. Lustre, GPFS, BeeGFS, and Ceph... </p> <p>\ud83d\udd18 Mahti has a storage of 8.7 petabytes (PB) or 8,700 terabytes (TB), equivalent to over 170,000 Blu-rays.</p>"},{"location":"Supercomputing/2.what_is_a_supercomputer.html#26-hpc-and-cloud-computing","title":"2.6 HPC and cloud computing","text":"<p>Problem with massively parallel processing</p> <ul> <li>The users are limited to the available software stack and must wait for the specific resources to be free. </li> <li>They are also limited to a fixed available storage capacity.</li> </ul> <p>\ud83d\udd18 Cloud computing: User access to a pool of configurable computing resources available on demand.</p> <p>\ud83d\udd18 Advantage of cloud computing:</p> <ul> <li>on-demand self-service (automation, everything provided by the service provider)</li> <li>resilience and elasticity (no data loss or downtimes in case of hardware failure)</li> <li>flexibility and scalability (for the user, resources are seemingly unlimited)</li> </ul> <p>\ud83d\udd18 Three common kinds of cloud resources: IaaS, PaaS, SaaS</p>"},{"location":"Supercomputing/2.what_is_a_supercomputer.html#27-top-supercomputers","title":"2.7 Top supercomputers","text":"<ul> <li>Fugaku, Japan(2nd)</li> <li>Summit, USA</li> <li>Sunway TaihuLight, China\ud83d\ude00</li> <li>LUMI, Finland(3rd)</li> <li>Frontier, USA(1st), also most energy-efficient</li> </ul>"},{"location":"Supercomputing/2.what_is_a_supercomputer.html#29-introduction-to-lumi","title":"2.9 Introduction to LUMI","text":"<ul> <li>429 petaflop/s</li> <li>1.5 million ordinary laptops</li> <li>one of the world's most advanced platforms for artificial intelligence</li> <li>MI250X GPUs</li> <li>a storage of 117 petabytes and an aggregated I/O bandwidth of two terabytes per second</li> <li>very fast Cray Slingshot interconnect with 200 Gbit/s performance, the global bandwidth of the LUMI-GPU partition is 160 TB/s</li> <li>150 m2 of floor space; 150 000 kilograms (150 metric tons).</li> </ul>"},{"location":"Supercomputing/3.running_and_using_a_supercomputer.html","title":"3. Running and using a supercomputer","text":""},{"location":"Supercomputing/3.running_and_using_a_supercomputer.html#31-hpc-centers","title":"3.1 HPC centers","text":""},{"location":"Supercomputing/3.running_and_using_a_supercomputer.html#32-energy-and-cooling","title":"3.2 Energy and cooling","text":"<p>\ud83d\udd18 Energy consumption is one of the biggest challenges when designing and building more powerful supercomputers</p> <p>\ud83d\udd18Two most common approaches of cooling</p> <ul> <li>air cooling, where a steady airflow is run through the supercomputer</li> <li>liquid cooling, where water or other suitable liquid is circulated through the system carrying the heat away.</li> </ul>"},{"location":"Supercomputing/3.running_and_using_a_supercomputer.html#33-how-to-buy-a-supercomputer","title":"3.3 How to buy a supercomputer?","text":"<ul> <li>each one customized and unique.</li> <li>computing centers typically buy technology that will only be available later, sometimes even after a few years.(predict the performance of a system that does not yet exist)</li> <li>request for proposals (RFP) is prepared with all relevant details and requirements.</li> </ul>"},{"location":"Supercomputing/3.running_and_using_a_supercomputer.html#34-how-to-access-a-supercomputer","title":"3.4 How to access a supercomputer?","text":"<p>\ud83d\udd18 Access ways:</p> <ul> <li>via command line.</li> <li>web browser-based access(for example puhti.css.fi)</li> </ul> <p>\ud83d\udd18 batch system then takes care of scheduling the distribution of the resources fairly; not monopolize the system</p> <p>\ud83d\udd18 CSC provides free access to researchers and sometimes also for students with an affiliation to Finnish higher education institutions.</p>"},{"location":"Supercomputing/3.running_and_using_a_supercomputer.html#35-operating-systems-in-supercomputers","title":"3.5 Operating systems in supercomputers","text":"<ul> <li>supercomputers -&gt; Linux</li> </ul>"},{"location":"Supercomputing/4.parallel_computing_concepts.html","title":"4. Parallel computing concepts","text":""},{"location":"Supercomputing/4.parallel_computing_concepts.html#41-computing-in-parallel","title":"4.1 Computing in parallel","text":"<ul> <li>split a computational problem into smaller subproblems.</li> <li>main problem solved: power consumption</li> </ul>"},{"location":"Supercomputing/4.parallel_computing_concepts.html#42-types-of-parallel-algorithms","title":"4.2 Types of parallel algorithms","text":"<ul> <li>trivially parallel algorithm: very little (or no) interaction between subtasks.</li> <li>tightly coupled algorithm: interact regularly, low-latency, high-speed interconnect between the CPUs is essential for good performance. </li> </ul>"},{"location":"Supercomputing/4.parallel_computing_concepts.html#exposing-parallelism","title":"Exposing Parallelism","text":"<p>\ud83d\udd18 Distributing the data</p> <ul> <li>Each processing unit (e.g., CPU core) holds a part of the data typically performing identical or very similar operations.</li> <li>cores may need to communicate.</li> </ul> <p>\ud83d\udd18 Task farm (or main/worker) approach</p> <ul> <li>One processing unit sends tasks to workers and then receives results back from them. </li> <li>Tasks can be totally different.</li> </ul> <p>\ud83d\udd18 Task farm and data-parallel approaches can also be combined.</p>"},{"location":"Supercomputing/4.parallel_computing_concepts.html#43-concepts","title":"4.3 Concepts","text":""},{"location":"Supercomputing/4.parallel_computing_concepts.html#parallel-scaling","title":"Parallel Scaling","text":"<p>\ud83d\udd18 Two types of parallel</p> <ul> <li>Strong parallel scaling: input data size is kept constant; the number of processing units is increased.</li> <li>Weak parallel scaling: both the amount of data and number of processing units are increased simultaneously.(feasible with real-world problems)</li> </ul> <p>\ud83d\udd18 Purpose of parallel programming: decrease problem-solving time.</p> <p>\ud83d\udd18 Parallel speed-up: \\(S = \\frac{T_s}{T_p}\\); \\({T_s}\\) is execution time in serial; \\({T_p}\\) is execution time when use \\(p\\) processor units.</p> <p>Increasing the number of processing units beyond a certain tipping point might conversely extend the execution time.</p>"},{"location":"Supercomputing/4.parallel_computing_concepts.html#limits-of-parallel-scaling","title":"Limits of Parallel Scaling","text":"<p>Several factors can limit parallel scaling.</p> <ul> <li>parallel overheads</li> <li>extra operations</li> <li>communication and synchronization costs</li> <li>load imbalance</li> <li>serial parts in the problem</li> </ul> <p>\ud83d\udd18 maximum possible speed-up(Amdahl's law): \\(S_{max} = \\frac{1}{1-p_f}\\); ${p_f} is the fraction of the problem that can be parallelized.</p>"},{"location":"Supercomputing/4.parallel_computing_concepts.html#_1","title":"4. Parallel computing concepts","text":""},{"location":"Supercomputing/5.more_technical_aspects_of_parallel_computing.html","title":"5.  More technical aspects of parallel computing","text":""},{"location":"Supercomputing/5.more_technical_aspects_of_parallel_computing.html#51-shared-memory-computer","title":"5.1 Shared memory computer","text":"<ul> <li>The fundamental feature of a shared-memory computer: all the CPU cores are connected to the same piece of memory.</li> <li>Memory bus: takes requests for data from multiple sources, fetches the data from a single piece of memory</li> </ul> <p>\ud83d\udd18 Key challenges</p> <ul> <li>Memory capacity</li> <li>Memory access speed: more worker -&gt; more time idle becauze in queue</li> <li>Race conditions: erase to which part?</li> </ul> <p>\ud83d\udd18 Limitations:</p> <ul> <li>connection between the bus and the memory</li> <li>memory access speed</li> </ul> <p>\ud83d\udd18 Advantages:</p> <ul> <li>relatively simple program</li> <li>trade-off: memory bus &lt;-&gt; communication between cores. (Former is usually better).</li> </ul>"},{"location":"Supercomputing/5.more_technical_aspects_of_parallel_computing.html#52-distributed-memory-computer","title":"5.2 Distributed memory computer","text":"<p>Today's approach: take lots of separate computers and connect them together with a fast network.</p> <p>Advantages</p> <ul> <li>\"Infinite\" capacity</li> <li>\"Infinite\" computing power</li> <li>No \"overcrowding\" of the memory bus</li> <li>Low cost</li> </ul> <p>Limitations</p> <ul> <li>Possibly expensive communication</li> <li>Communication overheads</li> <li>Possibly saturated communication network</li> <li>Data requirements: can be split across all the nodes</li> <li>System and software requirements</li> </ul> <p>need to write a program that utilize thousands of CPU cores, and to build software in the distributed-memory model!</p>"},{"location":"Supercomputing/5.more_technical_aspects_of_parallel_computing.html#53-memory-hierarchy","title":"5.3 Memory hierarchy","text":"<ul> <li>a hierarchy of different levels of memory: levels of caches</li> </ul>"},{"location":"Supercomputing/5.more_technical_aspects_of_parallel_computing.html#memory-cache","title":"Memory Cache","text":"<ul> <li>A memory cache: a small amount of very fast scratchpad memory close to the CPU core.</li> </ul>"},{"location":"Supercomputing/5.more_technical_aspects_of_parallel_computing.html#writing-data","title":"Writing Data","text":"<p>Problem in caches when writing data</p> <p>All caches need to be notified -&gt; an overhead grows with the number of CPU cores -&gt; more cpu cores, slower!!</p> <p>\ud83d\udd18 cache coherency: Keeping the data consistent and up to date on all the CPU cores. </p>"},{"location":"Supercomputing/5.more_technical_aspects_of_parallel_computing.html#types-of-memory","title":"Types of Memory","text":"<ul> <li>Registers</li> <li>L1, L2, L3 caches</li> <li>Main memory</li> <li>Remote memory</li> <li>Disks</li> </ul> <p>\ud83d\udd18 The pyramid order is:</p> <ul> <li>performance(fast -&gt; slow MB/s)</li> <li>physical location(to cpu)</li> <li>access time(fast -&gt; slow)</li> <li>capacity(small -&gt; large)</li> <li>cost per byte(expensive -&gt; cheap)</li> </ul>"},{"location":"Supercomputing/5.more_technical_aspects_of_parallel_computing.html#54-parallelization-within-cpu-core","title":"5.4 Parallelization within CPU core","text":"<p>Modern CPU cores can perform additional parallel operations within the core.</p> <p>\ud83d\udd18 Two different type of within cpu Parallelization:</p> <ul> <li>Instruction-level parallelism (ILP): the ability of the CPU core to simultaneously execute multiple instructions within one clock cycle. (e.g: two <code>add</code> in same time)</li> <li>Vectorization\uff1a the ability of the CPU core to perform operations on multiple data simultaneously.(e.g. longer register to store shorter data, <code>__mm128i</code> for two 64 bits).</li> </ul>"},{"location":"Supercomputing/5.more_technical_aspects_of_parallel_computing.html#55-graphics-processing-units","title":"5.5 Graphics processing units","text":"<ul> <li>CPU: more complex! general purpose, fast and versatile, designed to run operating systems and various, very different types of applications.</li> <li>GPU: less powerful, high amount of parallelism.</li> <li>GPUs need CPUs on their side.</li> </ul> <p>LUMI supercomputer uses AMD GPUs.</p>"},{"location":"Supercomputing/5.more_technical_aspects_of_parallel_computing.html#56-interconnect","title":"5.6 interconnect","text":"<p>\ud83d\udd18 Two main characteristics of an interconnect</p> <ul> <li>latency: minimum time it takes to do anything</li> <li>bandwidth: the rate at which large amounts of data are transferred</li> </ul> <p>\ud83d\udd18 The network topology: how the connections between the nodes are arranged.</p> <ul> <li>simplest topology is a fully connected network(too complex and costly)</li> <li>a CPU core in a node might only need to communicate with a few fixed cores in another node.</li> <li>dynamically changing target</li> </ul> <p>\ud83d\udd18 Mahti network topology</p> <p>Dragonfly topology: nodes are divided into six dragonfly groups with 234 nodes in each</p>"},{"location":"Supercomputing/5.more_technical_aspects_of_parallel_computing.html#57-maximum-practical-performance","title":"5.7 Maximum practical performance","text":"<p>Worst part: interconnect</p> <p>In best scenarios, such as in the case of the LINPACK benchmark, it is possible to reach up to 80% of the theoretical peak performance of a supercomputer.</p>"},{"location":"Supercomputing/openMP.html","title":"OpenMP","text":""},{"location":"Supercomputing/MPI/index.html","title":"MPI","text":""},{"location":"Supercomputing/MPI/index.html#introduction","title":"Introduction","text":"<p>\ud83d\udd18 What is MPI?</p> <p>Programs pass messages through some processes in order to finish parallel tasks. In practice, it's easy to implement parallel tasks by MPI. For example manager process can send a message to describe a new job, and assign the job to the latter.</p> <p>\ud83d\udd18 Concepts in MPI</p> <ul> <li>communicator: define a set of processes which can send message to each other</li> <li>rank: inside a communicator, each of the process has a number(called rank). Processes communicate explicitly by specifying ranks.</li> <li>tag: each message has its unique tag.</li> </ul>"},{"location":"Supercomputing/MPI/index.html#tasks","title":"Tasks","text":""},{"location":"Supercomputing/MPI/index.html#introduction-to-mpi","title":"Introduction to MPI","text":"<ul> <li> Hello world</li> </ul>"},{"location":"Supercomputing/MPI/index.html#point-to-point-communication","title":"Point-to-point communication","text":"<ul> <li> Message exchange</li> <li> Parallel pi with two processes</li> </ul>"},{"location":"Supercomputing/MPI/index.html#special-mpi-variables-and-communication-patterns","title":"Special MPI variables and communication patterns","text":"<ul> <li> Message chain</li> <li> Parallel pi revisited</li> <li> (Bonus) Broadcast and scatter</li> </ul>"},{"location":"Supercomputing/MPI/index.html#collective-operations","title":"Collective operations","text":"<ul> <li> Collective operations</li> </ul>"},{"location":"Supercomputing/MPI/index.html#debugging","title":"Debugging","text":"<ul> <li> Debugging</li> </ul>"},{"location":"Supercomputing/MPI/index.html#heat-equation","title":"Heat equation","text":"<ul> <li> Parallel heat equation solver: First three tasks</li> </ul>"},{"location":"Supercomputing/MPI/index.html#custom-communicators","title":"Custom communicators","text":"<ul> <li> Communicators and collectives</li> </ul>"},{"location":"Supercomputing/MPI/index.html#non-blocking-communication-and-persistent-communication","title":"Non-blocking communication and persistent communication","text":"<ul> <li> Message chain revisited</li> </ul>"},{"location":"Supercomputing/MPI/index.html#process-topologies","title":"Process topologies","text":"<ul> <li> Cartesian grid process topology</li> <li> Message chain with Cartesian communicator</li> </ul>"},{"location":"Supercomputing/MPI/index.html#user-defined-datatypes","title":"User-defined datatypes","text":"<ul> <li> Custom datatypes</li> <li> Modifying extent</li> <li> Communicating struct</li> </ul>"},{"location":"Supercomputing/MPI/index.html#heat-equation-contd","title":"Heat equation cont'd","text":"<ul> <li> Parallel heat equation solver: Remaining tasks</li> </ul>"},{"location":"Supercomputing/MPI/1.introduction.html","title":"1. Introduction to MPI","text":"<p>Take Away</p> <ul> <li><code>MPI_Init(&amp;argc, &amp;argv)</code>: init the MPI environment. All the global variable and local variable will be created(communicator, ranks...).</li> <li><code>MPI_Comm_size(MPI_Comm communicator, int* size)</code>: get the size of communicator.</li> <li><code>MPI_Comm_rank()</code>: get the rank of current process.</li> <li><code>MPI_Get_processor_name()</code>: get name of processor.</li> <li><code>MPI_Finalize()</code>: clean MPI environment. After this no other MPI command can be used.</li> <li><code>MPI_COMM_WORLD</code>: MPI automatically generate communicator.</li> <li><code>mpicc -o my_mpi_exe test.c</code>: compile.</li> <li><code>mpiexec -n 4 ./my_mpi_exe</code>: run program with 4 processes.</li> </ul>"},{"location":"Supercomputing/MPI/1.introduction.html#11-hello-world","title":"1.1 Hello-world","text":"Code Local Result Puhti Result <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;mpi.h&gt;\n\nint main(int argc, char *argv[])\n{\n    // TODO: say hello! in parallel\n    MPI_Init(&amp;argc,&amp;argv);\n\n    // Get the number of processes\n    int n;\n    MPI_Comm_size( MPI_COMM_WORLD , &amp; n);\n\n    // Get the rank of processes\n    int rank;\n    MPI_Comm_rank( MPI_COMM_WORLD ,&amp; rank);\n\n    char processor_name[MPI_MAX_PROCESSOR_NAME];\n    int name_len;\n    MPI_Get_processor_name( processor_name , &amp;name_len);\n    printf(\"Hello world from processor %s, rand %d out of %d processor\\n\", processor_name, rank, n);\n\n    MPI_Finalize();\n    return 0;\n}\n</code></pre> <pre><code>[xiezhong@puhti-login11 mpi]$ mpiexec -n 4 ./hello-world/hello_world.exe \nMPI startup(): Warning: I_MPI_PMI_LIBRARY will be ignored since the hydra process manager was found\nMPI startup(): Warning: I_MPI_PMI_LIBRARY will be ignored since the hydra process manager was found\nMPI startup(): Warning: I_MPI_PMI_LIBRARY will be ignored since the hydra process manager was found\nMPI startup(): Warning: I_MPI_PMI_LIBRARY will be ignored since the hydra process manager was found\nHello world from processor puhti-login11.bullx, rand 0 out of 4 processor\nHello world from processor puhti-login11.bullx, rand 1 out of 4 processor\nHello world from processor puhti-login11.bullx, rand 2 out of 4 processor\nHello world from processor puhti-login11.bullx, rand 3 out of 4 processor\n</code></pre> <p><pre><code>[xiezhong@puhti-login11 mpi]$ squeue -u $USER\n         JOBID PARTITION     NAME     USER ST       TIME  NODES NODELIST(REASON)\n      20170858     small hello-wo xiezhong  R       0:11      1 r02c32\n</code></pre> Here is the result in file <code>slurm-20170858.out</code> <pre><code>Hello world from processor r02c32.bullx, rand 1 out of 4 processor\nHello world from processor r02c32.bullx, rand 2 out of 4 processor\nHello world from processor r02c32.bullx, rand 3 out of 4 processor\nHello world from processor r02c32.bullx, rand 0 out of 4 processor\n</code></pre></p>"},{"location":"Supercomputing/MPI/10.user_defined_types.html","title":"10. User-defined datatypes","text":"<p>Take Away</p> <ul> <li><code>MPI_Type_vector(count,blocklength,stride,oldtype,newtype)</code></li> <li><code>MPI_Type_indexed(count,array_of_blocklengths,array_of_displacemets,oldtype,newtype)</code></li> <li><code>MPI_Type_create_subarray(ndims,array_of_sizes, array_of_subsizes,array_of_starts, order, oldtype, newtype)</code></li> </ul>"},{"location":"Supercomputing/MPI/10.user_defined_types.html#101-custom-datatypes","title":"10.1 Custom datatypes","text":""},{"location":"Supercomputing/MPI/10.user_defined_types.html#a-column","title":"A column","text":"Code Puhti Result <pre><code>MPI_Datatype new_type;\nMPI_Type_vector( 8 , 1 , 8 , MPI_INT , &amp;new_type); // a column\n// MPI_Type_vector( 8 , 1 , 1 , MPI_INT , &amp;new_type); // a row\nMPI_Type_commit( &amp;new_type);\nif(0 == rank){\n    MPI_Send(&amp;array[0][1], 1, new_type, 1, 1, MPI_COMM_WORLD);\n} else{\n    MPI_Recv(&amp;array[0][1], 1, new_type, 0, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);\n}\nMPI_Type_free(&amp;new_type);\n</code></pre> <pre><code>Data on rank 0\n11 12 13 14 15 16 17 18\n21 22 23 24 25 26 27 28\n31 32 33 34 35 36 37 38\n41 42 43 44 45 46 47 48\n51 52 53 54 55 56 57 58\n61 62 63 64 65 66 67 68\n71 72 73 74 75 76 77 78\n81 82 83 84 85 86 87 88\nReceived data on rank 1\n0 12  0  0  0  0  0  0\n0 22  0  0  0  0  0  0\n0 32  0  0  0  0  0  0\n0 42  0  0  0  0  0  0\n0 52  0  0  0  0  0  0\n0 62  0  0  0  0  0  0\n0 72  0  0  0  0  0  0\n0 82  0  0  0  0  0  0\n</code></pre>"},{"location":"Supercomputing/MPI/10.user_defined_types.html#indexed-elements","title":"Indexed elements","text":"Code Puhti Result <pre><code>int array_of_blocklengths[4] = {1,2,3,4};\nint array_of_displacements[4] = {0,17,17,17};\nfor(int i = 1; i &lt; 4; i++) array_of_displacements[i] += array_of_displacements[i-1];\nMPI_Type_indexed( 4 ,  array_of_blocklengths , array_of_displacements , MPI_INT, &amp;new_type);\n</code></pre> <pre><code>Data on rank 0\n11 12 13 14 15 16 17 18\n21 22 23 24 25 26 27 28\n31 32 33 34 35 36 37 38\n41 42 43 44 45 46 47 48\n51 52 53 54 55 56 57 58\n61 62 63 64 65 66 67 68\n71 72 73 74 75 76 77 78\n81 82 83 84 85 86 87 88\nReceived data on rank 1\n11  0  0  0  0  0  0  0\n0  0  0  0  0  0  0  0\n0 32 33  0  0  0  0  0\n0  0  0  0  0  0  0  0\n0  0 53 54 55  0  0  0\n0  0  0  0  0  0  0  0\n0  0  0 74 75 76 77  0\n0  0  0  0  0  0  0  0\n</code></pre>"},{"location":"Supercomputing/MPI/10.user_defined_types.html#subarray","title":"Subarray","text":"Code Puhti Result <pre><code>int array_of_sizes[2] = {8,8};\nint sub_array_of_sizes[2] = {4,4};\nint offset[2] = {2,2};\nMPI_Type_create_subarray( 2 , array_of_sizes, sub_array_of_sizes, offset, MPI_ORDER_C , MPI_INT, &amp;new_type);\nMPI_Type_commit( &amp;new_type);\n</code></pre> <pre><code>Data on rank 0\n11 12 13 14 15 16 17 18\n21 22 23 24 25 26 27 28\n31 32 33 34 35 36 37 38\n41 42 43 44 45 46 47 48\n51 52 53 54 55 56 57 58\n61 62 63 64 65 66 67 68\n71 72 73 74 75 76 77 78\n81 82 83 84 85 86 87 88\nReceived data on rank 1\n0  0  0  0  0  0  0  0\n0  0  0  0  0  0  0  0\n0  0 33 34 35 36  0  0\n0  0 43 44 45 46  0  0\n0  0 53 54 55 56  0  0\n0  0 63 64 65 66  0  0\n0  0  0  0  0  0  0  0\n0  0  0  0  0  0  0  0\n</code></pre>"},{"location":"Supercomputing/MPI/10.user_defined_types.html#102-modifying-extent","title":"10.2 Modifying extent","text":"<p>Verify that the datatype works by communicating a single column/row</p> <p>With <code>array[8][6]</code>, modified code to <code>MPI_Type_vector( 8 , 1 , 6 , MPI_INT , &amp;vector);</code> then it works.</p> <p>Try to send multiple columns / rows. What happens? Can you explain why?</p> <ul> <li>Sending two rows/cols with different <code>tags</code> seems to be fine.     <pre><code>11 12 13 14 15 16\n0  0  0  0  0  0\n0  0  0  0  0  0\n0  0  0  0  0  0\n51 52 53 54 55 56\n0  0  0  0  0  0\n0  0  0  0  0  0\n0  0  0  0  0  0\n</code></pre></li> <li>Sending a row + a col seems to be fine too.     <pre><code>11  0  0  0  0  0\n21  0  0  0  0  0\n31  0  0  0  0  0\n41  0  0  0  0  0\n51 52 53 54 55 56\n61  0  0  0  0  0\n71  0  0  0  0  0\n81  0  0  0  0  0\n</code></pre></li> <li>If change the datatypes to two rows, it works too(The data is continuous).</li> <li>If change the datatypes to two columns, it cannot be changed with simple parameters?</li> </ul> <p>Create a new datatype with resized extent, so that communicating multiple columns / rows succeeds.</p> <p>Temporary terminate</p> <p>Without context, bit of hard to understand what to do here.</p>"},{"location":"Supercomputing/MPI/10.user_defined_types.html#103-communicating-struct","title":"10.3 Communicating struct","text":""},{"location":"Supercomputing/MPI/2.point_to_point.html","title":"2. Point-to-point communication","text":"<p>Take Away</p> <ul> <li><code>MPI_Barrier</code>: Synchronization between processes wait until everybody within the communicator reaches the call.</li> <li><code>MPI_Send(void* data, int count, MPI_Datatype datatype, int destination, int tag, MPI_Comm communicator)</code>: send <code>count</code> data of type <code>datatype</code>. The <code>destination</code> is the rank of receiver, and <code>tag</code> belongs to the message.</li> <li><code>MPI_Recv(void* data, int count, MPI_Datatype datatype, int source, int tag, MPI_Comm communicator, MPI_Status* status)</code>: arguments are similar to <code>MPI_Send</code>, with an additional <code>status</code> specifying the status of whether the message is received successfully.</li> <li><code>MPI_Get_count( const MPI_Status *status, MPI_Datatype datatype, int *count )</code>: number of received elements.</li> </ul>"},{"location":"Supercomputing/MPI/2.point_to_point.html#21-message-exchange","title":"2.1 Message exchange","text":"Code Puhti Result <pre><code>if (myid == 0) {\n    MPI_Send(message, size, MPI_INT, 1,1,MPI_COMM_WORLD);\n    MPI_Recv(receiveBuffer, size, MPI_INT, 1,2,MPI_COMM_WORLD, &amp;status);\n    int nrecv;\n    MPI_Get_count(&amp;status, MPI_INT, &amp;nrecv);\n    printf(\"Rank %i received %i elements, first %i\\n\", myid, nrecv, receiveBuffer[0]);\n} else if (myid == 1) {\n    MPI_Send(message, size, MPI_INT, 0,2,MPI_COMM_WORLD);\n    MPI_Recv(receiveBuffer, size, MPI_INT, 0,1,MPI_COMM_WORLD, &amp;status);\n    int nrecv;\n    MPI_Get_count(&amp;status, MPI_INT, &amp;nrecv);\n    printf(\"Rank %i received %i elements, first %i\\n\", myid, nrecv, receiveBuffer[0]);\n}\n</code></pre> <pre><code>Rank 0 received 100 elements, first 1\nRank 1 received 100 elements, first 0\n</code></pre> <p>Try increasing the message size (e.g. to 100000), recompile and run. What happens?</p> <p>Get the result of time limit <pre><code>slurmstepd: error: *** STEP 20173362.0 ON r07c20 CANCELLED AT 2024-01-22T12:46:27 DUE TO TIME LIMIT ***\n</code></pre></p> <p>What if you reorder the send and receive calls in one of the processes?</p> <p>The program still run and get the correct answer. <pre><code>Rank 0 received 100 elements, first 1\nRank 1 received 100 elements, first 0\n</code></pre></p>"},{"location":"Supercomputing/MPI/2.point_to_point.html#22-parallel-pi-with-two-processes-program","title":"2.2 Parallel pi with two processes Program","text":"Code Puhti Result(840) <pre><code>MPI_Init(&amp;argc, &amp;argv);\nMPI_Status status;\nint myid, istart, istop;\nMPI_Comm_rank(MPI_COMM_WORLD, &amp;myid);\nprintf(\"Computing approximation to pi with N=%d\\n\", n);\n// test id to decide range\nistart = myid == 0 ? 1: n/2+1;\nistop = myid == 0? n/2: n;\n// calculate result\ndouble pi = 0.0;\nfor (int i=istart; i &lt;= istop; i++) {\n    double x = (i - 0.5) / n;\n    pi += 1.0 / (1.0 + x*x);\n}\npi *= 4.0 / n;\n// send or recv result based on id\nif(myid == 1){\n    MPI_Send( &amp;pi, 1, MPI_DOUBLE, 0 , 1, MPI_COMM_WORLD);\n} else{\n    double pi_other;\n    MPI_Recv( &amp;pi_other , 1, MPI_DOUBLE ,1 , 1 , MPI_COMM_WORLD , &amp;status);\n    pi += pi_other;\n    printf(\"Approximate pi=%18.16f (exact pi=%10.8f)\\n\", pi, M_PI);\n}    \n</code></pre> <pre><code>Computing approximation to pi with N=840\nApproximate pi=3.1415927716925891\nComputing approximation to pi with N=840\n</code></pre> <p>Compare the result to the that of the serial calculation, do you get exactly the same result? If not, can you explain why?</p> <ul> <li>Serial result  :pi=3.1415927716925873</li> <li>Parallel result:pi=3.1415927716925891</li> <li>Not the same possibly because of division operations in floating number losing accuracy. (<code>double x = (i - 0.5) / n, pi *= 4.0 / n</code>)</li> </ul>"},{"location":"Supercomputing/MPI/3.special_mpi_varables.html","title":"3. Special MPI variables and communication patterns","text":"<p>Take Away</p> <ul> <li><code>MPI_Sendrecv(const void *sendbuf, int sendcount, MPI_Datatype sendtype, int dest, int sendtag, void *recvbuf, int recvcount, MPI_Datatype recvtype, int source, int recvtag, MPI_Comm comm, MPI_Status * status)</code> This function wrap <code>send/recv</code>, but the communicator must be the same.</li> </ul>"},{"location":"Supercomputing/MPI/3.special_mpi_varables.html#31-message-chain","title":"3.1 Message chain","text":"Send &amp; Recv Sendrecv Puhti Result <ul> <li>Every sender sends message with tag <code>tag+1</code> to <code>rank+1</code> receiver</li> <li>Every receiver gets message with tag <code>tag</code> from <code>rank-1</code> sender <pre><code>destination = myid &lt; ntasks - 1 ? myid + 1 : MPI_PROC_NULL;\nsource = myid &gt; 0 ? myid - 1 : MPI_PROC_NULL;\nMPI_Send(message.data(), size, MPI_INT, destination, myid+1, MPI_COMM_WORLD);\nprintf(\"Sender: %d. Sent elements: %d. Tag: %d. Receiver: %d\\n\",\n       myid, size, myid + 1, destination);\nMPI_Recv(receiveBuffer.data(), size, MPI_INT, source, myid, MPI_COMM_WORLD,&amp;status);\nprintf(\"Receiver: %d. first element %d.\\n\",\n       myid, receiveBuffer[0]);\n</code></pre></li> </ul> <ul> <li>Use <code>Sendrecv</code> function can wrap two function together. <pre><code>destination = myid + 1; // ignore edge cases \nsource = myid - 1;\nMPI_Sendrecv(message, size, MPI_INT, destination, myid + 1,\n            receiveBuffer, size, MPI_INT, source, MPI_ANY_TAG,\n            MPI_COMM_WORLD, &amp;status);\n</code></pre></li> </ul> <pre><code>Sender: 0. Sent elements: 10000000. Tag: 1. Receiver: 1\nReceiver: 0. first element -1.\nSender: 1. Sent elements: 10000000. Tag: 2. Receiver: 2\nReceiver: 1. first element 0.\nSender: 2. Sent elements: 10000000. Tag: 3. Receiver: 3\nReceiver: 2. first element 1.\nSender: 3. Sent elements: 10000000. Tag: 4. Receiver: -2\nReceiver: 3. first element 2.\nTime elapsed in rank  0:  0.023\nTime elapsed in rank  1:  0.023\nTime elapsed in rank  2:  0.015\nTime elapsed in rank  3:  0.008\n</code></pre> <p>Investigate the timings with different numbers of MPI tasks (e.g. 2, 4, 8, 16, ...)</p> <p>With <code>recv</code> and <code>send</code>:</p> <ul> <li>2 nodes -&gt; Time elapsed in rank  0:  0.007</li> <li>4 nodes -&gt; Time elapsed in rank  0:  0.023</li> <li>8 nodes -&gt; Time elapsed in rank  0:  0.119</li> <li>16 nodes -&gt; Time elapsed in rank  0:  0.177</li> <li>Some of nodes always spend more time than others, time differs a lot.</li> </ul> <p>With <code>Sendrecv</code>:</p> <ul> <li>2 nodes -&gt; TIME LIMIT?(Potential deadlock )</li> <li>4 nodes -&gt; Time elapsed in rank  0:  0.042</li> <li>8 nodes -&gt; Time elapsed in rank  0:  0.086</li> <li>16 nodes -&gt; Time elapsed in rank  0:  0.014</li> <li>All the node spend almost same time.</li> </ul>"},{"location":"Supercomputing/MPI/3.special_mpi_varables.html#32-parallel-pi-general","title":"3.2 Parallel pi general","text":"Code Puhti Result(4 nodes) Puhti Result(8 nodes) <ul> <li><code>istart</code> and <code>istop</code> is determined by <code>myid</code></li> <li>node 0 is responsible for receiving other's <code>pi</code></li> <li>other nodes sent message to node 0, tag is their own id.</li> </ul> <pre><code>int myid, istart, istop, size;\nMPI_Comm_size( MPI_COMM_WORLD , &amp;size);\nMPI_Comm_rank(MPI_COMM_WORLD, &amp;myid);\nint num_per_node = n/size;\n\nistart = myid * num_per_node + 1;\nistop = (myid  + 1)* num_per_node;\n\n// ...\nif(myid != 0){\n    MPI_Send( &amp;pi, 1, MPI_DOUBLE, 0 , myid, MPI_COMM_WORLD);\n}\nif(myid == 0)\n{\n    for(int i = 1; i &lt; size; i++){\n    double pi_other;\n    MPI_Recv( &amp;pi_other , 1, MPI_DOUBLE , i , i , MPI_COMM_WORLD , &amp;status);\n    pi += pi_other;\n    }\n}    \n</code></pre> <pre><code>Node 1 compute result: 0.874676\nNode 0 compute result: 0.979915\nComputing approximation to pi with N=840\nEach one is responsible for 210 elements.\nApproximate pi=3.1415927716925900 (exact pi=3.14159265)\nNode 2 compute result: 0.719414\nNode 3 compute result: 0.567588\n</code></pre> <pre><code>Node 0 compute result: 0.497420\nComputing approximation to pi with N=840\nEach one is responsible for 105 elements.\nApproximate pi=3.1415927716925909 (exact pi=3.14159265)\nNode 3 compute result: 0.419508\nNode 4 compute result: 0.379807\nNode 2 compute result: 0.455168\nNode 5 compute result: 0.339607\nNode 6 compute result: 0.301316\nNode 1 compute result: 0.482495\nNode 7 compute result: 0.266273\n</code></pre> <p>Run the code with different number of processes, do you get exactly the same result?</p> <ul> <li>No, same reason as before. Loss of accuracy because of floating number division.</li> </ul> <p>With MPI_ANY_SOURCE, do you get exactly the same result when run multiple times?</p> <ul> <li>same: This is a deterministic program, I don't see any random parts.</li> <li>1st: 3.1415927716925895</li> <li>2nd: 3.1415927716925895</li> <li>3rd: 3.1415927716925895</li> </ul> <p>Make a version that works with arbitrary number of processes.</p> <ul> <li>Simple version: give all the job to the last node <code>if(myid == size -1){ istop = n; }</code></li> <li>Fair version: give one to each node. The index is arranged as <pre><code>  istart =  myid * num_per_node + 1 +  ((myid &lt; remainder)? myid: remainder);\n  istop = (myid  + 1)* num_per_node + ((myid &lt; remainder)? myid + 1: remainder);\n</code></pre></li> </ul>"},{"location":"Supercomputing/MPI/3.special_mpi_varables.html#33-broadcast-and-scatter","title":"3.3 Broadcast and scatter","text":"<p>\ud83d\udd18 Broadcast:</p>  Code Puhti Result <ul> <li>In my answer the local <code>recvbuf</code> in node 0 also receive by <code>MPI_Recv</code>. But it should be transferred locally(potentially deadlock)?</li> </ul> <pre><code>if(0 == myid){\n    for(int i = 0; i &lt; ntasks; i ++ ){\n    MPI_Send( sendbuf.data() , size, MPI_INT , i , i , MPI_COMM_WORLD);\n    }\n}\nMPI_Recv(recvbuf.data(), size, MPI_INT, 0, myid, MPI_COMM_WORLD, &amp;status);\n</code></pre> <pre><code>Task  0:  0  1  2  3  4  5  6  7  8  9 10 11\nTask  1: -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\nTask  2: -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\nTask  3: -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n\nTask  0:  0  1  2  3  4  5  6  7  8  9 10 11\nTask  1:  0  1  2  3  4  5  6  7  8  9 10 11\nTask  2:  0  1  2  3  4  5  6  7  8  9 10 11\nTask  3:  0  1  2  3  4  5  6  7  8  9 10 11\n</code></pre> <p>\ud83d\udd18 Scatter </p>  Code Puhti Result <ul> <li>In my answer I put the received data in its original place.</li> </ul> <pre><code>int block_size = size / ntasks;\nif(0 == myid){\n    for(int i = 0; i &lt; ntasks; i ++ )\n    MPI_Send( sendbuf.data() + block_size*i, block_size, MPI_INT , i , i , MPI_COMM_WORLD);\n}\nMPI_Recv(recvbuf.data() + block_size* myid, block_size, MPI_INT, 0, myid, MPI_COMM_WORLD, &amp;status);\n</code></pre> <pre><code>Task  0:  0  1  2  3  4  5  6  7  8  9 10 11\nTask  1: -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\nTask  2: -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\nTask  3: -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n\nTask  0:  0  1  2 -1 -1 -1 -1 -1 -1 -1 -1 -1\nTask  1: -1 -1 -1  3  4  5 -1 -1 -1 -1 -1 -1\nTask  2: -1 -1 -1 -1 -1 -1  6  7  8 -1 -1 -1\nTask  3: -1 -1 -1 -1 -1 -1 -1 -1 -1  9 10 11\n</code></pre>"},{"location":"Supercomputing/MPI/4.collectives.html","title":"4. Collectives","text":"<p>Take Away</p> <ul> <li><code>MPI_Bcast( ..., int root , ...)</code> broadcast data from <code>root</code> to any other node.</li> <li><code>MPI_Scatter()</code>: Scatters data from one member across all members of a group.(reverse of <code>MPI_Gather</code>)</li> <li><code>MPI_Gatherv(... , const MPI_Count recvcounts[] , const MPI_Aint displs[] ,...)</code> Gathers variable data from all members of a group to one member.<ul> <li><code>recvcounts[j]</code> is the number of elements that is received from process <code>j</code>.</li> <li>-The data that is received from process <code>j</code> is placed into the <code>recvbuf</code> of the <code>root</code> process offset <code>displs[j]</code> elements from the <code>sendbuf</code> pointer.</li> </ul> </li> <li><code>MPI_Alltoall()</code> Gathers data from and scatters data to all members of a group. The <code>j</code> block that is sent from process <code>i</code> is received by process <code>j</code> and is placed in the <code>i</code> block of the <code>recvbuf</code>.</li> </ul>"},{"location":"Supercomputing/MPI/4.collectives.html#41-broadcast","title":"4.1 Broadcast","text":"Code Puhti Result <ul> <li>use <code>sendbuf</code> as target buffer. <pre><code>MPI_Bcast( sendbuf.data() , size, MPI_INT , 0, MPI_COMM_WORLD);\n</code></pre></li> </ul> <pre><code>Task  0:  0  1  2  3  4  5  6  7\nTask  1:  8  9 10 11 12 13 14 15\nTask  2: 16 17 18 19 20 21 22 23\nTask  3: 24 25 26 27 28 29 30 31\n\nTask  0:  0  1  2  3  4  5  6  7\nTask  1:  0  1  2  3  4  5  6  7\nTask  2:  0  1  2  3  4  5  6  7\nTask  3:  0  1  2  3  4  5  6  7\n</code></pre>"},{"location":"Supercomputing/MPI/4.collectives.html#42-scatter","title":"4.2 Scatter","text":"Code Puhti Result <ul> <li>use <code>scatter</code> function. <pre><code>int blocksize = size / ntasks;\n MPI_Scatter( sendbuf.data() , blocksize , MPI_INT , recvbuf.data(), blocksize, MPI_INT , 0 , MPI_COMM_WORLD);\n</code></pre></li> </ul> <pre><code>Task  0:  0  1  2  3  4  5  6  7\nTask  1:  8  9 10 11 12 13 14 15\nTask  2: 16 17 18 19 20 21 22 23\nTask  3: 24 25 26 27 28 29 30 31\n\nTask  0:  0  1 -1 -1 -1 -1 -1 -1\nTask  1:  2  3 -1 -1 -1 -1 -1 -1\nTask  2:  4  5 -1 -1 -1 -1 -1 -1\nTask  3:  6  7 -1 -1 -1 -1 -1 -1\n</code></pre>"},{"location":"Supercomputing/MPI/4.collectives.html#43-gather","title":"4.3 Gather","text":"Code Puhti Result <ul> <li>Use <code>Gatherv</code> function to specify how many elements received in other processor and where to put it. <pre><code>int offsets[NTASKS] = { 0, 1, 2, 4 };\nint counts[NTASKS] = { 1, 1, 2, 4 };\nMPI_Gatherv(sendbuf.data(), counts[rank], MPI_INT, recvbuf.data(), counts,\n            offsets, MPI_INT, 1, MPI_COMM_WORLD);\n</code></pre></li> <li><code>offset</code> can also be <pre><code>offset[0] = 0; \nfor(int i = 1; i &lt; NTASKS; i++) \n    offsets[i] = offsets[i-1] + counts[i-1]; \n</code></pre></li> </ul> <pre><code>Task  0:  0  1  2  3  4  5  6  7\nTask  1:  8  9 10 11 12 13 14 15\nTask  2: 16 17 18 19 20 21 22 23\nTask  3: 24 25 26 27 28 29 30 31\n\nTask  0: -1 -1 -1 -1 -1 -1 -1 -1\nTask  1:  0  8 16 17 24 25 26 27\nTask  2: -1 -1 -1 -1 -1 -1 -1 -1\nTask  3: -1 -1 -1 -1 -1 -1 -1 -1\n</code></pre>"},{"location":"Supercomputing/MPI/4.collectives.html#44-alltoall","title":"4.4 Alltoall","text":"Code Puhti Result <ul> <li><code>Alltoall</code> will put the data send from <code>j</code> processor to <code>j</code> block in <code>recvbuf</code>. No need to manually arrange index. <pre><code>int blocksize = size / ntasks;\nMPI_Alltoall(sendbuf.data() , blocksize , MPI_INT , recvbuf.data(), blocksize ,MPI_INT, MPI_COMM_WORLD);\n</code></pre></li> </ul> <pre><code>Task  0:  0  1  2  3  4  5  6  7\nTask  1:  8  9 10 11 12 13 14 15\nTask  2: 16 17 18 19 20 21 22 23\nTask  3: 24 25 26 27 28 29 30 31\n\nTask  0:  0  1  8  9 16 17 24 25\nTask  1:  2  3 10 11 18 19 26 27\nTask  2:  4  5 12 13 20 21 28 29\nTask  3:  6  7 14 15 22 23 30 31\n</code></pre>"},{"location":"Supercomputing/MPI/5.debugging.html","title":"5. Debugging","text":"<p>Use the command to create environment.</p> <pre><code>module load ddt\nexport SLURM_OVERLAP=1\nsalloc -A project_2007995 --nodes=1 --ntasks-per-node=2 --time=00:15:00 --partition=test\nddt srun ./buggy\n</code></pre> <p>For the two tasks:</p> <ul> <li>collective needs <code>--ntasks-per-node=4</code></li> <li>exchange needs <code>int stag = 2; int rtag = 1;</code></li> </ul>"},{"location":"Supercomputing/MPI/6.heat_equation.html","title":"6. Heat equation","text":"<p>Take Away</p> <p>Benchmark result by serial code</p> command(./heat) rows/cols time steps temperature Time 2000/2000 500 59.763305/59.281239 3.757034 bottle.dat 200/200 500 86.513850/86.560479 0.035772 bottle.dat 1000 200/200 1000 86.513850/86.726629 0.085675 4000 8000 1000 4000/8000 1000 62.381996/62.122529 60.536838"},{"location":"Supercomputing/MPI/6.heat_equation.html#61-first-step","title":"6.1 First step","text":"heat.hpp/ParallelData() core.cpp/exchange() <pre><code>MPI_Comm_size( MPI_COMM_WORLD, &amp;size);\nMPI_Comm_rank( MPI_COMM_WORLD , &amp;rank);\nnup = (rank == 0) ? MPI_PROC_NULL : rank - 1;\nndown = (rank == size -1) ? MPI_PROC_NULL : rank +1;\n</code></pre> <pre><code>double* sbuf = field.temperature.data(1, 0);\ndouble* rbuf = field.temperature.data(field.nx + 1, 0);\n\n// Send to up, receive from down\nMPI_Send( sbuf , field.ny + 2 , MPI_DOUBLE , parallel.nup , parallel.nup + 100, MPI_COMM_WORLD);\nMPI_Recv( rbuf , field.ny + 2 , MPI_DOUBLE , parallel.ndown , parallel.rank + 100, MPI_COMM_WORLD,MPI_STATUS_IGNORE);\n\n// Send to down, receive from up\nsbuf = field.temperature.data(field.nx, 0);\nrbuf = field.temperature.data();\nMPI_Send( sbuf , field.ny +2 , MPI_DOUBLE , parallel.ndown , parallel.ndown + 200, MPI_COMM_WORLD);\nMPI_Recv( rbuf , field.ny + 2 , MPI_DOUBLE , parallel.nup , parallel.rank + 200, MPI_COMM_WORLD, MPI_STATUS_IGNORE);\n</code></pre> <p>The result using 4 cores, all the temperature result is correct. The time decrease more when the scale is large.</p> command(./heat) temperature Time Serial Time 59.763305/59.281239 1.609080 3.757034 bottle.dat 86.513850/86.560479 0.033550 0.035772 bottle.dat 1000 86.513850/86.726629 0.074306 0.085675 4000 8000 1000 62.381996/62.122529 26.286924 60.536838"},{"location":"Supercomputing/MPI/6.heat_equation.html#62-sendrecv","title":"6.2 Sendrecv","text":"core.cpp/exchange() <pre><code>MPI_Sendrecv( sbuf , field.ny + 2 , MPI_DOUBLE ,parallel.nup  , parallel.nup + 100, rbuf , field.ny + 2, MPI_DOUBLE ,parallel.ndown , parallel.rank + 100 , MPI_COMM_WORLD,MPI_STATUS_IGNORE);\nMPI_Sendrecv( sbuf , field.ny + 2 , MPI_DOUBLE ,parallel.ndown  , parallel.ndown + 200, rbuf , field.ny + 2, MPI_DOUBLE ,parallel.nup , parallel.rank + 200 , MPI_COMM_WORLD,MPI_STATUS_IGNORE);\n</code></pre> <p>Use <code>Sendrecv</code>, time is slightly higher than <code>send</code> and <code>recv</code>.</p> command(./heat) Time Serial Time Send&amp;Recv Time 1.635686 3.757034 1.609080 bottle.dat 0.034436 0.035772 0.033550 bottle.dat 1000 0.074368 0.085675 0.074306 4000 8000 1000 26.322003 60.536838 26.286924"},{"location":"Supercomputing/MPI/6.heat_equation.html#63-collective-communication","title":"6.3 Collective communication","text":"utilities.cpp/average() <ul> <li>reduce result from all processes, and distributed them back.</li> <li>the operation is <code>MPI_SUM</code>. <pre><code>MPI_Allreduce( &amp;local_average , &amp;average , 1 , MPI_DOUBLE , MPI_SUM , MPI_COMM_WORLD);\n</code></pre></li> </ul> <p>The middle two have a obvious time increase.</p> command(./heat) Sendrecv+Allreduce Serial Time Send&amp;Recv Time Sendrecv Time 1.888718 3.757034 1.609080 1.635686 bottle.dat 0.270826 0.035772 0.033550 0.034436 bottle.dat 1000 0.400864 0.085675 0.074306 0.074368 4000 8000 1000 29.689776 60.536838 26.286924 26.322003"},{"location":"Supercomputing/MPI/6.heat_equation.html#64-non-blocking","title":"6.4 Non-blocking","text":"Code <pre><code>MPI_Request request[4];\nMPI_Status status[4];\nMPI_Isend( sbuf , field.ny + 2 , MPI_DOUBLE , parallel.nup , parallel.nup + 100, MPI_COMM_WORLD, &amp; request[0]);\nMPI_Irecv( rbuf , field.ny + 2 , MPI_DOUBLE , parallel.ndown , parallel.rank + 100, MPI_COMM_WORLD,&amp; request[1]);\n// ... \nMPI_Isend( sbuf , field.ny +2 , MPI_DOUBLE , parallel.ndown , parallel.ndown + 200, MPI_COMM_WORLD,&amp; request[2]);\nMPI_Irecv( rbuf , field.ny + 2 , MPI_DOUBLE , parallel.nup , parallel.rank + 200, MPI_COMM_WORLD, &amp; request[3]);\nMPI_Waitall( 4 , request , status);\n</code></pre>"},{"location":"Supercomputing/MPI/6.heat_equation.html#65-using-cartesian-communicator","title":"6.5 Using Cartesian communicator","text":""},{"location":"Supercomputing/MPI/6.heat_equation.html#66-2d-decomposition","title":"6.6 2D decomposition","text":""},{"location":"Supercomputing/MPI/7.communicator.html","title":"7. Communicator","text":"<p>Take Away</p> <ul> <li><code>MPI_Comm_split(MPI_Comm comm, int color, int key, MPI_Comm* newcomm)</code>: split a communicator into subset. Every processes with same <code>color</code> will be in same sub-communicator.</li> <li><code>MPI_Comm_free(MPI_Comm*)</code>: release the resource.</li> </ul>  Code Puhti Result <ul> <li>The first 2 and last 2 will be separated into 2 groups, so the <code>color</code> is set to <code>rank/2 = {0, 1}</code>.</li> <li>When sending data, process with <code>rank=1</code>  in <code>sub_comm</code> sent data to <code>rank=1</code>, so the <code>root</code> is set to 0 in <code>MPI_Reduce</code>.</li> <li>Use <code>MPI_Reduce</code> because <code>rank=0</code> process add the result from another to the value it owns. <pre><code>color = rank/2;\nMPI_Comm_split(MPI_COMM_WORLD, color, rank, &amp;sub_comm);\nMPI_Reduce( sendbuf.data() , recvbuf.data() , size , MPI_INT , MPI_SUM ,0, sub_comm);\nMPI_Comm_free(&amp;sub_comm);\n</code></pre></li> </ul> <pre><code>Task  0:  0  1  2  3  4  5  6  7\nTask  1:  8  9 10 11 12 13 14 15\nTask  2: 16 17 18 19 20 21 22 23\nTask  3: 24 25 26 27 28 29 30 31\n\nTask  0:  8 10 12 14 16 18 20 22\nTask  1: -1 -1 -1 -1 -1 -1 -1 -1\nTask  2: 40 42 44 46 48 50 52 54\nTask  3: -1 -1 -1 -1 -1 -1 -1 -1\n</code></pre>"},{"location":"Supercomputing/MPI/8.message_chain_non_blocking.html","title":"8. Non-blocking communication and persistent communication","text":"<p>Take Away</p> <ul> <li><code>MPI_Request</code>: to store the information of communication</li> <li><code>MPI_Isend(..., *MPI_Request)</code>: non-blocking send</li> <li><code>MPI_Irecv(..., *MPI_Request)</code>: non-blocking recv, there is no <code>MPI_Status</code> because <code>MPI_Irecv</code> ends before communication ends. In this stage there is no <code>status</code>.</li> <li><code>MPI_Send_init/MPI_Recv_init</code> buddle the parameter to a <code>request</code>, using it can start the persistent communication.</li> <li><code>MPI_Wait(*MPI_Request, *MPI_Status)</code>: wait for 1 communication ending.</li> <li><code>MPI_Waitall(count, *MPI_Request, *MPI_Status);</code> wait for all communications ending.</li> </ul>"},{"location":"Supercomputing/MPI/8.message_chain_non_blocking.html#81-non-blocking","title":"8.1 Non-blocking","text":"<p><code>MPI_Isend/Irecv</code> provide non-blocking send and recv. The actions behind:</p> <ul> <li>Set up sending and receiving</li> <li>While communication occurs, computation can continue (of course, computations that do not depend on the information being communicated);</li> <li>Wait for communication to complete (communication happens in the background).</li> </ul>  Code Puhti Result(4) <ul> <li>Create <code>MPI_Status</code> and <code>MPI_Request</code> array.</li> <li>Use <code>MPI_Isend</code> and <code>MPI_Irecv</code> for non-blocking send/recv. The last parameter is <code>*MPI_Request</code>.</li> <li>Collect status by <code>MPI_Waitall</code>. <pre><code>MPI_Status status[2];\nMPI_Request request[2];\nMPI_Isend(message.data(), size, MPI_INT, destination, myid+1, MPI_COMM_WORLD, &amp;request[0]);\nMPI_Irecv(receiveBuffer.data(), size, MPI_INT, source, myid, MPI_COMM_WORLD, &amp;request[1]);\nMPI_Waitall(2, request, status);\n</code></pre></li> </ul> <pre><code>Sender: 0. Sent elements: 10000000. Tag: 1. Receiver: 1\nReceiver: 0. first element -1.\nSender: 1. Sent elements: 10000000. Tag: 2. Receiver: 2\nReceiver: 1. first element 0.\nSender: 2. Sent elements: 10000000. Tag: 3. Receiver: 3\nReceiver: 2. first element 1.\nSender: 3. Sent elements: 10000000. Tag: 4. Receiver: -2\nReceiver: 3. first element 2.\nTime elapsed in rank  0:  0.009\nTime elapsed in rank  1:  0.009\nTime elapsed in rank  2:  0.037\nTime elapsed in rank  3:  0.009\n</code></pre> <p>Investigate the timings with different numbers of MPI tasks (e.g. 2, 4, 8, 16, ...)</p> <ul> <li>2 tasks: Time elapsed in rank  0:  0.009</li> <li>4 tasks: Time elapsed in rank  0:  0.009</li> <li>8 tasks: Time elapsed in rank  0:  0.021</li> <li>16 tasks: Time elapsed in rank  0:  0.014</li> </ul>"},{"location":"Supercomputing/MPI/8.message_chain_non_blocking.html#82-persistent","title":"8.2 persistent","text":"<p>A communication is performed continuously with the same parameters in an inner loop of parallel computation. In this case, the communication can be optimized by bundling these communication parameters once into a persistent communication request, and then continuously using this request to initialize and complete messages.</p>  Code <pre><code>MPI_Send_init(message.data(), size, MPI_INT, destination, myid+1, MPI_COMM_WORLD, &amp;request[0]);\nMPI_Recv_init(receiveBuffer.data(), size, MPI_INT, source, myid, MPI_COMM_WORLD, &amp;request[1]);\nMPI_Start( &amp;request[0]);\nMPI_Start( &amp;request[1]);\nMPI_Waitall(2, request, status);\n</code></pre>"},{"location":"Supercomputing/MPI/9.process_topologies.html","title":"9. Process topologies","text":"<p>Take Away</p> <ul> <li><code>MPI_Cart_create(*comm_old, ndims, dims[],periods[], reorder, *comm_cart)</code>: creates a new communicator using a cartesian topology.<ul> <li><code>dims[]</code> specifying the number of processes in each dimension</li> <li><code>periods</code> specifying whether the grid is periodic (T/F)</li> <li><code>reorder</code> specifying whether the process is given new <code>rank</code>(or keep original) in new communicator.</li> </ul> </li> <li><code>MPI_Cart_shift(*comm_cart, direction, disp, *rank_source, *rank_dest)</code>: move along the specified <code>dimension</code> direction(up+/down-) by offset <code>disp</code>. If the destination is out of range in non-periodic structure, then <code>MPI_PROC_NULL</code> will be returned.</li> <li><code>MPI_Cart_coords(comm_cart, rank, maxdims\uff0c*coords)</code>: Convert the process <code>rank</code> to Cartesian coordinates <code>coords</code> where <code>maxdims</code> is dimension.</li> </ul>"},{"location":"Supercomputing/MPI/9.process_topologies.html#91-cartesian-grid","title":"9.1 Cartesian grid","text":"<p>With 16 tasks and 4 dimension, the cartesian structure is following. The middle highline area in original grid, other bold number are periodic shift.</p> 15 12 13 14 15 12 3 0 1 2 3 0 7 4 5 6 7 4 11 8 9 10 11 8 15 12 13 14 15 12 3 0 1 2 3 0  Code Puhti Result <ul> <li>specifying <code>2</code> in <code>MPI_Cart_create</code> to create 2D cart grid.</li> <li><code>int period[2] = {1, 1};</code> means both dimensions are periodic.</li> <li><code>reorder=1</code> so process will be reordered with new rank.</li> <li><code>MPI_Cart_shift</code> move up/down 1 step in both dimension, the result is store in <code>neighbors[4]</code> in the order of <code>[up, down, left, right]</code>.</li> <li><code>MPI_Cart_coords</code> store the coordinates of current process in <code>coords</code>. <pre><code>MPI_Cart_create( MPI_COMM_WORLD , 2 , dims , period , 1 , &amp;comm2d);\nMPI_Cart_shift(comm2d, 0, 1, &amp;neighbors[0], &amp;neighbors[1]);\nMPI_Cart_shift(comm2d, 1, 1, &amp;neighbors[2], &amp;neighbors[3]);\nMPI_Cart_coords(comm2d, myid, 2, coords);\n</code></pre></li> </ul> <pre><code> 1 =  0  1 neighbors= 13   5   0   2\n 8 =  2  0 neighbors=  4  12  11   9\n11 =  2  3 neighbors=  7  15  10   8\n13 =  3  1 neighbors=  9   1  12  14\n 0 =  0  0 neighbors= 12   4   3   1\n 3 =  0  3 neighbors= 15   7   2   0\n 4 =  1  0 neighbors=  0   8   7   5\n 5 =  1  1 neighbors=  1   9   4   6\n 6 =  1  2 neighbors=  2  10   5   7\n 7 =  1  3 neighbors=  3  11   6   4\n 9 =  2  1 neighbors=  5  13   8  10\n10 =  2  2 neighbors=  6  14   9  11\n12 =  3  0 neighbors=  8   0  15  13\n14 =  3  2 neighbors= 10   2  13  15\n15 =  3  3 neighbors= 11   3  14  12\n 2 =  0  2 neighbors= 14   6   1   3\n</code></pre>"},{"location":"Supercomputing/MPI/9.process_topologies.html#92-chain-cartesian","title":"9.2 Chain Cartesian","text":"Code <ul> <li>1-dim shift, similar to previous <pre><code>MPI_Comm cart_comm;\nint ndims = 1;\nint dims[1] = {ntasks};\n// int period[1] = {0}; // non-periodic\nint periods[1] = {1};\nMPI_Cart_create( MPI_COMM_WORLD , 1 , dims , periods , 1 , &amp;cart_comm);\nMPI_Cart_shift(cart_comm, 0, 1, &amp;source, &amp;destination);\nMPI_Comm_rank(cart_comm, &amp;myid);\n</code></pre></li> </ul> <p>Right matches</p> <ul> <li>Use right <code>communicator</code> and <code>rank</code>/<code>tags</code> matches! Or there will be potential deadlock.</li> </ul>"},{"location":"Tools/GC_architecture_diagramming_tool.html","title":"Google Cloud architecture diagramming tool","text":"<p>https://cloud.google.com/blog/topics/developers-practitioners/introducing-google-cloud-architecture-diagramming-tool</p>"},{"location":"Tools/git.html","title":"Git","text":""},{"location":"Tools/git.html#git-commit-standard-cheat-sheet","title":"Git commit standard cheat sheet","text":"<pre><code>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;\n</code></pre> <p>\ud83d\udd18 Type:</p> <pre><code>feat\uff1anew feature\nfix/to: fix bugs\ndocs\uff1adocumentation \nstyle\uff1achange style, not affect code function\nrefactor\uff1arefactor code, not a new feature or a code change to fix a bug\nperf\uff1aoptimization such as improving performance and experience.\ntest: add testing\nchore\uff1aChanges to the build process or auxiliary tools\nrevert: Roll back to the previous version\nmerge\uff1aCode merge\nsync\uff1aSync bugs on master or branches\n</code></pre> <p>\ud83d\udd18 scope(optical):  commit range</p> <p>\ud83d\udd18 subject: the objective of this commit. </p>"},{"location":"Tools/git.html#git-explain","title":"Git explain","text":""},{"location":"Tools/linux.html","title":"Linux Command Line Tools","text":""},{"location":"Tools/linux.html#0-linux-basic","title":"0. Linux Basic","text":""},{"location":"Tools/linux.html#linux-dictionaries","title":"Linux Dictionaries","text":"Name Usage <code>/proc</code> Not a real file system, but a virtual one. It is maintain by linux kernel and can communicate with kernel. <code>/media</code> contains the mount point of removable devices. They are mounted automatically at insertion."},{"location":"Tools/linux.html#1-file-navigation","title":"1. File &amp; Navigation","text":""},{"location":"Tools/linux.html#view-dictionary-file","title":"View dictionary &amp; File","text":"<p>TakeAway</p> <pre><code>pwd   #Print name of current working directory\ncd    #Change directory\nls    #List directory contents\nhead  #Show first 10 line of a file\ntail  #Show last 10 line of a file\n</code></pre> <p>\ud83d\udd18 Use <code>pwd</code> to get current dictionary</p> <p><code>pwd</code> stands for print working dictionary.</p> <pre><code>$pwd                                 \n/home/oysterpus\n</code></pre> <p>\ud83d\udd18 Use <code>head</code>, <code>tail</code> to view part of the file</p> <p>By default, head/tail output 10 lines. Line</p> <p>\ud83d\udd18 Use <code>more</code>, <code>less</code></p> <p>Once the <code>less</code> program starts, we can view the contents of the file. If the file is longer than one page, we can scroll up and down. To exit less, press <code>q</code>.</p>"},{"location":"Tools/linux.html#create-modify-filedictionary","title":"Create &amp; Modify File/Dictionary","text":"<p>TakeAway</p> <pre><code>touch #Create new file\nshred #Hide file\nnano  #Edit file\n</code></pre> <p>\ud83d\udd18 Use <code>touch</code> to create a new file</p> <pre><code>touch filename\ntouch name1 name2 name3 name4 # every name create a single file\ntouch name{1..10}             # create file with continuous number\ntouch -d tomorrow filename    # -d to specify file create date\n</code></pre> <p>\ud83d\udd18 Use <code>shred</code> to overwrite and hide a file</p> <pre><code>shred filename\n</code></pre> <p>\ud83d\udd18 Use <code>nano</code> and <code>vim</code> to edit a file</p> <p>\ud83d\udd18 Use <code>mkdir</code> to create a new dictionary</p>"},{"location":"Tools/linux.html#compress-file","title":"Compress File","text":"<p>\ud83d\udd18 Use <code>zip</code> to compress file \ud83d\udd18 Use <code>unzip</code> to decompress file</p> <pre><code>zip zip_name filename\nuzip zip_name \n</code></pre>"},{"location":"Tools/linux.html#2-what-is-running-and-how-to-monitorkill","title":"2. What Is Running And How To Monitor/Kill","text":"<p>TakeAway</p> <pre><code>ps       #Report a snapshot of current processes\ntop      #Display tasks\njobs     #List active jobs\nbg       #Place a job in the background\nfg       #Place a job in the foreground\nkill     #Send a signal to a process\nkillall  #Kill processes by name\nshutdown #Shut down or reboot the system\n</code></pre> <p>When a system starts up, the kernel initiates a few of its own activities as  processes and launches a program called <code>init</code>.</p> <p><code>init</code> returns a series of shell scripts called init scripts.</p> <p>A program can launch other programs is expressed in the  process scheme as a parent process producing a child process.</p> <p>Each process is assigned a number called a process ID (PID).</p>"},{"location":"Tools/linux.html#viewing-processes","title":"Viewing Processes","text":"<p>\ud83d\udd18 Use <code>ps</code></p> <pre><code># ps\n  PID TTY          TIME CMD\n 5694 pts/6    00:00:00 sudo\n 5695 pts/6    00:00:00 go\n 5814 pts/6    00:00:00 UTS\n 5818 pts/6    00:00:00 sh\n10120 pts/6    00:00:00 ps\n</code></pre> <ul> <li><code>TTY</code> is short for \u201cteletype\u201d  and refers to the controlling terminal for the process.</li> <li>The <code>TIME</code> field is the amount of CPU time consumed by the process.</li> </ul> <p>\ud83d\udd18 Use <code>pstree</code> Outputs a process list arranged in a tree-like pattern showing the parent-child relationships between processes.</p> <pre><code>init(Ubuntu-22.(1)\u2500\u252c\u2500SessionLeader(333)\u2500\u252c\u2500Relay(335)(334)\u2500\u2500\u2500docker-desktop-(335)\u2500\u252c\u2500{docker-desktop-}(336)\n                   \u2502                    \u2502                                        \u251c\u2500{docker-desktop-}(337)\n                   \u2502                    \u2502                                        \u251c\u2500{docker-desktop-}(338)\n                   \u2502                    \u2502                                        \u251c\u2500{docker-desktop-}(339)\n                   \u2502                    \u2502                                        \u251c\u2500{docker-desktop-}(340)\n(367)\n                   \u2502                    \u2514\u2500Relay(352)(351)\u2500\u2500\u2500docker(352)\u2500\u252c\u2500{docker}(353)\n                   \u2502                                                    \u251c\u2500{docker}(354)\n                   \u2502                                                    \u251c\u2500{docker}(355)\n                   \u2502                                                    \u251c\u2500{docker}(356)\n                   \u2502                    \n                   \u251c\u2500SessionLeader(390)\u2500\u2500\u2500Relay(392)(391)\u2500\u252c\u2500sh(392)\u2500\u2500\u2500sh(393)\u2500\u2500\u2500sh(418)\u2500\u2500\u2500node(422)\u2500\u252c\u2500node(433)\u2500\u252c\u2500zsh(3366)\u2500\u2500\u2500sudo(5693)\u2500\u2500\u2500sudo(5694)\u2500\u2500\u2500go(5695)\u2500\u252c\u2500UTS(5814)\u2500\u252c\u2500sh(5818)\u2500\u2500\u2500pstree(5969)\n                   \u2502                            \n</code></pre> <p>\ud83d\udd18 Use <code>top</code></p> <p>The top program displays a continuously updating (by default, every 3 seconds) display of the system processes listed in order of process activity.</p>"},{"location":"Tools/linux.html#multiple-processes","title":"Multiple processes","text":"<p>\u200b\u591a\u200b\u8fdb\u7a0b\u200b\u95f4\u901a\u4fe1\u200b\u5e38\u7528\u200b\u7684\u200b\u6280\u672f\u624b\u6bb5\u200b\u5305\u62ec\u200b\u5171\u4eab\u5185\u5b58\u200b\u3001\u200b\u6d88\u606f\u200b\u961f\u5217\u200b\u3001\u200b\u4fe1\u53f7\u91cf\u200b.</p> <p>\ud83d\udd18 Use <code>ipcs</code> \u3000\u3000 - <code>ipcs -m</code>\u3000\u3000\u200b\u67e5\u770b\u200b\u7cfb\u7edf\u200b\u5171\u4eab\u5185\u5b58\u200b\u4fe1\u606f\u200b - <code>ipcs -q</code>\u3000\u3000\u200b\u67e5\u770b\u200b\u7cfb\u7edf\u200b\u6d88\u606f\u200b\u961f\u5217\u200b\u4fe1\u606f\u200b - <code>ipcs -s</code>\u3000\u3000\u200b\u67e5\u770b\u200b\u7cfb\u7edf\u200b\u4fe1\u53f7\u91cf\u200b\u4fe1\u606f\u200b, - <code>ipcs [-a]</code>\u3000\u200b\u7cfb\u7edf\u200b\u9ed8\u8ba4\u200b\u8f93\u51fa\u200b\u4fe1\u606f\u200b\uff0c\u200b\u663e\u793a\u200b\u7cfb\u7edf\u200b\u5185\u200b\u6240\u6709\u200b\u7684\u200bIPC\u200b\u4fe1\u606f\u200b</p> <pre><code># ipcs\n------ Message Queues --------\nkey        msqid      owner      perms      used-bytes   messages    \n\n------ Shared Memory Segments --------\nkey        shmid      owner      perms      bytes      nattch     status      \n\n------ Semaphore Arrays --------\nkey        semid      owner      perms      nsems\n</code></pre> <p>\ud83d\udd18 Use <code>ipcrm</code> \u200b\u901a\u8fc7\u200b\u6307\u5b9a\u200bID(<code>[msq/shm/sem][id/key]</code>)\u200b\u5220\u9664\u200bIPC\u200b\u8d44\u6e90\u200b\uff0c\u200b\u540c\u65f6\u200b\u5c06\u200b\u4e0e\u200bIPC\u200b\u5bf9\u8c61\u200b\u5173\u8054\u200b\u7684\u200b\u6570\u636e\u200b\u4e00\u5e76\u200b\u5220\u9664\u200b\uff0c\u200b\u53ea\u6709\u200b\u8d85\u7ea7\u200b\u7528\u6237\u200b\u6216\u200bIPC\u200b\u8d44\u6e90\u200b\u521b\u5efa\u8005\u200b\u80fd\u591f\u200b\u5220\u9664\u200b\u3002</p>"},{"location":"Tools/linux.html#3-know-my-system-and-get-help","title":"3. Know My System and Get Help","text":""},{"location":"Tools/linux.html#what-and-where","title":"What and Where","text":"<p>\ud83d\udd18 Use <code>man</code> to get help message from tools</p> <p>\ud83d\udd18 Use <code>whatis</code> to get a shorter version of <code>man</code></p> <p>\ud83d\udd18 Use <code>apropos</code> to find what tools match your need.</p> <pre><code>apropos -a change user                                    \nchage (1)            - change user password expiry information\nchfn (1)             - change real user name and information\npasswd (1)           - change user password\nucf (1)              - Update Configuration File: preserve user changes in configuration files\n...\n</code></pre>"},{"location":"Tools/linux.html#4-inputoutput-then-redirect","title":"4. Input/Output, then Redirect","text":"<p>TakeAway</p> <pre><code>cat  #Concatenate files\nsort #Sort lines of text\nuniq #Report or omit repeated lines\ngrep #Print lines matching a pattern\nwc   #Print newline, word, and byte counts for each file\nhead #Output the first part of a file\ntail #Output the last part of a file\ntee  #Read from standard input and write to standard output and files\n</code></pre> <p>Standard Output/Input</p> <ul> <li>Programs such as <code>ls</code> actually send their results to a special file called standard output (often expressed as <code>stdout</code>) and their status messages to another file called standard error (<code>stderr</code>).</li> <li><code>stdin</code> default attaches to keyboard</li> </ul>"},{"location":"Tools/linux.html#reading-files","title":"Reading Files","text":"<p>\ud83d\udd18 Use <code>cat</code> to concatenate file</p> <p>The cat command reads one or more files and copies them to standard output.</p> <pre><code>cat filename\ncat movie.mpeg.0* &gt; movie.mpeg # join all split media file together\n</code></pre>"},{"location":"Tools/linux.html#redirection","title":"Redirection","text":"<p>\ud83d\udd18 Use <code>&gt;</code> and <code>&gt;&gt;</code> to redirect output </p> <p><code>&gt;</code> rewrite a file, while <code>&gt;&gt;</code> append the content to the end.</p> <pre><code>ls -l /usr/bin &gt; ls-output.txt\n</code></pre> <p>\ud83d\udd18 Use <code>2&gt;</code> to redirect error</p> <pre><code>ls -l /bin/usr 2&gt; ls-error.txt\n</code></pre> <p>\ud83d\udd18 Use <code>|</code> to pipeline 2 commands</p> <p>Read data from standard input and send to standard output.</p> <pre><code>command1 | command2\n</code></pre>"},{"location":"Tools/linux.html#5-how-disk-store-media","title":"5. How Disk Store Media","text":"<p>Takeaway</p> <pre><code>mount                #Mount a file system\numount               #Unmount a file system\nfsck                 #Check and repair a file system\nfdisk                #Manipulate disk partition table\nmkfs                 #Create a file system\ndd                   #Convert and copy a file\ngenisoimage(mkisofs) #Create an ISO 9660 image file\nwodim(cdrecord)      #Write data to optical storage media\nmd5sum               #Calculate an MD5 checksum\n</code></pre>"},{"location":"Tools/linux.html#mounting-and-unmounting-storage-devices","title":"Mounting and Unmounting Storage Devices","text":"<ul> <li>Mounting: managing a storage device is attaching the device to the file system tree.</li> </ul> <p>A file named <code>/etc/fstab</code> (short for \u201cfile system table\u201d) lists the devices(typically hard disk partitions) that are to be mounted at boot time.</p> <p><code>/etc/fstab</code> contains 6 field:</p> <ul> <li><code>Device</code>: Actual name of a device</li> <li><code>Mount point</code>: The directory where the device is attached to</li> <li><code>File system type</code>: Fourth Extended File System(ext4), FAT16(msdos), FAT32 (vfat), NTFS (ntfs), CD-ROM (iso9660)</li> <li><code>Options</code>: read-only, gid ...</li> <li><code>Frequency</code>: backed up action when <code>dump</code> command</li> <li><code>Order</code>: checked with the <code>fsck</code> command</li> </ul> <pre><code>LABEL=/12       /        ext4   defaults       1 1\nLABEL=/home     /home    ext4   defaults       1 2\nLABEL=/boot     /boot    ext4   defaults       1 2\ntmpfs           /dev/shm tmpfs  defaults       0 0\ndevpts          /dev/pts devpts gid=5,mode=620 0 0\nsysfs           /sys     sysfs  defaults       0 0\nproc            /proc    proc   defaults       0 0\nLABEL=SWAP-sda3 swap     swap   defaults       0 0\n</code></pre> <p>\ud83d\udd18 Use <code>mount</code></p> <p><code>mount</code> command is used to view the file system that currently mounted.</p> <pre><code>&gt; mount                         \nnone on /mnt/wsl type tmpfs (rw,relatime)\nnone on /usr/lib/wsl/drivers type 9p (ro,nosuid,nodev,noatime,dirsync,aname=drivers;fmask=222;dmask=222,mmap,access=client,msize=65536,trans=fd,rfd=7,wfd=7)\nnone on /usr/lib/wsl/lib type overlay (rw,relatime,lowerdir=/gpu_lib_packaged:/gpu_lib_inbox,upperdir=/gpu_lib/rw/upper,workdir=/gpu_lib/rw/work)\n/dev/sdc on / type ext4 (rw,relatime,discard,errors=remount-ro,data=ordered)\n</code></pre> <p>The format of the listing is as follows:</p> <ul> <li><code>device</code> on <code>mount_point</code> type <code>filesystem_type</code> (options).</li> </ul> <p>\ud83d\udd18 Use <code>umount</code> &amp; <code>mount</code> to change mount point</p> <pre><code>umount /dev/sdc\nmkdir /mnt/cdrom\nmount -t iso9660 /dev/sdc /mnt/cdrom\n</code></pre> <p>Use <code>-t</code> to specify the file system type, followed by <code>[src] [dst]</code>.</p>"},{"location":"Tools/linux.html#creating-new-file-systems","title":"Creating New File Systems","text":""},{"location":"Tools/linux.html#testing-and-repairing-file-systems","title":"Testing and Repairing File Systems","text":""},{"location":"Tools/linux.html#moving-data-directly-to-and-from-devices","title":"Moving Data Directly to and from Devices","text":""},{"location":"Tools/linux.html#7-network","title":"7. Network","text":"<p>Takeaway</p> <pre><code>ping        #Send an ICMP ECHO_REQUEST to network hosts\ntraceroute  #Print the route packets trace to a network host\nip          #Show/manipulate routing, devices, policy routing, and tunnels\nnetstat     #Print network connections, routing tables, interface statistics, masquerade connections, and multicast memberships\nftp         #Internet file transfer program\nwget        #Non-interactive network downloader\nssh         #OpenSSH SSH client (remote login program)\n</code></pre>"},{"location":"Tools/linux.html#examining-and-monitoring-a-network","title":"Examining and Monitoring a Network","text":"<p>\ud83d\udd18 Use <code>ping</code></p> <p>\ud83d\udd18 Use <code>traceroute</code></p> <p>\ud83d\udd18 Use <code>ip</code>(<code>ifconfig</code>)</p> <p><code>ip</code> is the newer version of <code>ifconfig</code>.</p> <p>With ip, we can examine a system\u2019s network interfaces and routing table.</p> <pre><code>#ip a             \n1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1472 qdisc mq state UP group default qlen 1000\n    link/ether 00:15:5d:e9:80:d4 brd ff:ff:ff:ff:ff:ff\n    inet 172.20.209.32/20 brd 172.20.223.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::215:5dff:fee9:80d4/64 scope link \n       valid_lft forever preferred_lft forever\n</code></pre> <ul> <li>2 interfaces: <code>lo</code> is loopback interface,<code>eth0</code> is the Ethernet interface.</li> <li>In the first line of each interface, the <code>UP</code> words indicates the network interface is enabled.</li> <li>A valid IP address verifies that the DHCP is working.</li> </ul>"},{"location":"Tools/linux.html#transporting-files-over-a-networkftp-wget-curl","title":"Transporting Files over a Network(<code>ftp</code>, <code>wget</code>, <code>curl</code>)","text":"<p>\ud83d\udd18 Use <code>ftp</code> to transfer file via File Transfer Protocol</p> <p>URIs starting with the protocol <code>ftp://.</code></p> <p>\ud83d\udd18 Use <code>curl</code> to download a file from an url and redirect to another filename</p>"},{"location":"Tools/linux.html#secure-communication-with-remote-hostsssh","title":"Secure Communication with Remote Hosts(<code>ssh</code>)","text":"<p>\ud83d\udd18 Use <code>ssh</code></p> <p>SSH consists of two parts. An SSH server runs on the remote host, listening for incoming connections on port 22, while an SSH client is used on the local system to communicate with the remote server.</p> <ul> <li>It authenticates that the remote host is who it says it is (thus preventing so-called MITM attacks).</li> <li>It encrypts all of the communications between the local and remote hosts.</li> </ul> <pre><code>$ ssh username@1.1.1.1\n</code></pre>"},{"location":"Tools/linux.html#8-how-am-i-what-can-i-do","title":"8. How AM I? What Can I DO?","text":"<p>Takeaway</p> <pre><code>id        #Display user identity\nchmod     #Change a file\u2019s mode\numask     #Set the default file permissions\nsu        #Run a shell as another user\nsudo      #Execute a command as another user\nchown     #Change a file\u2019s owner\nchgrp     #Change a file\u2019s group ownership\npasswd    #Change a user\u2019s password\n</code></pre>"},{"location":"Tools/linux.html#owners-group-members-and-everybody-else","title":"Owners, Group Members, and Everybody Else","text":"<p>\ud83d\udd18 Use <code>id</code> Find out identity. Include 3 fields: <code>uid</code>, <code>gid</code>, <code>groups</code>.</p> <pre><code>uid=1000(oysterpus) gid=1000(oysterpus) groups=1000(oysterpus),4(adm),20(dialout),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),116(netdev),1001(docker)\n</code></pre> <p>User accounts are defined in the <code>/etc/passwd</code> file, and groups are defined in the <code>/etc/group</code> file.</p>"},{"location":"Tools/linux.html#9-miscellaneous","title":"9. Miscellaneous","text":""},{"location":"Tools/markdown.html","title":"Markdown / Mkdocs","text":""},{"location":"Tools/markdown.html#markdown-code-block","title":"Markdown Code block","text":"bubble_sort.py<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"Tools/markdown.html#markdown-link-and-url","title":"Markdown Link and URL","text":"<p>Note</p> <ol> <li>\u200b\u94fe\u63a5\u200b\u6587\u672c\u200b\u653e\u5728\u200b\u4e2d\u62ec\u53f7\u200b\u5185\u200b</li> <li>\u200b\u94fe\u63a5\u200b\u5730\u5740\u200b\u653e\u5728\u200b\u540e\u9762\u200b\u7684\u200b\u62ec\u53f7\u200b\u4e2d\u200b</li> <li>\u200b\u94fe\u63a5\u200btitle\u200b\u53ef\u200b\u9009\u200b\uff08\u200b\u5f53\u200b\u9f20\u6807\u60ac\u505c\u200b\u5728\u200b\u94fe\u63a5\u200b\u4e0a\u200b\u65f6\u4f1a\u200b\u51fa\u73b0\u200b\u7684\u200b\u6587\u5b57\u200b\uff09</li> <li>\u200b\u5c16\u62ec\u53f7\u200b\u7b80\u5355\u200b\u5904\u7406\u200bURL/email</li> <li>\u200b\u5f15\u7528\u200b\u7c7b\u578b\u200b\u94fe\u63a5\u200b</li> </ol> <p>\u200b\u8d85\u94fe\u63a5\u200bMarkdown\u200b\u8bed\u6cd5\u200b\u4ee3\u7801\u200b\uff1a \u200b\u8d85\u94fe\u63a5\u200b\u663e\u793a\u200b\u540d\u200b <code>[\u200b\u8d85\u94fe\u63a5\u200b\u663e\u793a\u200b\u540d\u200b](\u200b\u8d85\u94fe\u63a5\u200b\u5730\u5740\u200b \"\u200b\u8d85\u94fe\u63a5\u200btitle\")</code></p> <p>\u200b\u5bf9\u5e94\u200b\u7684\u200bHTML\u200b\u4ee3\u7801\u200b\uff1a\u200b\u8d85\u94fe\u63a5\u200b\u663e\u793a\u200b\u540d\u200b <code>&lt;a href=\"\u200b\u8d85\u94fe\u63a5\u200b\u5730\u5740\u200b\" title=\"\u200b\u8d85\u94fe\u63a5\u200btitle\"&gt;\u200b\u8d85\u94fe\u63a5\u200b\u663e\u793a\u200b\u540d\u200b&lt;/a&gt;</code></p> <p>\u200b\u4f7f\u7528\u200b\u5c16\u62ec\u53f7\u200b\u53ef\u4ee5\u200b\u5f88\u200b\u65b9\u4fbf\u200b\u5730\u200b\u628a\u200bURL\u200b\u6216\u8005\u200bemail\u200b\u5730\u5740\u200b\u53d8\u6210\u200b\u53ef\u200b\u70b9\u51fb\u200b\u7684\u200b\u94fe\u63a5\u200b\u3002 <code>&lt;abc@cde.a&gt;</code> abc@cde.a</p> <p>\u200b\u5f15\u7528\u200b\u7c7b\u578b\u200b\u94fe\u63a5\u200b\u5206\u4e3a\u200b\u4e24\u200b\u90e8\u5206\u200b\uff1a</p> <ol> <li> <p>\u200b\u4e0e\u200b\u6587\u672c\u200b\u4fdd\u6301\u200b\u5185\u8054\u200b\u7684\u200b\u90e8\u5206\u200b    \u200b\u7b2c\u4e00\u7ec4\u200b\u65b9\u62ec\u53f7\u200b\u5305\u56f4\u200b\u5e94\u200b\u663e\u793a\u200b\u4e3a\u200b\u94fe\u63a5\u200b\u7684\u200b\u6587\u672c\u200b\u3002\u200b\u7b2c\u4e8c\u7ec4\u200b\u62ec\u53f7\u200b\u663e\u793a\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u6807\u7b7e\u200b\uff0c\u200b\u8be5\u200b\u6807\u7b7e\u200b\u7528\u4e8e\u200b\u6307\u5411\u200b\u60a8\u200b\u5b58\u50a8\u200b\u5728\u200b\u6587\u6863\u200b\u5176\u4ed6\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u94fe\u63a5\u200b\u3002 \u200b\u94fe\u63a5\u200b1 \u200b\u94fe\u63a5\u200b2</p> <pre><code>[\u200b\u94fe\u63a5\u200b1][1]   [\u200b\u94fe\u63a5\u200b2][2]\n</code></pre> </li> <li> <p>\u200b\u5b58\u50a8\u200b\u5728\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u5176\u4ed6\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u90e8\u5206\u200b\uff0c\u200b\u4ee5\u200b\u4f7f\u200b\u6587\u672c\u200b\u6613\u4e8e\u200b\u9605\u8bfb\u200b\u3002</p> <pre><code>[1]: https://www.baidu.com\n[2]: linux.md\n</code></pre> </li> </ol>"},{"location":"Tools/markdown.html#markdown-table","title":"Markdown table","text":"Syntax Description Header Title Paragraph Text"},{"location":"Tools/markdown.html#mkdocs","title":"mkdocs \u200b\u63d2\u4ef6","text":""},{"location":"Tools/markdown.html#amonition","title":"amonition","text":"<p>\u200b\u901a\u8fc7\u200b <code>!!!</code> \u200b\u8bed\u6cd5\u200b\u6765\u200b\u7ed9\u5b9a\u200b\u4e00\u4e9b\u200b\u544a\u8b66\u200b</p> <pre><code>!!! note Name\n</code></pre> <p>\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4ee5\u4e0b\u200b\u98ce\u683c\u200b\uff0c\u200b\u7f51\u9875\u200b\u9884\u89c8\u200b\u548c\u200bvscode\u200b\u4e0d\u592a\u200b\u4e00\u6837\u200b</p> <p>Warning</p> <p>Danger</p> <p>Bug</p> <p>Note</p> <p>Abstract</p> <p>Info</p> <p>Example</p> <p>Hint</p> <p>Tip</p> <p>Success</p> <p>Question</p> <p>Quote</p> <p>If use <code>???</code>, then the block can be folded( only visible in browser, not in vscode preview).</p> Note <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Lorem ipsum</p> <p>If use <code>inline end</code> ,then the next line will be inlined to right side.</p> <p>The next next line will not be inlined, for example this line.</p> <p>Lorem ipsum</p> <p>If use <code>inline</code> ,then the next line will be inlined to left side.</p> <p>\u200b\u4f7f\u7528\u200b <code>===</code> \u200b\u80fd\u591f\u200b\u8fdb\u200b\u6807\u7b7e\u200b\u5207\u6362\u200b\uff0c\u200b\u5192\u53f7\u200b\u524d\u200b\u7684\u200b\u5185\u5bb9\u200b\u6307\u5b9a\u200b\u56fe\u6807\u200b</p>  Tab A Tab B <p>Content of part A</p> <p>Content of part B</p>"},{"location":"Leetcode/tags.html","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"},{"location":"Leetcode/tags.html#array","title":"Array","text":"<ul> <li>1207. Unique Number of Occurrences</li> <li>134. Gas Station</li> <li>380. Insert Delete GetRandom O(1)</li> </ul>"},{"location":"Leetcode/tags.html#bst","title":"BST","text":"<ul> <li>230. Kth Smallest Element in a BST</li> <li>530. Minimum Absolute Difference in BST</li> <li>98. Validate Binary Search Tree</li> </ul>"},{"location":"Leetcode/tags.html#easy","title":"Easy","text":"<ul> <li>1207. Unique Number of Occurrences</li> <li>530. Minimum Absolute Difference in BST</li> </ul>"},{"location":"Leetcode/tags.html#greedy","title":"Greedy","text":"<ul> <li>134. Gas Station</li> </ul>"},{"location":"Leetcode/tags.html#hash-table","title":"Hash Table","text":"<ul> <li>1207. Unique Number of Occurrences</li> <li>380. Insert Delete GetRandom O(1)</li> </ul>"},{"location":"Leetcode/tags.html#medium","title":"Medium","text":"<ul> <li>134. Gas Station</li> <li>230. Kth Smallest Element in a BST</li> <li>380. Insert Delete GetRandom O(1)</li> <li>98. Validate Binary Search Tree</li> </ul>"},{"location":"Leetcode/tags.html#tree","title":"Tree","text":"<ul> <li>230. Kth Smallest Element in a BST</li> <li>530. Minimum Absolute Difference in BST</li> <li>98. Validate Binary Search Tree</li> </ul>"}]}